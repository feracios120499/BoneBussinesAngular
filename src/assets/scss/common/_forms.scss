@import "variables.scss";

.b1 {
  &-datepicker {
    position: relative;
    display: flex;
    align-items: center;

    &__label {
      margin-right: 8px;
      color: var(--color-dark);
      @include medium;
    }

    &__input {
      @include base;
      @include bold;
      width: 104px;
      padding-left: 16px;
      height: 40px;
      border: 1px solid var(--color-dark-500);
      color: var(--color-dark);
      border-radius: 2px * $border-radius-factor;
      transition: all 0.15s $animation-timing;
      margin: 0;
      position: relative;
      background: none;
      border-right: 0;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
      &.picker-open {
        border-color: var(--color-info) !important;
        box-shadow: 0 0 0 3px rgba($color-info, 0.4) !important;
        & + .ub-icons {
          color: var(--color-info) !important;
        }
      }
    }

    &__addon {
      @include medium;
      display: flex;
      align-items: center;
      justify-content: center;
      height: 40px;
      padding: 0 12px;
      border: 1px solid var(--color-dark-500);
      color: var(--color-dark);
      border-radius: 2px * $border-radius-factor;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      transition: all 0.15s $animation-timing;

      &:hover {
        background-color: var(--color-light-200);
      }
    }
  }

  &-input {
    position: relative;
    width: 100%;

    &__label {
      @include base;
      padding: 10px;
      position: absolute;
      opacity: 0.6;
      transform: translateX(-100%);

      &_top {
        transform: none;
        top: -32px;
        left: -8px;
      }

      @media (min-width: 768px) and (max-width: 991px) {
        transform: translate(-10px, -32px);
      }

      @media (max-width: 767px) {
        transform: translate(-10px, -32px);
      }
    }

    &__control {
      @include base;
      display: flex;
      justify-content: left;
      align-items: center;
      position: relative;
      height: 38px;
      z-index: 5;
      width: 100%;
      padding: 10px 16px;
      background-color: transparent;
      box-shadow: none;
      color: var(--color-dark);
      border: 1px solid rgba(var(--color-dark-rgb), 0.6);
      border-radius: 2px * $border-radius-factor;
      transition: all 0.15s $animation-timing;

      &::placeholder {
        color: rgba(var(--color-dark-rgb), 0.6);
        transition: all 0.15s $animation-timing;
      }
      & + .ub-icons {
        color: rgba(var(--color-dark-rgb), 0.6);
      }
      &_textarea {
        height: auto;
      }

      @media (min-width: 768px) and (max-width: 991px) {
        margin-top: 40px;
      }

      @media (max-width: 767px) {
        margin-top: 40px;
      }

      &:hover {
        border-color: rgba(var(--color-dark-rgb), 0.9);
        & + .ub-icons {
          color: rgba(var(--color-dark-rgb), 0.9);
        }
        &::placeholder {
          color: rgba(var(--color-dark-rgb), 0.9);
        }
      }

      &:focus {
        border-color: var(--color-info);
        box-shadow: 0 0 0 3px rgba($color-info, 0.4);
      }

      &:disabled,
      &.ng-disabled {
        cursor: not-allowed;
        opacity: 0.6;
      }

      &.ng-invalid.ng-touched {
        border-color: var(--color-error);
      }

      &.ng-invalid.ng-touched:focus {
        border-color: var(--color-error);
        box-shadow: 0 0 0 3px rgba($color-error, 0.2);
      }
    }

    .form-control {
      @include base;
      display: flex;
      justify-content: left;
      align-items: center;
      position: relative;
      height: 38px;
      z-index: 5;
      width: 100%;
      padding: 10px 16px;
      background-color: transparent;
      box-shadow: none;
      color: var(--color-dark);
      border: 1px solid var(--color-dark-500);
      border-radius: 2px * $border-radius-factor;
      transition: all 0.15s $animation-timing;
      &.ui-select-multiple{
        height: auto;
      }
      &:hover {
        border-color: rgba(var(--color-dark-500-rgb), 0.8);
        box-shadow: none;
      }

      &:focus {
        border-color: var(--color-info);
        box-shadow: 0 0 0 3px rgba($color-info, 0.4);
      }

      &:disabled,
      &.ng-disabled {
        cursor: not-allowed;
        opacity: 0.6;
      }

      &.ng-invalid.ng-touched {
        border-color: var(--color-error);
      }

      &.ng-invalid.ng-touched:focus {
        border-color: var(--color-error);
        box-shadow: 0 0 0 3px rgba($color-error, 0.2);
      }
    }

    &__validate-message {
      @include small;
      padding: 8px 0;
      color: var(--color-error);
    }

    &__alert {
      @include base;
      padding: 16px;
      width: 100%;
      margin-top: 8px;
      border: 1px solid transparent;
      border-radius: 2px * $border-radius-factor;

      &_info {
        background-color: rgba($color-info, 0.2);
        border-color: var(--color-info);
      }
    }
  }

  &-checkbox {
    cursor: pointer;

    &__check {
      position: relative;
      display: inline-block;
      width: 20px;
      height: 20px;
      margin-top: -2px;
      margin-right: 4px;
      vertical-align: middle;
      line-height: 1;
      background-color: var(--color-light);
      border: 1px solid var(--color-dark-500);
      border-radius: 2px * $border-radius-factor;
    }
    &__check:before {
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      background-color: transparent;
      content: "";
      transition: all 0.15s $animation-timing;
    }

    &__label {
      padding: 4px;
      cursor: pointer;
    }

    &__hidden {
      position: absolute;
      opacity: 0;
    }

    &__hidden:checked + &__check {
      border-color: var(--color-info);
    }
    &__hidden:checked + &__check:before {
      top: 5px;
      left: 5px;
      width: 8px;
      height: 8px;
      background-color: var(--color-info);
    }

    &__hidden[disabled] + &__check {
      cursor: not-allowed;
      opacity: 0.6;
    }
    &__hidden[type="radio"] + &__check,
    &__hidden[type="radio"] + &__check:before {
      border-radius: 50%;
    }
  }
}

.ui-select-toggle {
  transition: all 0.15s $animation-timing;
  &:hover {
    border-color: var(--color-info) !important;
    background-color: var(--color-info) !important;
  }

  &:active,
  &:focus {
    border-color: var(--color-info) !important;
    background-color: var(--color-info) !important;
    box-shadow: 0 0 0 3px rgba($color-info, 0.4) !important;
  }
}

.btn-default-focus {
  background-color: var(--color-light) !important;
  color: var(--color-light) !important;
  box-shadow: none !important;
}

.ui-select-bootstrap > .ui-select-choices,
.ui-select-bootstrap > .ui-select-no-choice {
  background-color: var(--color-light);
  margin-top: 8px;
  padding: 0;
  box-shadow: 0 8px 24px rgba($color-dark, 0.2), 0 2px 4px rgba($color-dark, 0.1), inset 0 0 2px rgba($color-light, 0.2);
}

.ui-select-bootstrap .ui-select-choices-row {
  & > span {
    cursor: pointer;
    display: block;
    padding: 8px 16px;
    clear: both;
    font-weight: 400;
    line-height: 1.42857143;
    color: var(--color-dark);
    white-space: nowrap;

    &:hover,
    &:focus {
      text-decoration: none;
      color: var(--color-dark);
      background-color: var(--color-light-200);
    }
  }

  &.active > span {
    color: $color-light;
    text-decoration: none;
    outline: 0;
    background-color: var(--color-info) !important;

    &:hover,
    &:focus {
      text-decoration: none;
      color: $color-light;
      background-color: var(--color-info);
      opacity: 0.9;
    }
  }
}

.ui-select-multiple:hover .ui-select-match-item.dropping-before:before {
  content: "";
  position: absolute;
  top: 0;
  right: 100%;
  height: 100%;
  margin-right: 2px;
  border-left: 1px solid var(--color-info) !important;
}

.ui-select-multiple:hover .ui-select-match-item.dropping-after:after {
  content: "";
  position: absolute;
  top: 0;
  left: 100%;
  height: 100%;
  margin-left: 2px;
  border-right: 1px solid var(--color-info);
}

.ac-container {
  .ac-menu {
    background: var(--color-light);
    border-radius: 2px * $border-radius-factor;
    border: 1px solid var(--color-light-200);
    box-shadow: 0 8px 24px rgba($color-dark, 0.2), 0 2px 4px rgba($color-dark, 0.1),
      inset 0 0 2px rgba($color-light, 0.2);

    .ac-menu-item {
      border-bottom: 1px solid var(--color-light-300);
      line-height: 1;

      &:hover {
        background-color: var(--color-light-200);
      }

      & > a {
        padding: 12px 8px;
        line-height: 1;

        p {
          @include base;
          padding: 4px 0;
        }
      }
    }
  }
}

input.ng-invalid.ng-touched,
input.ng-invalid.ng-touched:focus,
textarea.ng-invalid.ng-touched,
textarea.ng-invalid.ng-touched:focus {
  border-color: var(--color-error);
}
