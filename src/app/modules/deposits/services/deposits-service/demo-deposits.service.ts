import { Injectable } from '@angular/core';
import { Observable, of } from 'rxjs';

import { BaseDepositsService } from './base-deposits.service';
import { Deposit } from '../../models/deposit.model';

@Injectable({
  providedIn: 'root',
})
export class DemoDepositsService extends BaseDepositsService {
  private deposits1: Deposit[] = [];
  private deposits2: Deposit[] = [
    {
      id: 1227401.0,
      currencyId: 980,
      currencyCode: 'UAH',
      customerId: 779947.0,
      typeId: 39,
      typeName: 'UAH "Максимальний"    > 12(2615)',
      rate: 5.5,
      accToReplenish: {
        bankCode: '302076',
        bankName: 'Банк Галактичної Імперії',
        taxCode: '3456789012',
        name: 'Депозитний рахунок (980)',
        accNumber: 'UA473020760000000260012340001',
        accCurrencyCode: 'UAH',
        accId: null,
        accCurrencyId: null,
      },
      replenishDefaultPurpose: null,
      interestAccrual: 23023.0,
      interestPaid: 4950.0,
      transferBankId: '302076',
      bankId: '302076',
      transferAccountNumber: '260078441002',
      transferAccountName: 'Секретно',
      transferCustomerCode: '1234567890',
      balance: 7275600.0,
      beginDate: new Date('2013-08-15T00:00:00'),
      endDate: new Date('2016-08-14T00:00:00'),
      termAdd: null,
      termAddDate: null,
      minAddSum: 500000.0,
      isCapitalization: false,
      maxProlongations: 0,
      isMoneyBox: false,
      isProlongation: true,
      comments: null,
      isReplenished: false,
    },
    {
      id: 1227111.0,
      currencyId: 980,
      currencyCode: 'UAH',
      customerId: 7794857.0,
      typeId: 40,
      typeName: 'UAH "Активний"',
      rate: 4.5,
      accToReplenish: {
        bankCode: '302076',
        bankName: 'Банк Галактичної Імперії',
        taxCode: '3456789012',
        name: 'Депозитний рахунок (980)',
        accNumber: 'UA473020760000000260012340001',
        accCurrencyCode: 'UAH',
        accId: null,
        accCurrencyId: null,
      },
      replenishDefaultPurpose: null,
      interestAccrual: 3023.0,
      interestPaid: 950.0,
      transferBankId: '302076',
      bankId: '302076',
      transferAccountNumber: '260078441002',
      transferAccountName: 'Секретно',
      transferCustomerCode: '1234567890',
      balance: 15555600.0,
      beginDate: new Date('2020-05-15T00:00:00'),
      endDate: new Date('2020-10-14T00:00:00'),
      termAdd: null,
      termAddDate: null,
      minAddSum: 5000000.0,
      isCapitalization: false,
      maxProlongations: 10,
      isMoneyBox: false,
      isProlongation: false,
      comments: null,
      isReplenished: true,
    },
    {
      id: 1215111.0,
      currencyId: 980,
      currencyCode: 'UAH',
      customerId: 7794857.0,
      typeId: 40,
      typeName: 'UAH "Пролонгований"',
      rate: 4.5,
      accToReplenish: {
        bankCode: '302076',
        bankName: 'Банк Галактичної Імперії',
        taxCode: '3456789012',
        name: 'Депозитний рахунок (980)',
        accNumber: 'UA473020760000000260012340001',
        accCurrencyCode: 'UAH',
        accId: null,
        accCurrencyId: null,
      },
      replenishDefaultPurpose: null,
      interestAccrual: 2323.0,
      interestPaid: 490.0,
      transferBankId: '302076',
      bankId: '302076',
      transferAccountNumber: '260078441002',
      transferAccountName: 'Секретно',
      transferCustomerCode: '1234567890',
      balance: 15555600.0,
      beginDate: new Date('2020-05-10T00:00:00'),
      endDate: new Date('2020-12-14T00:00:00'),
      termAdd: null,
      termAddDate: null,
      minAddSum: 5000000.0,
      isCapitalization: false,
      maxProlongations: 10,
      isMoneyBox: false,
      isProlongation: true,
      comments: null,
      isReplenished: false,
    },
  ];

  private deposits: { [id: string]: Deposit[] } = {
    '565bbaee-37a6-48ff-b3e8-f4822c23c5c1': this.deposits1,
    '565bbaee-37a6-48ff-b3e8-f4822c23c5c2': this.deposits2,
  };

  getDeposits(clientId: string): Observable<Deposit[]> {
    return of(this.deposits[clientId]);
  }
}
