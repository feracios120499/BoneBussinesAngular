{"version":3,"file":"src_app_modules_accounts_modules_account_account_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAmC;;AAEnC;AACA;AACA,kDAAkD,MAAM,OAAO,KAAK,4BAA4B,EAAE,gCAAgC,EAAE,+BAA+B,KAAK,yCAAyC,KAAK;AACtN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,gBAAgB,iDAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6HAA6H,UAAU;AACvI;AACA;AACA,gBAAgB,iDAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sIAAsI,UAAU;AAChJ;AACA;AACA,gBAAgB,iDAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0HAA0H,UAAU;AACpI;AACA;AACA,gBAAgB,iDAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mIAAmI,UAAU;AAC7I;AACA;AACA,gBAAgB,iDAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2HAA2H,eAAe;AAC1I;AACA;AACA,gBAAgB,iDAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2HAA2H,eAAe;AAC1I;AACA;AACA,gBAAgB,iDAAK;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,gBAAgB,iDAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6IAA6I,aAAa;AAC1J;AACA;AACA,gBAAgB,iDAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,YAAY,iDAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEoL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/oBlH;AACN;AAEoC;AAI1C;AACgB;AAChB;AAC5B;AACyC;AAC7B;AACoF;AAG3E;AACI;AACK;;;;;;AAKjD,MAAM,kBAAkB;IAC3B,YACY,QAAiB,EACjB,KAAY,EACZ,eAA4B,EAC5B,gBAAkC;QAHlC,aAAQ,GAAR,QAAQ,CAAS;QACjB,UAAK,GAAL,KAAK,CAAO;QACZ,oBAAe,GAAf,eAAe,CAAa;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAE9C,oBAAe,GAAG,4DAAY,CAAC,GAAG,EAAE,CAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,uEAAiC,CAAC,EACzC,+DAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,qEAA6B,CAAC,CAAC,EAChE,oDAAG,CAAC,CAAC,CAAC,MAAM,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,IAAI,uDAAc,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAChG,CAAC,CAAC;QAEP,wBAAmB,GAAG,4DAAY,CAAC,GAAG,EAAE,CACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,2EAAqC,CAAC,EAC7C,+DAAc,CACV,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,sFAA8C,CAAC,CACpE,EACD,oDAAG,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,EAAE,CACpB,oEAA8B,CAAC,EAAE,SAAS,EAAE,WAAW,CAAC,SAAS,EAAE,MAAM,EAAE,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CACxG,CAAC,CAAC;QAEP,iBAAY,GAAG,4DAAY,CAAC,GAAG,EAAE,CAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,oEAA8B,CAAC,EACtC,0DAAS,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,+DAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,EACnE,0DAAS,CAAC,CAAC,OAAO,EAAE,EAAE,CAClB,IAAI,CAAC,eAAe,CAAC,UAAU,CAC3B,OAAO,CAAC,IAAI,CAAC,MAAM,EACnB,OAAO,CAAC,IAAI,CAAC,SAAS,EACtB,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAClB,oDAAG,CAAC,OAAO,CAAC,EAAE,CAAC,2EAAqC,CAAC,OAAO,CAAC,CAAC,CACjE,CACR,CACJ,CAAC,CAAC;QAEP,wBAAmB,GAAG,4DAAY,CAAC,GAAG,EAAE,CACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,GAAG;YACN,2EAAqC;YACrC,6EAAuC;SAC1C,CAAC,EACF,oDAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,0EAAoC,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CACrF,CACJ,CAAC;QAEF,oBAAe,GAAG,4DAAY,CAAC,GAAG,EAAE,CAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,uEAAiC,CAAC,EACzC,+DAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,qEAA6B,CAAC,CAAC,EAChE,oDAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,6EAAuC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CACzE,CAAC,CAAC;QAEP,0BAAqB,GAAG,4DAAY,CAAC,GAAG,EAAE,CACtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,6EAAuC,CAAC,EAC/C,0DAAS,CAAC,MAAM,CAAC,EAAE,CAAC,+DAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,EACjE,+DAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,sFAA8C,CAAC,CAAC,EACjF,0DAAS,CAAC,CAAC,CAAC,OAAO,EAAE,WAAW,CAAC,EAAE,EAAE,CACjC,IAAI,CAAC,eAAe,CAAC,aAAa,CAC9B,WAAW,CAAC,MAAM,EAClB,WAAW,CAAC,SAAS,EACrB,OAAO,CAAC,QAAQ,EAChB,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CACd,+DAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,2EAAmC,CAAC,CAAC,EACtE,uDAAM,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,OAAO,KAAK,SAAS,CAAC,EAC9C,oDAAG,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,OAAuB,CAAC,EAC7C,oDAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,6EAAuC,iCAAM,OAAO,KAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,IAAG,CAAC,EAClG,2DAAU,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,yCAAE,CAAC,6EAAuC,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAC1F,CACR,CAAC,CACT,CAAC;QAEF,0BAAqB,GAAG,4DAAY,CAAC,GAAG,EAAE,CACtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,6EAAuC,CAAC,EAC/C,oDAAG,CAAC,GAAG,EAAE,CAAC,oFAAiC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,qCAAqC,CAAC,EAAE,CAAC,CAAC,CAClI,CAAC,CAAC;QAEP,6BAAwB,GAAG,4DAAY,CAAC,GAAG,EAAE,CACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAmC,4DAAmB,CAAC,EAC7D,uDAAM,CAAC,CAAC,WAA6C,EAAE,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,iEAA6B,CAAC,CAAC,EAC1H,+DAAc,CACV,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,+EAAuC,CAAC,CAAC,IAAI,CAC3D,uDAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAChB,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAA2C,CAAC,CAAC,CAC7D,EACD,uDAAM,CACF,CAAC,CAAC,WAAW,EAAE,IAAI,CAA6E,EAAE,EAAE,CAChG,WAAW,CAAC,SAAS,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EACzD,oDAAG,CAAC,CAAC,CAAC,EAAE,CAAC,oFAA8C,EAAE,CAAC,CAC7D,CAAC,CAAC;QAEP,iCAA4B,GAAG,4DAAY,CAAC,GAAG,EAAE,CAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,oFAA8C,CAAC,EACtD,+DAAc,CACV,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,sFAA8C,CAAC,EACjE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,8EAAsC,CAAC,CAC5D,EACD,oDAAG,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC,EAAE,EAAE,CAC3B,6EAAuC,CACnC;YACI,SAAS,EAAE,WAAW,CAAC,SAAS;YAChC,MAAM,EAAE,WAAW,CAAC,MAAM;YAC1B,KAAK,EAAE,KAAK,CAAC,KAAK;YAClB,GAAG,EAAE,KAAK,CAAC,GAAG;SACjB,CACJ,CACJ,CACJ,CAAC,CAAC;QAEP,mBAAc,GAAG,4DAAY,CAAC,GAAG,EAAE,CAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,6EAAuC,CAAC,EAC/C,0DAAS,CAAC,MAAM,CAAC,EAAE,CAAC,+DAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,EACjE,0DAAS,CAAC,OAAO,CAAC,EAAE,CAChB,IAAI,CAAC,eAAe,CAAC,YAAY,CAC7B,OAAO,CAAC,IAAI,CAAC,MAAM,EACnB,OAAO,CAAC,IAAI,CAAC,SAAS,EACtB,OAAO,CAAC,QAAQ,EAChB,OAAO,CAAC,IAAI,CAAC,KAAK,EAClB,OAAO,CAAC,IAAI,CAAC,GAAG,CACnB,CAAC,IAAI,CACF,oDAAG,CAAC,SAAS,CAAC,EAAE,CAAC,6EAAuC,CAAC,SAAS,CAAC,CAAC,EACpE,2DAAU,CAAC,KAAK,CAAC,EAAE,CAAC,yCAAE,CAAC,6EAAuC,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CACxF,CACJ,CACJ,CAAC,CAAC;QACP,kBAAa,GAAG,4DAAY,CAAC,GAAG,EAAE,CAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,sEAAgC,CAAC,EACxC,oDAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,gFAA0C,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CACzE,CAAC,CAAC;QAEP,mBAAc,GAAG,4DAAY,CAAC,GAAG,EAAE,CAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,uEAAiC,CAAC,EACzC,+DAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,0EAAkC,CAAC,CAAC,EACrE,oDAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAChB,uDAAM,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,EAC1D,oDAAG,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,+EAAyC,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAClF,CACJ,CAAC;QAEF,sBAAiB,GAAG,4DAAY,CAAC,GAAG,EAAE,CAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,gFAA0C,CAAC,EAClD,0DAAS,CAAC,MAAM,CAAC,EAAE,CACf,+DAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC7C,+DAAc,CAAC,kEAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,qEAA6B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CACjG,CACJ,EACD,yDAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,EAAE;YAC7B,IAAI,QAAQ,CAAC,YAAY,IAAI,QAAQ,CAAC,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7D,OAAO,yCAAE,CAAC,gFAA0C,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,YAAY,EAAE,QAAQ,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;aACnH;YACD,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,CACvC,QAAQ,CAAC,MAAM,EACf,QAAQ,CAAC,KAAK,EACd,OAAO,CAAC,QAAQ,EAChB,4CAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,EAC5B,4CAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAC/B,CAAC,IAAI,CACF,oDAAG,CAAC,YAAY,CAAC,EAAE,CAAC,gFAA0C,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC,EAClG,0DAAS,CACL,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,sDAAM,CAAC,+EAAyC,CAAC,EAAE,uDAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC,CACnH,EACD,2DAAU,CAAC,KAAK,CAAC,EAAE,CAAC,yCAAE,CAClB,gFAA0C,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAC9F,CAAC,CACL,CAAC;QACN,CAAC,CACA,CACJ,CAAC,CAAC;QAEP,6BAAwB,GAAG,4DAAY,CAAC,GAAG,EAAE,CACzC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,gFAA0C,CAAC,EAClD,oDAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,uEAAiC,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,CAChF,CAAC,CAAC;QAEP,2BAAsB,GAAG,4DAAY,CAAC,GAAG,EAAE,CACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,qFAA+C,CAAC,EACvD,0DAAS,CAAC,MAAM,CAAC,EAAE,CAAC,+DAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,EACjE,0DAAS,CAAC,OAAO,CAAC,EAAE,CAChB,IAAI,CAAC,eAAe,CAAC,cAAc,CAC/B,OAAO,CAAC,IAAI,CAAC,MAAM,EACnB,OAAO,CAAC,IAAI,CAAC,EAAE,EACf,OAAO,CAAC,QAAQ,CACnB,CAAC,IAAI,CACF,oDAAG,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,qFAA+C,CAAC,WAAW,CAAC,CAAC,EAClF,2DAAU,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,yCAAE,CAAC,qFAA+C,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAClG,CACJ,CACJ,CAAC,CAAC;QAEP,4BAAuB,GAAG,4DAAY,CAAC,GAAG,EAAE,CACxC,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,+EAAyC,CAAC,EACjD,+DAAc,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,2EAAmC,CAAC,CAAC,EACtE,0DAAS,CAAC,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE,EAAE;YAC5B,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC;YACtC,MAAM,cAAc,GAAiC;gBACjD,OAAO,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO;gBACzB,MAAM,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM;gBACvB,IAAI,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI;aACtB,CAAC;YACF,MAAM,oBAAoB,GAAiC;gBACvD,MAAM,EAAE,UAAU,CAAC,0BAA0B;gBAC7C,IAAI,EAAE,UAAU,CAAC,iBAAiB;aACrC,CAAC;YACF,MAAM,OAAO,GAA0B;gBACnC,OAAO,EAAE,UAAU,CAAC,OAAO;gBAC3B,SAAS,EAAE,UAAU,CAAC,SAAS;gBAC/B,YAAY,EAAE,UAAU,CAAC,UAAU;gBACnC,MAAM,EAAE,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,KAAK;gBAC7C,MAAM,EAAE,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,cAAc;gBACpF,SAAS,EAAE,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,oBAAoB;gBACvF,MAAM,EAAE,UAAU,CAAC,cAAc;gBACjC,UAAU,EAAE,+EAAmB;gBAC/B,YAAY,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY;aACtC,CAAC;YACF,OAAO;gBACH,0EAAuB,CAAC,EAAE,MAAM,EAAE,iFAAyC,EAAE,CAAC;gBAC9E,4EAAyB,CAAC,EAAE,OAAO,EAAE,CAAC;aACzC,CAAC;QACN,CAAC,CAAC,CACL,CAAC,CAAC;QAEP,kCAA6B,GAAG,4DAAY,CAAC,GAAG,EAAE,CAC9C,IAAI,CAAC,QAAQ,CAAC,IAAI,CACd,sDAAM,CAAC,qFAA+C,CAAC,EACvD,oDAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YACX,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC;YACnC,MAAM,OAAO,GAAiB;gBAC1B,MAAM,EAAE,WAAW,CAAC,MAAM;gBAC1B,YAAY,EAAE,WAAW,CAAC,YAAY;gBACtC,SAAS,EAAE,WAAW,CAAC,SAAS;gBAChC,UAAU,EAAE,+EAAmB;gBAC/B,SAAS,EAAE,WAAW,CAAC,SAAS;gBAChC,OAAO,EAAE,WAAW,CAAC,OAAO;gBAC5B,MAAM,EAAE,WAAW,CAAC,MAAM;gBAC1B,YAAY,EAAE,WAAW,CAAC,YAAY;gBACtC,YAAY,EAAE,WAAW,CAAC,MAAM,CAAC,eAAe,IAAI,WAAW,CAAC,SAAS,CAAC,eAAe;gBACzF,MAAM,EAAE;oBACJ,IAAI,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI;oBAC7B,MAAM,EAAE,WAAW,CAAC,MAAM,CAAC,SAAS;oBACpC,OAAO,EAAE,WAAW,CAAC,MAAM,CAAC,OAAO;iBACtC;gBACD,SAAS,EAAE;oBACP,IAAI,EAAE,WAAW,CAAC,SAAS,CAAC,IAAI;oBAChC,MAAM,EAAE,WAAW,CAAC,SAAS,CAAC,SAAS;oBACvC,OAAO,EAAE,WAAW,CAAC,SAAS,CAAC,OAAO;iBACzC;gBACD,OAAO,EAAE,EAAE;aACd,CAAC;YACF,OAAO,CAAC,OAAO,CAAC,kFAAmB,CAAC,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAEtE,OAAO,2EAAwB,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;QACjD,CAAC,CAAC,CACL,CAAC,CAAC;IApQ2C,CAAC;IAsQnD,gBAAgB,CAAC,gBAAgD;QAC7D,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CACrB,sDAAM,CAAC,oEAA8B,CAAC,EACtC,oDAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EACpC,2DAAU,CAAC,GAAG,EAAE,CACZ,gBAAgB,CAAC,IAAI,CACjB,0DAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,sDAAM,CAAC,uEAAiC,CAAC,CAAC,CAAC,CAAC,CAChF,CACJ,CAAC;IACN,CAAC;;oFApRQ,kBAAkB;oHAAlB,kBAAkB,WAAlB,kBAAkB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;;;ACxB0B;AACgD;AACpC;AAEb;AACyB;AAGjE,MAAM,yBAAyB,GAAG,uDAAW,CAAW;IAC3D,IAAI,EAAE,oDAAQ,CAAC,2DAAQ,EAAE,gEAAS,CAAC,EAAE,CAAC,CAAC;CAC1C,CAAC,CAAC;AAEI,MAAM,kBAAkB,GAAG,0EAA8B,CAC5D,0DAAa,CACT,2DAAuB,EACvB,uDAAW,EAAE,EACb,+CAAE,CACE,0EAAoC,EACpC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,OAAO,EAAE,MAAM,CAAC,OAAO,IAAG,CAC7D,EACD,+CAAE,CACE,6EAAuC,EACvC,CAAC,KAAK,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,QAAQ,EAAE,wDAAoB,IAAG,CAC5D,EACD,+CAAE,CACE,6EAAuC,EACvC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,SAAS,EAAE,MAAM,CAAC,OAAO,IAAG,CAC/D,EACD,+CAAE,CACE,sEAAgC,EAChC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,aAAa,EAAE,CAAC,GAAG,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,EAAE,CAAC,IAAG,CACxF,EACD,+CAAE,CACE,uEAAiC,EACjC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CACd,iCAAM,KAAK,KAAE,aAAa,EAAE,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,EAAE,CAAC,IAAG,CACtF,EACD,+CAAE,CACE,gFAA0C,EAC1C,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,aAAa,EAAE,CAAC,GAAG,KAAK,CAAC,aAAa,EAAE,MAAM,CAAC,OAAO,CAAC,IAAG,CAC7F,EACD,+CAAE,CACE,gFAA0C,EAC1C,gFAA0C,EAC1C,+EAAyC,EACzC,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,iCAAM,KAAK,KAAE,aAAa,EAAE,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,IAAG,CAC7G,EACD,+CAAE,CACE,gFAA0C,EAC1C,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;;IAClB,wCACO,KAAK,KACR,SAAS,EAAE,WAAK,CAAC,SAAS,0CAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,CACvC,QAAQ,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,iCAC1B,QAAQ,KAAE,YAAY,EAAE,MAAM,CAAC,OAAO,CAAC,YAAY,IAAG,CAAC;YAC5D,QAAQ,CACf,IACH;CAAA,CACL,CACJ,EACD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,EACf,yBAAyB,CAC5B,CAAC;;;;;;;;;;;;;;;;;;;;;;AC7DkE;AACZ;AAC9B;AACkC;AACf;AAEgB;AAGtD,IAAU,oBAAoB,CAgGpC;AAhGD,WAAiB,oBAAoB;IAEpB,gCAAW,GAAG,kEAAqB,CAAmB,oDAAgB,CAAC,CAAC;IAErF,6CAA6C;IAC7C,iBAAiB;IACjB,+BAA+B;IAC/B,KAAK;IAEQ,6BAAQ,GAAG,2DAAc,CAClC,gCAAW,EACX,KAAK,CAAC,EAAE,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,CAC3B,CAAC;IAEW,8CAAyB,GAAG,2DAAc,CACnD,0FAAsC,EACtC,CAAC,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,EAAG,MAAiB,IAAI,EAAE,EAAE,SAAS,EAAE,QAAQ,CAAC,SAAS,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAC9G,CAAC;IAEW,mCAAc,GAAG,2DAAc,CACxC,+DAAuB,EACvB,gCAAW,EACX,8CAAyB,EACzB,CAAC,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,EAAE,WAAC,mBAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,OAAO,MAAI,eAAS,CAAC,QAAQ,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,WAAW,CAAC,SAAS,CAAC,KACjI,CAAC;IAIW,uCAAkB,GAAG,2DAAc,CAC5C,gCAAW,EACX,KAAK,CAAC,EAAE,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,sBAAsB,CACzC,CAAC;IAEW,sCAAiB,GAAG,2DAAc,CAC3C,uCAAkB,EAClB,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,4CAAK,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,4CAAK,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CACxG,CAAC;IAEW,4CAAuB,GAAG,2DAAc,CACjD,+DAAuB,EACvB,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,4EAAoB,CAAC,IAAI,CAAC,CAC7D,CAAC;IAEW,uCAAkB,GAAG,2DAAc,CAC5C,+DAAuB,EACvB,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,8EAAsB,CAAC,IAAI,CAAC,CAC/D,CAAC;IAEW,0CAAqB,GAAG,2DAAc,CAC/C,+DAAuB,EACvB,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,iFAAyB,CAAC,IAAI,CAAC,CAClE,CAAC;IAEW,yCAAoB,GAAG,2DAAc,CAC9C,uCAAkB,EAClB,4CAAuB,EACvB,0CAAqB;IACrB,iDAAiD;IACjD,CAAC,kBAAkB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,EAAE,CACnE,kBAAkB,IAAI,uBAAuB,IAAI,qBAAqB,CAC7E,CAAC;IAEW,yCAAoB,GAAG,2DAAc,CAC9C,+DAAuB,EACvB,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,gFAAwB,CAAC,IAAI,CAAC,CACjE,CAAC;IAEW,iCAAY,GAAG,2DAAc,CACtC,mCAAc,EACd,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,YAAY,CACrC,CAAC;IAEW,kCAAa,GAAG,2DAAc,CACvC,gCAAW,EACX,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,aAAa,CACjC,CAAC;IAEW,kCAAa,GAAG,2DAAc,CACvC,gCAAW,EACX,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,aAAa,CACjC,CAAC;IAEW,8BAAS,GAAG,2DAAc,CACnC,gCAAW,EACX,kCAAa,EACb,kCAAa,EACb,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE;;QAC5B,kBAAK,CAAC,SAAS,0CAAE,GAAG,CAAC,KAAK,CAAC,EAAE,CACzB,CAAC,gCAAK,KAAK,KAAE,MAAM,EAAE,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,SAAS,EAAE,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,GAAkB,EAC/G;KAAA,CACR,CAAC;IAEW,6BAAQ,GAAG,CAAC,EAAU,EAAE,EAAE,CAAC,2DAAc,CAClD,8BAAS,EACT,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAC3C,CAAC;AACN,CAAC,EAhGgB,oBAAoB,KAApB,oBAAoB,QAgGpC;;;;;;;;;;;;;;;;;;;;;;;ACxGyB;AAC6C;AAIhE,MAAM,gBAAgB,GAAG,cAAc,CAAC;AACxC,MAAM,cAAc,GAAG,gBAAgB,CAAC;AACxC,MAAM,6BAA6B,GAAG,+BAA+B,CAAC;AAYtE,MAAM,oBAAoB,GAAG,gEAAoB,CAAW,cAAc,EAAE;IAC/E,IAAI,EAAE,EAAE;CACX,CAAC,CAAC;AAEI,MAAM,mBAAmB,GAAG,gEAAoB,CAAyB,6BAA6B,EAAE;IAC3G,KAAK,EAAE,+CAAG,CAAC;QACP,KAAK,EAAE,4CAAK,CAAC,4CAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC,WAAW,EAAE;QAC1F,GAAG,EAAE,4CAAK,CAAC,4CAAK,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC,WAAW,EAAE;KACvE,CAAC;CACL,CAAC,CAAC;AAEI,MAAM,uBAAuB,GAAqB;IACrD,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,SAAS;IACpB,aAAa,EAAE,EAAE;IACjB,aAAa,EAAE,EAAE;IACjB,QAAQ,EAAE,oBAAoB;IAC9B,sBAAsB,EAAE,mBAAmB;CAC9C,CAAC;;;;;;;;;;;;;;;;;ACtCoE;AACF;AAE7D,IAAU,cAAc,CA6B9B;AA7BD,WAAiB,cAAc;;IACd,2BAAY,GAAG,kEAAqB,CAAqB,QAAQ,CAAC,CAAC;IAEnE,KAST,gEAAY,CAAC,2BAAY,CAAC,EAR1B,iCAAkB,0BAClB,6BAAc,sBACd,gCAAiB,yBACjB,+BAAgB,wBAChB,gCAAiB,yBACjB,+BAAgB,wBAChB,8BAAe,uBACf,wBAAS,gBACkB;IAElB,sCAAuB,GAAG,2DAAc,CAAC,2BAAY,EAAE,CAAC,MAAM,EAAE,EAAE;;QAC3E,IAAI,YAAY,GAAG,YAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,0CAAE,IAAI,CAAC;QACvC,IAAI,MAAM,GAAW,EAAE,CAAC;QACxB,OAAO,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,UAAU,EAAE;YAC7B,YAAY,GAAG,YAAY,CAAC,UAAU,CAAC;YACvC,MAAM,mCACC,MAAM,GACN,YAAY,CAAC,MAAM,CACzB,CAAC;SACL;QACD,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC,CAAC;IAEU,qCAAsB,GAAG,CAAC,KAAa,EAAE,EAAE,CACpD,2DAAc,CAAC,sCAAuB,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACrF,CAAC,EA7BgB,cAAc,KAAd,cAAc,QA6B9B;;;;;;;;;;;;;;;ACjCD,IAAY,UAQX;AARD,WAAY,UAAU;IAClB,yBAAW;IACX,+BAAiB;IACjB,mCAAqB;IACrB,+BAAiB;IACjB,2CAA6B;IAC7B,mCAAqB;IACrB,qCAAuB;AAC3B,CAAC,EARW,UAAU,KAAV,UAAU,QAQrB;;;;;;;;;;;;;;;;;;ACPsD;AACA;;;AAEvD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gEAAgB,EAAE,CAAC,CAAC;AAM5D,MAAM,oBAAoB;;wFAApB,oBAAoB;iHAApB,oBAAoB;qHAHtB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,oBAAoB,oFAFrB,yDAAY;;;;;;;;;;;;;;;;;;;;;;ACNyC;AAEA;AACJ;;;;;AAOtD,MAAM,gBAAgB;IAE3B,YAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;IAAI,CAAC;IAErC,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,uEAAgB,EAAE,2EAAkB,CAAC,CAAC;QAC5D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,uFAA8B,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,8FAAqC,EAAE,CAAC,CAAC;IAC/D,CAAC;IAGD,WAAW;QACT,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,0FAAiC,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,uEAAyB,CAAC,CAAC;IACtD,CAAC;;gFAdU,gBAAgB;8GAAhB,gBAAgB;QCZ7B,yEAAkD;QAC9C,gFAAyC;QACzC,8EAAqC;QACzC,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHyC;AAEW;AACZ;AACmB;AACJ;AAEG;AACT;AACiC;AACS;AACQ;AACX;AAGZ;AAGJ;AACyB;AACW;AACM;AACe;;;AAyBhI,MAAM,aAAa;;0EAAb,aAAa;2GAAb,aAAa;+GARf;YACP,0DAAY;YACZ,sEAAY;YACZ,yEAAoB;YACpB,qEAAuB;YACvB,oEAAwB,CAAC,CAAC,2EAAkB,CAAC,CAAC;SAC/C;oIAEU,aAAa,mBApBtB,gEAAgB;QAChB,iGAAoB;QACpB,uGAAsB;QACtB,0GAAuB;QACvB,kHAAyB;QACzB,iHAAyB;QACzB,oIAA+B;QAC/B,8HAA6B;QAC7B,4HAA4B;QAC5B,kIAA8B;QAC9B,iJAAmC,aAGnC,0DAAY;QACZ,sEAAY;QACZ,yEAAoB;QACpB,qEAAuB;;;;;;;;;;;;;;;;;;;;;ACpCpB,MAAM,oBAAoB;IAE/B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;wFALU,oBAAoB;kHAApB,oBAAoB;QCPjC,yEAA0B;QACtB,yEAAsC;QAClC,iFAA2C;QAC3C,+EAAuC;QAC3C,4DAAM;QACV,4DAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA+D;AAE0B;;;;;;;;;;;;;;;;ICLvF,yEAAwC;IACpC,yEAA+B;IAC3B,yEAAoC;IAChC,yEAAwD;IACpD,yEAAmC;IAC/B,uDACJ;IAAA,4DAAM;IACN,yEAAmF;IAA/B,6bAA8B;IAC9E,kEAA2B;IAC/B,4DAAM;IACV,4DAAM;IACN,yEAA8B;IAC1B,uDAEJ;;IAAA,4DAAM;IACN,2EAA6B;IACzB,2EAAqC;IACjC,2EAA6C;IACzC,oEAAmD;IACnD,wEAAM;IAAA,wDAAuC;;IAAA,4DAAO;IACxD,4DAAM;IACN,2EAAuC;IACnC,oEAAiD;IACjD,wEAAM;IAAA,wDAAwC;;IAAA,4DAAO;IACzD,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EAAoC;IAChC,2EAAiB;IACb,2EAAuB;IACnB,2EAAuC;IACnC,wDACJ;;IAAA,4DAAM;IACN,2EAAyC;IACrC,uEAAqC;IACzC,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EAA0D;IACtD,2EAAmB;IACf,2EAAuC;IACnC,wDACJ;;IAAA,4DAAM;IACN,2EAAyC;IACrC,wDAEJ;;IAAA,4DAAM;IACV,4DAAM;IACN,2EAAmB;IACf,2EAAuC;IACnC,wDACJ;;IAAA,4DAAM;IACN,2EAAyC;IACrC,wDACJ;;IAAA,4DAAM;IACV,4DAAM;IAEV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EAA4D;IACxD,2EAAsB;IAClB,yEACyD;IAArD,2TAAS,wBAAwB,SAAE,UAAe,IAAE;IACxD,4DAAI;IACJ,8EAC0E;IAEtE,0EAA8D;IAC1D,yEACiF;IAC7E,oEAAsD;IAEtD,wEAAM;IAAA,wDAA4C;;IAAA,4DAAO;IACzD,wEAAM;IAAA,kEAAM;IAAA,4DAAO;IACnB,wEAAM;IAAA,wDAAiD;;IAAA,4DAAO;IAClE,4DAAI;IACR,4DAAK;IAEL,0EAA8D;IAC1D,yEACkF;IAE9E,oEAAwD;IACxD,wEAAM;IAAA,wDAA4C;;IAAA,4DAAO;IACzD,wEAAM;IAAA,kEAAM;IAAA,4DAAO;IACnB,wEAAM;IAAA,wDAAoD;;IAAA,4DAAO;IACrE,4DAAI;IACR,4DAAK;IAGL,0EAA8D;IAC1D,yEAGiB;IAEb,oEAA6C;IAC7C,wEAAM;IAAA,wDAA4C;;IAAA,4DAAO;IACzD,wEAAM;IAAA,kEAAM;IAAA,4DAAO;IACnB,wEAAM;IAAA,wDAA8C;;IAAA,4DAAO;IAC/D,4DAAI;IACR,4DAAK;IACT,4DAAK;IACT,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAtGc,0DACJ;IADI,2FACJ;IAMA,0DAEJ;IAFI,yMAEJ;IAKkB,0DAAuC;IAAvC,mKAAuC;IAIvC,0DAAwC;IAAxC,oKAAwC;IAS9C,0DACJ;IADI,uKACJ;IAEU,0DAAuB;IAAvB,mFAAuB;IAO7B,0DACJ;IADI,yLACJ;IAEI,0DAEJ;IAFI,gNAEJ;IAII,0DACJ;IADI,wLACJ;IAEI,0DACJ;IADI,kLACJ;IAmBU,2DAA4C;IAA5C,gKAA4C;IAE5C,0DAAiD;IAAjD,qKAAiD;IASjD,0DAA4C;IAA5C,gKAA4C;IAE5C,0DAAoD;IAApD,wKAAoD;IAYpD,0DAA4C;IAA5C,gKAA4C;IAE5C,0DAA8C;IAA9C,kKAA8C;;;IAQ5E,yEAAsD;IAClD,yEAA+B;IAC3B,yEAAoC;IAChC,yEAAwD;IACpD,0EAA6C;IACzC,qFAEsB;IAC1B,4DAAM;IACV,4DAAM;IACN,yEAA8B;IAC1B,qFAEsB;IACtB,qFAEsB;IAC1B,4DAAM;IACN,0EAA6B;IACzB,2EAAqC;IACjC,2EAA4D;IACxD,sFAEsB;IAC1B,4DAAM;IACN,2EAAsD;IAClD,sFAEsB;IAC1B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EAAoC;IAChC,2EAAiB;IACb,2EAAuB;IACnB,2EAA8D;IAC1D,sFAEsB;IAC1B,4DAAM;IACN,2EAAyC;IACrC,sFAEsB;IAC1B,4DAAM;IACV,4DAAM;IACV,4DAAM;IACN,2EAAiB;IACb,2EAAsB;IAClB,2EAA8D;IAC1D,sFAEsB;IAC1B,4DAAM;IACN,2EAAyC;IACrC,sFAEsB;IAC1B,4DAAM;IACV,4DAAM;IACN,2EAAsB;IAClB,2EAA8D;IAC1D,sFAEsB;IAC1B,4DAAM;IACN,2EAAyC;IACrC,sFAEsB;IAC1B,4DAAM;IACV,4DAAM;IAEV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IA3LV,wEAAiD;IAC7C,mJA2GM;IAEN,kJA6EM;IACV,qEAAe;;;;IA3Lc,0DAAa;IAAb,4EAAa;IA6Gb,0DAA2B;IAA3B,6FAA2B;;;IA/G5D,wEAA6C;IACzC,oJA4Le;IAGnB,qEAAe;;;IA/LI,0DAAoB;IAApB,sFAAoB;;ADahC,MAAM,uBAAuB;IAElC,YAAoB,KAAY,EAAU,YAAsB;QAA5C,UAAK,GAAL,KAAK,CAAO;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAEhE,aAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,8FAAmC,CAAC,CAAC;QAClE,eAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,uGAA4C,CAAC,CAAC;IAHT,CAAC;IAKrE,QAAQ;IACR,CAAC;IAED,WAAW,CAAC,OAAqB;QAC/B,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uGAAyB,CAAC,CAAC;QACnE,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;IACjD,CAAC;;8FAbU,uBAAuB;qHAAvB,uBAAuB;QCdpC,qIAgMe;;QAhMA,iFAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;ACGgC;AACI;;;;;;;;;;;ICJrE,yEAA4D;IACxD,yEAA4B;IAExB,uEAAuD;IAA9B,kSAAS,0BAAmB,IAAC;IAAC,4DAAI;IAC/D,4DAAM;IACN,yEAA6B;IACzB,yEAAuB;IACnB,uDACJ;;IAAA,4DAAM;IACV,4DAAM;IACN,0EAAyD;IACrD,yEAAiB;IACb,yEAAuB;IACnB,0EAAsB;IAClB,6EAAmD;IAAA,wDACpC;;IAAA,4DAAQ;IACvB,2EAE4D;IAChE,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAO;IACP,2EAA0C;IACtC,8EAAkG;IAAjD,yTAAgB;IAC7D,oEAA2B;IAC3B,wDACJ;;IAAA,4DAAS;IACb,4DAAM;IACV,4DAAM;;;IAtBM,0DACJ;IADI,0KACJ;IAM+D,0DACpC;IADoC,6JACpC;IAEX,0DAA+C;IAA/C,2GAA+C;IAOG,0DAA+B;IAA/B,2FAA+B;IAE7F,0DACJ;IADI,4JACJ;;ADdD,MAAM,yBAAyB;IAIpC,YAAmB,WAA2B,EAAU,KAAY;QAAjD,gBAAW,GAAX,WAAW,CAAgB;QAAU,UAAK,GAAL,KAAK,CAAO;QAEpE,cAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,wFAA6B,CAAC,CAAC;IAFW,CAAC;IAIzE,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gGAAuC,EAAE,CAAC,CAAC;QAC/D,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,0FAAiC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SAC7E;IACH,CAAC;IAED,IAAI;QACF,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,0FAAiC,EAAE,CAAC,CAAC;QACzD,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;;kGAlBU,yBAAyB;uHAAzB,yBAAyB;QCbtC,uHA6BM;;QA7BsB,kFAAmB;;;;;;;;;;;;;;;;;;;;ACOxC,MAAM,sBAAsB;IAEjC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4FALU,sBAAsB;oHAAtB,sBAAsB;QCPnC,yEAA2B;QACvB,yEAAuB;QACnB,uDACJ;;QAAA,4DAAM;QACV,4DAAM;;QAFE,0DACJ;QADI,4KACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA6D;AACI;;;;;;;;;;;ICDzD,0EAA+E;IAC3E,mEAA+B;IACnC,4DAAM;;;IACN,0EAA8E;IAC1E,mEAAiC;IACrC,4DAAM;;;IAyBE,2EAAsE;IAClE,uDACJ;;IAAA,4DAAO;;;;IADH,0DACJ;IADI,yLACJ;;;IACA,2EAAsE;IAClE,uDACJ;;IAAA,4DAAO;;;;IADH,0DACJ;IADI,wLACJ;;;;IAtCpB,wEAAuD;IACnD,yEAAuE;IAA5B,8UAA2B;IAClE,yEAAmD;IAC/C,yIAEM;IACN,yIAEM;IACV,4DAAM;IACN,yEAA0C;IACtC,yEAAgC;IAC5B,yEAAmF;IAC/E,0EAA6C;IAAA,iEAAC;IAAA,4DAAO;IACrD,wEAAM;IAAC,wDAAgD;IAAA,4DAAO;IAClE,4DAAM;IACN,0EAAkG;IAC9F,4EAA2C;IAAA,8EAAG;IAAA,4DAAO;IAAA,8DACrD;IAAA,wEAAM;IAAA,wDAAkE;;IAAA,4DAAO;IACnF,4DAAM;IACV,4DAAM;IACN,2EAAuC;IACnC,2EAAmE;IAC/D,4EAA0B;IACtB,wDACJ;IAAA,4DAAO;IACX,4DAAM;IACN,2EAA4F;IACxF,wDACJ;IAAA,4DAAM;IACV,4DAAM;IACN,2EAAgC;IAC5B,2EAAkC;IAC9B,8IAEO;IACP,8IAEO;IACX,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEN,2EAAyF;IACrF,2EAAsB;IAClB,oEAGI;IACJ,0EAAgG;IAC5F,0EAA8B;IAC1B,yEACoE;IAChE,oEAAoD;IACpD,wDACJ;;IAAA,4DAAI;IACR,4DAAK;IACL,0EAA2D;IACvD,yEACiG;IAC7F,oEAAsD;IACtD,wDACJ;;IAAA,4DAAI;IACR,4DAAK;IACT,4DAAK;IACT,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,qEAAe;;;IAjEsC,0DAAoC;IAApC,8GAAoC;IAGrC,0DAAoC;IAApC,8GAAoC;IAQ7D,0DAAgD;IAAhD,qIAAgD;IAIjD,0DAAkE;IAAlE,iNAAkE;IAMpE,0DACJ;IADI,4GACJ;IAGA,0DACJ;IADI,kGACJ;IAIoC,0DAAoC;IAApC,8GAAoC;IAGpC,0DAAoC;IAApC,8GAAoC;IAOnB,0DAA2B;IAA3B,6GAA2B;IAWpE,0DACJ;IADI,qKACJ;IAMI,0DACJ;IADI,4LACJ;;ADnDjB,MAAM,8BAA8B;IAIzC,YAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;QAEhC,kBAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,4FAAiC,CAAC,CAAC;IAFjC,CAAC;IAIrC,QAAQ;IACR,CAAC;IAED,eAAe;QACb,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,kGAAyC,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAAA,CAAC;QAC/F,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,wGAA+C,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACrI,CAAC;;4GAdU,8BAA8B;4HAA9B,8BAA8B;QCX3C,8IAoEe;;QApEA,sFAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;IEAtC,yEAAsE;IAClE,yEAAmD;IAC/C,yEAAwC;IACpC,oFACsB;IAC1B,4DAAM;IACV,4DAAM;IACN,yEAA0C;IACtC,yEAAgC;IAC5B,yEAAyC;IACrC,iFACsB;IAC1B,4DAAM;IACN,yEAA0C;IACtC,iFACsB;IAC1B,4DAAM;IACV,4DAAM;IACN,0EAAqD;IACjD,0EAAyC;IACrC,kFACsB;IAC1B,4DAAM;IACN,0EAA0C;IACtC,kFACsB;IAC1B,4DAAM;IACV,4DAAM;IACN,2EAAgC;IAC5B,0EAAyC;IACrC,kFACsB;IAC1B,4DAAM;IAEV,4DAAM;IACV,4DAAM;IAEN,sEAEM;IACV,4DAAM;;ADjCC,MAAM,mCAAmC;IAI9C;IACA,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;IACpD,CAAC;;sHATU,mCAAmC;iIAAnC,mCAAmC;QCPhD,gIAwCM;;QAxCsD,8EAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEC;AACjB;AAC1B;;;;;;;;;;;;ICgCtB,yEAA0C;IACtC,yEAAmC;IAC/B,yEAAuB;IACnB,uDACJ;;IAAA,4DAAM;IACV,4DAAM;IACN,yEAAqC;IACjC,yEAAiD;IAS7C,yEAAgG;IAC5F,uEAES;IACb,4DAAM;IAEN,sEAAK;IACD,yEAES;IACb,4DAAM;IACV,4DAAM;IAEV,4DAAM;IACN,4EAA8D;IAC1D,2EAAmC;IAC/B,wEAEkD;IAClD,wEAAsD;IAC1D,4DAAM;IACV,4DAAO;IACX,4DAAM;;;;IAnCM,0DACJ;IADI,+KACJ;IA0BmC,0DAAsB;IAAtB,kFAAsB;IAGjD,0DAA4C;IAA5C,wGAA4C;;;IAlChE,wEAAuC;IACnC,2IAsCM;IACN,+EAA0D;IAE9D,qEAAe;;;;IAzCmB,0DAAU;IAAV,yEAAU;IAuCxB,0DAAwB;IAAxB,wFAAwB;;ADhErC,MAAM,+BAA+B;IAE1C,YAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;QAChC,UAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kGAAuC,CAAC,CAAC;QACnE,eAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,oGAAyC,CAAC,CAAC;QAEnE,wBAAmB,GAAG,8DAAmB,CAAC;QACjD,WAAM,GAAQ;YACZ,qBAAqB,EAAE,CAAC,4CAAK,EAAE,EAAE,4CAAK,EAAE,CAAC;YACzC,4BAA4B,EAAE,CAAC,4CAAK,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,4CAAK,EAAE,CAAC;YACjE,sBAAsB,EAAE,CAAC,4CAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,4CAAK,EAAE,CAAC;YAC/D,sBAAsB,EAAE,CAAC,4CAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,4CAAK,EAAE,CAAC;YAC/D,sBAAsB,EAAE,CAAC,4CAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,4CAAK,EAAE,CAAC;SAChE,CAAC;IAXkC,CAAC;IAarC,QAAQ;IACR,CAAC;;8GAhBU,+BAA+B;6HAA/B,+BAA+B;QCwB5C,6IA0Ce;;QA1CA,8EAAe;;;;;;;;;;;;;;;;;;;;;;AChCuC;;;;;;;ICD7D,sFACwB;;;IADkD,iFAAqB;;;IAFvG,wEAAiD;IAC7C,yEAA4C;IACxC,4KACwB;IAC5B,4DAAM;IACV,qEAAe;;;;IAHqC,0DAAa;IAAb,iFAAa;;ADQ1D,MAAM,6BAA6B;IAExC,YAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;QAEhC,eAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yFAA8B,CAAC,CAAC;IAF3B,CAAC;IAIrC,QAAQ;IACR,CAAC;IAED,OAAO,CAAC,KAAa,EAAE,QAAqB;QAC1C,OAAO,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;IAC5C,CAAC;;0GAXU,6BAA6B;2HAA7B,6BAA6B;QCV1C,2IAKe;;QALA,mFAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACG8B;AACI;;;;;;;;;;;ICmD7D,yFAE0B;;;;IADtB,0EAAmB;IADgE,+EAAmB;;;IAD9G,0EAAmH;IAC/G,uLAE0B;IAoC9B,4DAAM;;;IAtC2C,0DAAyB;IAAzB,iGAAyB;;;IAuC1E,0EAA8F;IAC1F,8FAE+B;IACnC,4DAAM;;;IAH4B,0DAAoC;IAApC,oGAAoC;;;;IA/F1E,wEAAuD;IACnD,yEAAsG;IAA3B,2UAA0B;IACjG,yEAA8D;IAC1D,0EAAsG;IAClG,kEAAwC;IAC5C,4DAAO;IACX,4DAAM;IACN,yEAA2B;IACvB,yEAA2B;IACvB,yEAAuC;IACnC,uDACJ;;IAAA,4DAAM;IACN,0EAA6B;IACzB,wDACJ;;IAAA,4DAAM;IACV,4DAAM;IACN,0EAA4B;IACxB,2EAAiC;IAC7B,0EAAuC;IACnC,wDACJ;;IAAA,4DAAM;IACN,0EAA6B;IACzB,wDACJ;;IAAA,4DAAM;IACV,4DAAM;IACN,2EAAiC;IAC7B,0EAAuC;IACnC,wDACJ;;IAAA,4DAAM;IACN,0EAA6B;IACzB,wDACJ;;IAAA,4DAAM;IACV,4DAAM;IACN,2EAAiC;IAC7B,0EAAuC;IACnC,wDACJ;;IAAA,4DAAM;IACN,0EAA6B;IACzB,wDACJ;;IAAA,4DAAM;IACV,4DAAM;IACN,2EAAiC;IAC7B,0EAAuC;IACnC,wDACJ;;IAAA,4DAAM;IACN,0EAA6B;IACzB,wDACJ;;IAAA,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEV,4DAAM;IAEV,4DAAM;IACN,0IAuCM;IACN,0IAIM;IACV,qEAAe;;;;IAlG6B,0DAAkC;IAAlC,6FAAkC;IAEpC,0DAAgC;IAAhC,2FAAgC;IAC/C,0DAAwB;IAAxB,iFAAwB;IAM/B,0DACJ;IADI,uLACJ;IAEI,0DACJ;IADI,yLACJ;IAKQ,0DACJ;IADI,qLACJ;IAEI,0DACJ;IADI,+LACJ;IAII,0DACJ;IADI,8KACJ;IAEI,0DACJ;IADI,2LACJ;IAII,0DACJ;IADI,+KACJ;IAEI,0DACJ;IADI,4LACJ;IAII,0DACJ;IADI,sLACJ;IAEI,0DACJ;IADI,gMACJ;IAOmD,0DAA8C;IAA9C,wHAA8C;IAwCpE,0DAA+C;IAA/C,yHAA+C;;ADnFzF,MAAM,4BAA4B;IAIvC,YAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;QAIhC,kBAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,4FAAiC,CAAC,CAAC;QAHnE,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;IAC9C,CAAC;IAID,QAAQ;IACR,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,0FAAiC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SAClF;aACI;YACH,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,yFAAgC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACjF;IACH,CAAC;;wGApBU,4BAA4B;0HAA5B,4BAA4B;QCXzC,4IAmGe;;QAnGA,sFAAuB;;;;;;;;;;;;;;;;;;;;;;;;ACS/B,MAAM,yBAAyB;IAEpC,YAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;IAAI,CAAC;IAIrC,QAAQ;IACR,CAAC;;kGAPU,yBAAyB;uHAAzB,yBAAyB;QCTtC,sFAAqD;QACrD,oFAAiD","sources":["./node_modules/ngrx-forms/__ivy_ngcc__/fesm2015/ngrx-forms-validation.js","./src/app/@core/store/acct/details/effects.ts","./src/app/@core/store/acct/details/reducer.ts","./src/app/@core/store/acct/details/selectors.ts","./src/app/@core/store/acct/details/store.ts","./src/app/@core/store/route/selectors.ts","./src/app/@shared/models/enums/status-code.enum.ts","./src/app/modules/accounts/modules/account/account-routing.module.ts","./src/app/modules/accounts/modules/account/account.component.ts","./src/app/modules/accounts/modules/account/account.component.html","./src/app/modules/accounts/modules/account/account.module.ts","./src/app/modules/accounts/modules/account/components/account-card/account-card.component.ts","./src/app/modules/accounts/modules/account/components/account-card/account-card.component.html","./src/app/modules/accounts/modules/account/components/account-details/account-details.component.ts","./src/app/modules/accounts/modules/account/components/account-details/account-details.component.html","./src/app/modules/accounts/modules/account/components/account-edit-modal/account-edit-modal.component.ts","./src/app/modules/accounts/modules/account/components/account-edit-modal/account-edit-modal.component.html","./src/app/modules/accounts/modules/account/components/account-header/account-header.component.ts","./src/app/modules/accounts/modules/account/components/account-header/account-header.component.html","./src/app/modules/accounts/modules/account/components/account-transaction-row/account-transaction-row.component.ts","./src/app/modules/accounts/modules/account/components/account-transaction-row/account-transaction-row.component.html","./src/app/modules/accounts/modules/account/components/account-transaction-skeleton/account-transaction-skeleton.component.ts","./src/app/modules/accounts/modules/account/components/account-transaction-skeleton/account-transaction-skeleton.component.html","./src/app/modules/accounts/modules/account/components/account-turnovers-header/account-turnovers-header.component.ts","./src/app/modules/accounts/modules/account/components/account-turnovers-header/account-turnovers-header.component.html","./src/app/modules/accounts/modules/account/components/account-turnovers-list/account-turnovers-list.component.ts","./src/app/modules/accounts/modules/account/components/account-turnovers-list/account-turnovers-list.component.html","./src/app/modules/accounts/modules/account/components/account-turnovers-row/account-turnovers-row.component.ts","./src/app/modules/accounts/modules/account/components/account-turnovers-row/account-turnovers-row.component.html","./src/app/modules/accounts/modules/account/components/account-turnovers/account-turnovers.component.ts","./src/app/modules/accounts/modules/account/components/account-turnovers/account-turnovers.component.html"],"sourcesContent":["import { unbox } from 'ngrx-forms';\n\n// this regex is taken from the @angular/forms source code\r\n// tslint:disable-next-line:max-line-length\r\nconst NGRX_FORMS_EMAIL_VALIDATION_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\r\n/**\r\n * A validation function that requires a value to be a valid e-mail address.\r\n * Considers `null`, `undefined`, and `''` as valid. Combine this function with the\r\n * `required` validation function if these values should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  email: {\r\n    pattern: string;\r\n    actual: string;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  userMailAddress: validate(email),\r\n})\r\n```\r\n *\r\n * Note that this function is generic to allow the compiler to properly infer the type\r\n * of the `validate` function for both optional and non-optional controls.\r\n */\r\nfunction email(value) {\r\n    value = unbox(value);\r\n    if (value === null || value === undefined || value.length === 0) {\r\n        return {};\r\n    }\r\n    if (NGRX_FORMS_EMAIL_VALIDATION_REGEXP.test(value)) {\r\n        return {};\r\n    }\r\n    return {\r\n        email: {\r\n            pattern: NGRX_FORMS_EMAIL_VALIDATION_REGEXP.toString(),\r\n            actual: value,\r\n        },\r\n    };\r\n}\n\n/**\r\n * A validation function that requires the value to be strictly equal (i.e. `===`)\r\n * to another value.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  equalTo: {\r\n    comparand: T;\r\n    actual: T;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  name: validate(equalTo('John Doe')),\r\n})\r\n```\r\n */\r\nfunction equalTo(comparand) {\r\n    return (value) => {\r\n        value = unbox(value);\r\n        if (value === comparand) {\r\n            return {};\r\n        }\r\n        return {\r\n            equalTo: {\r\n                comparand,\r\n                actual: value,\r\n            },\r\n        };\r\n    };\r\n}\n\n/**\r\n * A validation function that requires the value to be greater than a number.\r\n * Considers `null`, `undefined` and non-numeric values as valid. Combine this function with the `required`\r\n * validation function if `null` or `undefined` should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  greaterThan: {\r\n    comparand: number;\r\n    actual: number;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  amount: validate(greaterThan(10)),\r\n})\r\n```\r\n *\r\n * Note that this function is generic to allow the compiler to properly infer the type\r\n * of the `validate` function for both optional and non-optional controls.\r\n */\r\nfunction greaterThan(comparand) {\r\n    // tslint:disable-next-line:strict-type-predicates (guard for users without strict type checking)\r\n    if (comparand === null || comparand === undefined) {\r\n        throw new Error(`The greaterThan Validation function requires the comparand parameter to be a non-null number, got ${comparand}!`);\r\n    }\r\n    return (value) => {\r\n        value = unbox(value);\r\n        if (value === null || value === undefined || typeof value !== 'number') {\r\n            return {};\r\n        }\r\n        if (value > comparand) {\r\n            return {};\r\n        }\r\n        return {\r\n            greaterThan: {\r\n                comparand,\r\n                actual: value,\r\n            },\r\n        };\r\n    };\r\n}\n\n/**\r\n * A validation function that requires the value to be greater than or equal to a number.\r\n * Considers `null`, `undefined` and non-numeric values as valid. Combine this function with the `required`\r\n * validation function if `null` or `undefined` should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  greaterThanOrEqualTo: {\r\n    comparand: number;\r\n    actual: number;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  amount: validate(greaterThanOrEqualTo(10)),\r\n})\r\n```\r\n *\r\n * Note that this function is generic to allow the compiler to properly infer the type\r\n * of the `validate` function for both optional and non-optional controls.\r\n */\r\nfunction greaterThanOrEqualTo(comparand) {\r\n    // tslint:disable-next-line:strict-type-predicates (guard for users without strict type checking)\r\n    if (comparand === null || comparand === undefined) {\r\n        throw new Error(`The greaterThanOrEqualTo Validation function requires the comparand parameter to be a non-null number, got ${comparand}!`);\r\n    }\r\n    return (value) => {\r\n        value = unbox(value);\r\n        if (value === null || value === undefined || typeof value !== 'number') {\r\n            return {};\r\n        }\r\n        if (value >= comparand) {\r\n            return {};\r\n        }\r\n        return {\r\n            greaterThanOrEqualTo: {\r\n                comparand,\r\n                actual: value,\r\n            },\r\n        };\r\n    };\r\n}\n\n/**\r\n * A validation function that requires the value to be less than a number.\r\n * Considers `null`, `undefined` and non-numeric values as valid. Combine this function with the `required`\r\n * validation function if `null` or `undefined` should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  lessThan: {\r\n    comparand: number;\r\n    actual: number;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  amount: validate(lessThan(10)),\r\n})\r\n```\r\n *\r\n * Note that this function is generic to allow the compiler to properly infer the type\r\n * of the `validate` function for both optional and non-optional controls.\r\n */\r\nfunction lessThan(comparand) {\r\n    // tslint:disable-next-line:strict-type-predicates (guard for users without strict type checking)\r\n    if (comparand === null || comparand === undefined) {\r\n        throw new Error(`The lessThan Validation function requires the comparand parameter to be a non-null number, got ${comparand}!`);\r\n    }\r\n    return (value) => {\r\n        value = unbox(value);\r\n        if (value === null || value === undefined || typeof value !== 'number') {\r\n            return {};\r\n        }\r\n        if (value < comparand) {\r\n            return {};\r\n        }\r\n        return {\r\n            lessThan: {\r\n                comparand,\r\n                actual: value,\r\n            },\r\n        };\r\n    };\r\n}\n\n/**\r\n * A validation function that requires the value to be less than or equal to a number.\r\n * Considers `null`, `undefined` and non-numeric values as valid. Combine this function with the `required`\r\n * validation function if `null` or `undefined` should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  lessThanOrEqualTo: {\r\n    comparand: number;\r\n    actual: number;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  amount: validate(lessThanOrEqualTo(10)),\r\n})\r\n```\r\n *\r\n * Note that this function is generic to allow the compiler to properly infer the type\r\n * of the `validate` function for both optional and non-optional controls.\r\n */\r\nfunction lessThanOrEqualTo(comparand) {\r\n    // tslint:disable-next-line:strict-type-predicates (guard for users without strict type checking)\r\n    if (comparand === null || comparand === undefined) {\r\n        throw new Error(`The lessThanOrEqualTo Validation function requires the comparand parameter to be a non-null number, got ${comparand}!`);\r\n    }\r\n    return (value) => {\r\n        value = unbox(value);\r\n        if (value === null || value === undefined || typeof value !== 'number') {\r\n            return {};\r\n        }\r\n        if (value <= comparand) {\r\n            return {};\r\n        }\r\n        return {\r\n            lessThanOrEqualTo: {\r\n                comparand,\r\n                actual: value,\r\n            },\r\n        };\r\n    };\r\n}\n\n/**\r\n * A validation function that requires a `string` or `array` value to have a maximum length.\r\n * Considers `null` and `undefined` as valid. Combine this function with the `required`\r\n * validation function if `null` or `undefined` should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  maxLength: {\r\n    maxLength: number;\r\n    value: string;\r\n    actualLength: number;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  name: validate(maxLength(10)),\r\n})\r\n```\r\n *\r\n * Note that this function is generic to allow the compiler to properly infer the type\r\n * of the `validate` function for both optional and non-optional controls.\r\n */\r\nfunction maxLength(maxLengthParam) {\r\n    // tslint:disable-next-line:strict-type-predicates (guard for users without strict type checking)\r\n    if (maxLengthParam === null || maxLengthParam === undefined) {\r\n        throw new Error(`The maxLength Validation function requires the maxLength parameter to be a non-null number, got ${maxLengthParam}!`);\r\n    }\r\n    return (value) => {\r\n        value = unbox(value);\r\n        if (value === null || value === undefined) {\r\n            return {};\r\n        }\r\n        const length = value.length;\r\n        if (length <= maxLengthParam) {\r\n            return {};\r\n        }\r\n        return {\r\n            maxLength: {\r\n                maxLength: maxLengthParam,\r\n                value: value,\r\n                actualLength: length,\r\n            },\r\n        };\r\n    };\r\n}\n\n/**\r\n * A validation function that requires a `string` or `array` value to have a minimum length.\r\n * Considers `null`, `undefined`, empty strings and empty arrays as valid. Combine this\r\n * function with the `required` validation function if these values should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  minLength: {\r\n    minLength: number;\r\n    value: string;\r\n    actualLength: number;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  password: validate(minLength(8)),\r\n})\r\n```\r\n *\r\n * Note that this function is generic to allow the compiler to properly infer the type\r\n * of the `validate` function for both optional and non-optional controls.\r\n */\r\nfunction minLength(minLengthParam) {\r\n    // tslint:disable-next-line:strict-type-predicates (guard for users without strict type checking)\r\n    if (minLengthParam === null || minLengthParam === undefined) {\r\n        throw new Error(`The minLength Validation function requires the minLength parameter to be a non-null number, got ${minLengthParam}!`);\r\n    }\r\n    return (value) => {\r\n        value = unbox(value);\r\n        if (value === null || value === undefined) {\r\n            return {};\r\n        }\r\n        const length = value.length;\r\n        if (length === 0) {\r\n            return {}; // don't validate empty values to allow optional controls\r\n        }\r\n        if (length >= minLengthParam) {\r\n            return {};\r\n        }\r\n        return {\r\n            minLength: {\r\n                minLength: minLengthParam,\r\n                value: value,\r\n                actualLength: length,\r\n            },\r\n        };\r\n    };\r\n}\n\n/**\r\n * A validation function that requires the value to be strictly not equal (i.e. `!==`)\r\n * to another value.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  notEqualTo: {\r\n    comparand: T;\r\n    actual: T;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  name: validate(notEqualTo('John Doe')),\r\n})\r\n```\r\n */\r\nfunction notEqualTo(comparand) {\r\n    return (value) => {\r\n        value = unbox(value);\r\n        if (value !== comparand) {\r\n            return {};\r\n        }\r\n        return {\r\n            notEqualTo: {\r\n                comparand,\r\n                actual: value,\r\n            },\r\n        };\r\n    };\r\n}\n\n/**\r\n * A validation function that requires a value to match a regex.\r\n * Considers `null`, `undefined`, and `''` as valid. Combine this function with the\r\n * `required` validation function if these values should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  pattern: {\r\n    pattern: string;\r\n    actual: string;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  numberWithPeriodsOrCommas: validate(pattern(/^[0-9.,]+$/)),\r\n})\r\n```\r\n *\r\n * Note that this function is generic to allow the compiler to properly infer the type\r\n * of the `validate` function for both optional and non-optional controls.\r\n */\r\nfunction pattern(patternParam) {\r\n    // tslint:disable-next-line:strict-type-predicates (guard for users without strict type checking)\r\n    if (patternParam === null || patternParam === undefined) {\r\n        throw new Error(`The pattern Validation function requires the pattern parameter to be a non-null string or regular expression, got ${patternParam}!`);\r\n    }\r\n    return (value) => {\r\n        value = unbox(value);\r\n        if (value === null || value === undefined || value.length === 0) {\r\n            return {};\r\n        }\r\n        if (patternParam.test(value)) {\r\n            return {};\r\n        }\r\n        return {\r\n            pattern: {\r\n                pattern: patternParam.toString(),\r\n                actual: value,\r\n            },\r\n        };\r\n    };\r\n}\n\n/**\r\n * A validation function that requires the value to be non-`undefined`, non-'null',\r\n * and non-empty.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  required: {\r\n    actual: T | null | undefined;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  name: validate(required),\r\n})\r\n```\r\n */\r\nfunction required(value) {\r\n    value = unbox(value);\r\n    if (value !== undefined && value !== null && value.length !== 0) {\r\n        return {};\r\n    }\r\n    return {\r\n        required: {\r\n            actual: value,\r\n        },\r\n    };\r\n}\n\n/**\r\n * A validation function that requires a value to be a valid number.\r\n * Considers `null` and `undefined` as valid. Combine this function with the\r\n * `required` validation function if these values should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  number: {\r\n    actual: any;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  amount: validate(number),\r\n})\r\n```\r\n *\r\n * Note that this function is generic to allow the compiler to properly infer the type\r\n * of the `validate` function for both optional and non-optional controls.\r\n */\r\nfunction number(value) {\r\n    value = unbox(value);\r\n    if (value === null || value === undefined || typeof value === 'number') {\r\n        return {};\r\n    }\r\n    return {\r\n        number: {\r\n            actual: value,\r\n        },\r\n    };\r\n}\n\n/**\r\n * A validation function that requires the value to be `false`. Considers `null` and\r\n * `undefined` as valid. Combine this function with the `required` validation\r\n * function if `null` or `undefined` should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  required: {\r\n    actual: boolean;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  disagreeWithTermsOfService: validate(requiredFalse),\r\n})\r\n```\r\n *\r\n * Note that this function is generic to allow the compiler to properly infer the type\r\n * of the `validate` function for both optional and non-optional controls.\r\n */\r\nfunction requiredFalse(value) {\r\n    value = unbox(value);\r\n    // tslint:disable-next-line:strict-type-predicates\r\n    if (value === null || value === undefined) {\r\n        return {};\r\n    }\r\n    if (!value) {\r\n        return {};\r\n    }\r\n    return {\r\n        required: {\r\n            actual: value,\r\n        },\r\n    };\r\n}\n\n/**\r\n * A validation function that requires the value to be `true`. Considers `null` and\r\n * `undefined` as valid. Combine this function with the `required` validation\r\n * function if `null` or `undefined` should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n```typescript\r\n{\r\n  required: {\r\n    actual: boolean;\r\n  };\r\n}\r\n```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n```typescript\r\nupdateGroup<MyFormValue>({\r\n  agreeWithTermsOfService: validate(requiredTrue),\r\n})\r\n```\r\n *\r\n * Note that this function is generic to allow the compiler to properly infer the type\r\n * of the `validate` function for both optional and non-optional controls.\r\n */\r\nfunction requiredTrue(value) {\r\n    value = unbox(value);\r\n    // tslint:disable-next-line:strict-type-predicates\r\n    if (value === null || value === undefined) {\r\n        return {};\r\n    }\r\n    if (value) {\r\n        return {};\r\n    }\r\n    return {\r\n        required: {\r\n            actual: value,\r\n        },\r\n    };\r\n}\n\n/**\r\n * ngrx-forms\r\n * Proper integration of forms in Angular applications using Ngrx\r\n * Written by Jonathan Ziller.\r\n * MIT license.\r\n * https://github.com/MrWolfZ/ngrx-forms\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { email, equalTo, greaterThan, greaterThanOrEqualTo, lessThan, lessThanOrEqualTo, maxLength, minLength, notEqualTo, number, pattern, required, requiredFalse, requiredTrue };\n\n","import { Injectable } from '@angular/core';\r\nimport { AccountModel } from '@models/account.model';\r\nimport { DateRange } from '@models/date-range.model';\r\nimport { PaymentAction } from '@models/enums/payment-action.enum';\r\nimport { StatusCode } from '@models/enums/status-code.enum';\r\nimport { PaymentAccountModal, PaymentModal } from '@models/payment-modal.model';\r\nimport { Actions, createEffect, EffectNotification, ofType, OnRunEffects } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AcctService } from '@services/acct.service';\r\nimport { NotifyActions } from '@store/notify/actions';\r\nimport { clientIdWithData, notNullAndUndefined } from '@store/shared';\r\nimport { SharedActions } from '@store/shared/actions';\r\nimport dayjs from 'dayjs';\r\nimport { Boxed, FormGroupState, SetValueAction } from 'ngrx-forms';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, exhaustMap, filter, map, mergeMap, switchMap, takeUntil, tap, withLatestFrom } from 'rxjs/operators';\r\n\r\nimport { AcctTransactionsFilter } from '../models/acct-transaction-filter.model';\r\nimport { AcctDetailsActions } from './actions';\r\nimport { AcctDetailsSelectors } from './selectors';\r\nimport { ACCT_TRANSACTIONS_FILTER_FORM } from './store';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AcctDetailsEffects implements OnRunEffects {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store: Store,\r\n        private accountsService: AcctService,\r\n        private translateService: TranslateService) { }\r\n\r\n    setAccountName$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.setAccountName),\r\n            withLatestFrom(this.store.select(AcctDetailsSelectors.editForm)),\r\n            map(([action, formControl]) => new SetValueAction(formControl.controls.name.id, action.name))\r\n        ));\r\n\r\n    loadCurrentAccount$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.loadCurrentAccount),\r\n            withLatestFrom(\r\n                this.store.select(AcctDetailsSelectors.currentAccountRouteParams)\r\n            ),\r\n            map(([, routeParams]) =>\r\n                AcctDetailsActions.loadAccount({ accountId: routeParams.accountId, bankId: routeParams.bankId }))\r\n        ));\r\n\r\n    loadAccount$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.loadAccount),\r\n            switchMap((action) => clientIdWithData(this.store, action.payload)),\r\n            switchMap((payload) =>\r\n                this.accountsService.getAccount(\r\n                    payload.data.bankId,\r\n                    payload.data.accountId,\r\n                    payload.clientId).pipe(\r\n                        map(account => AcctDetailsActions.loadAccountSuccess(account))\r\n                    )\r\n            )\r\n        ));\r\n\r\n    loadAccountSuccess$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(...[\r\n                AcctDetailsActions.loadAccountSuccess,\r\n                AcctDetailsActions.updateAccountSuccess\r\n            ]),\r\n            map((action) => AcctDetailsActions.setCurrentAccount({ account: action.payload }))\r\n        )\r\n    );\r\n\r\n    submitEditForm$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.sumbitEditForm),\r\n            withLatestFrom(this.store.select(AcctDetailsSelectors.editForm)),\r\n            map(([, form]) => AcctDetailsActions.updateAccountRequest(form.value))\r\n        ));\r\n\r\n    updateAccountRequest$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.updateAccountRequest),\r\n            switchMap(action => clientIdWithData(this.store, action.payload)),\r\n            withLatestFrom(this.store.select(AcctDetailsSelectors.currentAccountRouteParams)),\r\n            switchMap(([payload, routeParams]) =>\r\n                this.accountsService.updateAccount(\r\n                    routeParams.bankId,\r\n                    routeParams.accountId,\r\n                    payload.clientId,\r\n                    payload.data).pipe(\r\n                        withLatestFrom(this.store.select(AcctDetailsSelectors.currentAccount)),\r\n                        filter(([, account]) => account !== undefined),\r\n                        map(([, account]) => account as AccountModel),\r\n                        map((account) => AcctDetailsActions.updateAccountSuccess({ ...account, Name: payload.data.name })),\r\n                        catchError((error) => of(AcctDetailsActions.updateAccountFailure(error.error.Message)))\r\n                    )\r\n            ))\r\n    );\r\n\r\n    updateAccountSuccess$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.updateAccountSuccess),\r\n            map(() => NotifyActions.successNotification({ message: this.translateService.instant('componets.acct.updateAccountSuccess') }))\r\n        ));\r\n\r\n    updateRangeTransactions$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType<SetValueAction<Boxed<DateRange>>>(SetValueAction.TYPE),\r\n            filter((formControl: SetValueAction<Boxed<DateRange>>) => formControl.controlId.startsWith(ACCT_TRANSACTIONS_FILTER_FORM)),\r\n            withLatestFrom(\r\n                this.store.select(AcctDetailsSelectors.filterTransactions).pipe(\r\n                    filter(p => !!p),\r\n                    map(p => p as FormGroupState<AcctTransactionsFilter>))\r\n            ),\r\n            filter(\r\n                ([formControl, form]: [SetValueAction<Boxed<DateRange>>, FormGroupState<AcctTransactionsFilter>]) =>\r\n                    formControl.controlId === form.controls.range.id),\r\n            map(_ => AcctDetailsActions.loadTurnoversCurrentAccount())\r\n        ));\r\n\r\n    loadTurnoversCurrentAccount$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.loadTurnoversCurrentAccount),\r\n            withLatestFrom(\r\n                this.store.select(AcctDetailsSelectors.currentAccountRouteParams),\r\n                this.store.select(AcctDetailsSelectors.transactionsRange)\r\n            ),\r\n            map(([, routeParams, range]) =>\r\n                AcctDetailsActions.loadTurnoversRequest(\r\n                    {\r\n                        accountId: routeParams.accountId,\r\n                        bankId: routeParams.bankId,\r\n                        start: range.start,\r\n                        end: range.end\r\n                    }\r\n                )\r\n            )\r\n        ));\r\n\r\n    loadTurnovers$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.loadTurnoversRequest),\r\n            switchMap(action => clientIdWithData(this.store, action.payload)),\r\n            switchMap(payload =>\r\n                this.accountsService.getTurnovers(\r\n                    payload.data.bankId,\r\n                    payload.data.accountId,\r\n                    payload.clientId,\r\n                    payload.data.start,\r\n                    payload.data.end\r\n                ).pipe(\r\n                    map(turnovers => AcctDetailsActions.loadTurnoversSuccess(turnovers)),\r\n                    catchError(error => of(AcctDetailsActions.loadTurnoversFailure(error.error.Message)))\r\n                )\r\n            )\r\n        ));\r\n    openTurnover$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.openTurnovers),\r\n            map((action) => AcctDetailsActions.loadTransactionsRequest(action.id))\r\n        ));\r\n\r\n    closeTurnover$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.closeTurnovers),\r\n            withLatestFrom(this.store.select(AcctDetailsSelectors.loadTurnovers)),\r\n            tap(console.log),\r\n            filter(([action, loaders]) => loaders.includes(action.id)),\r\n            map(([action]) => AcctDetailsActions.loadTransactionsCancel({ id: action.id }))\r\n        )\r\n    );\r\n\r\n    loadTransactions$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.loadTransactionsRequest),\r\n            switchMap(action =>\r\n                clientIdWithData(this.store, action.payload).pipe(\r\n                    withLatestFrom(notNullAndUndefined(this.store, AcctDetailsSelectors.turnover(action.payload))),\r\n                )\r\n            ),\r\n            mergeMap(([payload, turnover]) => {\r\n                if (turnover.Transactions && turnover.Transactions.length !== 0) {\r\n                    return of(AcctDetailsActions.loadTransactionsSuccess({ id: turnover.Id, transactions: turnover.Transactions }));\r\n                }\r\n                return this.accountsService.getTransactions(\r\n                    turnover.BankId,\r\n                    turnover.AccId,\r\n                    payload.clientId,\r\n                    dayjs(turnover.TurnoverDate),\r\n                    dayjs(turnover.TurnoverDate)\r\n                ).pipe(\r\n                    map(transactions => AcctDetailsActions.loadTransactionsSuccess({ id: turnover.Id, transactions })),\r\n                    takeUntil(\r\n                        this.actions$.pipe(ofType(AcctDetailsActions.loadTransactionsCancel), filter(p => p.payload.id === turnover.Id))\r\n                    ),\r\n                    catchError(error => of(\r\n                        AcctDetailsActions.loadTransactionsFailure({ id: turnover.Id, error: error.error.Message }),\r\n                    ))\r\n                );\r\n            }\r\n            )\r\n        ));\r\n\r\n    loadTransactionsFailure$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.loadTransactionsFailure),\r\n            map((action) => AcctDetailsActions.closeTurnovers({ id: action.payload.id }))\r\n        ));\r\n\r\n    loadTransactionDetail$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.loadTransactionDetailRequest),\r\n            switchMap(action => clientIdWithData(this.store, action.payload)),\r\n            switchMap(payload =>\r\n                this.accountsService.getTransaction(\r\n                    payload.data.bankId,\r\n                    payload.data.id,\r\n                    payload.clientId\r\n                ).pipe(\r\n                    map((transaction) => AcctDetailsActions.loadTransactionDetailSuccess(transaction)),\r\n                    catchError((error) => of(AcctDetailsActions.loadTransactionDetailFailure(error.error.Message)))\r\n                )\r\n            )\r\n        ));\r\n\r\n    showTransactionPartial$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.showTransactionPartial),\r\n            withLatestFrom(this.store.select(AcctDetailsSelectors.currentAccount)),\r\n            switchMap(([action, account]) => {\r\n                const transacion = action.transaction;\r\n                const currentAccount: Partial<PaymentAccountModal> = {\r\n                    taxCode: account?.TaxCode,\r\n                    number: account?.Number,\r\n                    name: account?.Name\r\n                };\r\n                const correspondentAccount: Partial<PaymentAccountModal> = {\r\n                    number: transacion.CorrespondentAccountNumber,\r\n                    name: transacion.CorrespondentName\r\n                };\r\n                const payment: Partial<PaymentModal> = {\r\n                    purpose: transacion.Purpose,\r\n                    payedDate: transacion.PayedDate,\r\n                    documentDate: transacion.CreateDate,\r\n                    amount: transacion.Credit || transacion.Debit,\r\n                    sender: transacion.Credit > transacion.Debit ? correspondentAccount : currentAccount,\r\n                    recipient: transacion.Credit > transacion.Debit ? currentAccount : correspondentAccount,\r\n                    number: transacion.DocumentNumber,\r\n                    statusCode: StatusCode.bankPaid,\r\n                    currencyCode: account?.CurrencyCode\r\n                };\r\n                return [\r\n                    SharedActions.setLoader({ loader: AcctDetailsSelectors.isLoadingTransaction }),\r\n                    SharedActions.showPayment({ payment })\r\n                ];\r\n            })\r\n        ));\r\n\r\n    loadTransactionDetailSuccess$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(AcctDetailsActions.loadTransactionDetailSuccess),\r\n            map((action) => {\r\n                const transaction = action.payload;\r\n                const payment: PaymentModal = {\r\n                    number: transaction.Number,\r\n                    documentDate: transaction.DocumentDate,\r\n                    valueDate: transaction.ValueDate,\r\n                    statusCode: StatusCode.bankPaid,\r\n                    payedDate: transaction.PayedDate,\r\n                    purpose: transaction.Purpose,\r\n                    amount: transaction.Amount,\r\n                    amountString: transaction.AmountString,\r\n                    currencyCode: transaction.Sender.AccCurrencyCode || transaction.Recipient.AccCurrencyCode,\r\n                    sender: {\r\n                        name: transaction.Sender.Name,\r\n                        number: transaction.Sender.AccNumber,\r\n                        taxCode: transaction.Sender.TaxCode\r\n                    },\r\n                    recipient: {\r\n                        name: transaction.Recipient.Name,\r\n                        number: transaction.Recipient.AccNumber,\r\n                        taxCode: transaction.Recipient.TaxCode\r\n                    },\r\n                    actions: {}\r\n                };\r\n                payment.actions[PaymentAction.print] = () => console.log(transaction);\r\n\r\n                return SharedActions.setPayment({ payment });\r\n            })\r\n        ));\r\n\r\n    ngrxOnRunEffects(resolvedEffects$: Observable<EffectNotification>): Observable<EffectNotification> {\r\n        return this.actions$.pipe(\r\n            ofType(AcctDetailsActions.initDetails),\r\n            tap((action) => console.log(action)),\r\n            exhaustMap(() =>\r\n                resolvedEffects$.pipe(\r\n                    takeUntil(this.actions$.pipe(ofType(AcctDetailsActions.destroyDetails))))\r\n            )\r\n        );\r\n    }\r\n\r\n}\r\n\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { onNgrxForms, updateGroup, validate, wrapReducerWithFormStateUpdate } from 'ngrx-forms';\r\nimport { maxLength, required } from 'ngrx-forms/validation';\r\nimport { AcctEdit } from '@models/acct-edit.model';\r\nimport { AcctDetailsActions } from './actions';\r\nimport { initialEditFormState, initialAcctDetailsState } from './store';\r\nimport { createEntityAdapter, EntityAdapter } from '@ngrx/entity';\r\n\r\nexport const validateAndUpdateEditForm = updateGroup<AcctEdit>({\r\n    name: validate(required, maxLength(70))\r\n});\r\n\r\nexport const acctDetailsReducer = wrapReducerWithFormStateUpdate(\r\n    createReducer(\r\n        initialAcctDetailsState,\r\n        onNgrxForms(),\r\n        on(\r\n            AcctDetailsActions.setCurrentAccount,\r\n            (state, action) => ({ ...state, account: action.account })\r\n        ),\r\n        on(\r\n            AcctDetailsActions.setEditFormInitState,\r\n            (state) => ({ ...state, editForm: initialEditFormState })\r\n        ),\r\n        on(\r\n            AcctDetailsActions.loadTurnoversSuccess,\r\n            (state, action) => ({ ...state, turnovers: action.payload })\r\n        ),\r\n        on(\r\n            AcctDetailsActions.openTurnovers,\r\n            (state, action) => ({ ...state, openTurnovers: [...state.openTurnovers, action.id] })\r\n        ),\r\n        on(\r\n            AcctDetailsActions.closeTurnovers,\r\n            (state, action) =>\r\n                ({ ...state, openTurnovers: state.openTurnovers.filter(p => p !== action.id) })\r\n        ),\r\n        on(\r\n            AcctDetailsActions.loadTransactionsRequest,\r\n            (state, action) => ({ ...state, loadTurnovers: [...state.loadTurnovers, action.payload] })\r\n        ),\r\n        on(\r\n            AcctDetailsActions.loadTransactionsFailure,\r\n            AcctDetailsActions.loadTransactionsSuccess,\r\n            AcctDetailsActions.loadTransactionsCancel,\r\n            (state, action) => ({ ...state, loadTurnovers: state.loadTurnovers.filter(p => p !== action.payload.id) })\r\n        ),\r\n        on(\r\n            AcctDetailsActions.loadTransactionsSuccess,\r\n            (state, action) =>\r\n            ({\r\n                ...state,\r\n                turnovers: state.turnovers?.map(turnover =>\r\n                    turnover.Id === action.payload.id ?\r\n                        { ...turnover, Transactions: action.payload.transactions } :\r\n                        turnover\r\n                )\r\n            })\r\n        )\r\n    ),\r\n    s => s.editForm,\r\n    validateAndUpdateEditForm\r\n);\r\n","import { UiTurnovers } from '@models/turnovers.model';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { RouteSelectors } from '@store/route/selectors';\r\nimport dayjs from 'dayjs';\r\nimport { AcctLoadings } from '../models/acct-loadings.enum';\r\nimport { AcctSelectors } from '../selectors';\r\nimport { AcctState, ACCT_KEY } from '../store';\r\nimport { AcctDetailsState, ACCT_DETAILS_KEY } from './store';\r\n\r\n\r\nexport namespace AcctDetailsSelectors {\r\n\r\n    export const detailStore = createFeatureSelector<AcctDetailsState>(ACCT_DETAILS_KEY);\r\n\r\n    // export const detailStore = createSelector(\r\n    //     acctStore,\r\n    //     (store) => store.details\r\n    // );\r\n\r\n    export const editForm = createSelector(\r\n        detailStore,\r\n        state => state?.editForm\r\n    );\r\n\r\n    export const currentAccountRouteParams = createSelector(\r\n        RouteSelectors.selectRouteNestedParams,\r\n        ({ bankId, accountId }) => ({ bankId: (bankId as string) || '', accountId: parseInt(accountId || '', 10) })\r\n    );\r\n\r\n    export const currentAccount = createSelector(\r\n        AcctSelectors.acctStore,\r\n        detailStore,\r\n        currentAccountRouteParams,\r\n        (acctState, detailState, routeParams) => detailState?.account || acctState.accounts?.find(p => p.Id === routeParams.accountId)\r\n    );\r\n\r\n\r\n\r\n    export const filterTransactions = createSelector(\r\n        detailStore,\r\n        state => state?.transactionsFilterForm\r\n    );\r\n\r\n    export const transactionsRange = createSelector(\r\n        filterTransactions,\r\n        state => ({ start: dayjs(state?.value.range.value.start), end: dayjs(state?.value.range.value.end) })\r\n    );\r\n\r\n    export const isLoadingCurrentAccount = createSelector(\r\n        AcctSelectors.acctStore,\r\n        state => state.loadings.indexOf(AcctLoadings.details) >= 0\r\n    );\r\n\r\n    export const isLoadingTurnovers = createSelector(\r\n        AcctSelectors.acctStore,\r\n        state => state.loadings.indexOf(AcctLoadings.turnovers) >= 0\r\n    );\r\n\r\n    export const isLoadingTransactions = createSelector(\r\n        AcctSelectors.acctStore,\r\n        state => state.loadings.indexOf(AcctLoadings.transactions) >= 0\r\n    );\r\n\r\n    export const isLoadingDetailsPage = createSelector(\r\n        isLoadingTurnovers,\r\n        isLoadingCurrentAccount,\r\n        isLoadingTransactions,\r\n        // tslint:disable-next-line: no-shadowed-variable\r\n        (isLoadingTurnovers, isLoadingCurrentAccount, isLoadingTransactions) =>\r\n            isLoadingTurnovers || isLoadingCurrentAccount || isLoadingTransactions\r\n    );\r\n\r\n    export const isLoadingTransaction = createSelector(\r\n        AcctSelectors.acctStore,\r\n        state => state.loadings.indexOf(AcctLoadings.transaction) >= 0\r\n    );\r\n\r\n    export const currencyCode = createSelector(\r\n        currentAccount,\r\n        (account) => account?.CurrencyCode\r\n    );\r\n\r\n    export const openTurnovers = createSelector(\r\n        detailStore,\r\n        (store) => store.openTurnovers\r\n    );\r\n\r\n    export const loadTurnovers = createSelector(\r\n        detailStore,\r\n        (store) => store.loadTurnovers\r\n    );\r\n\r\n    export const turnovers = createSelector(\r\n        detailStore,\r\n        openTurnovers,\r\n        loadTurnovers,\r\n        (store, openArray, loadArray) =>\r\n            store.turnovers?.map(value =>\r\n                ({ ...value, isOpen: openArray.includes(value.Id), isLoading: loadArray.includes(value.Id) } as UiTurnovers)\r\n            )\r\n    );\r\n\r\n    export const turnover = (id: string) => createSelector(\r\n        turnovers,\r\n        (items) => items?.find(p => p.Id === id)\r\n    );\r\n}\r\n","import { AccountModel } from '@models/account.model';\r\nimport { Turnovers } from '@models/turnovers.model';\r\nimport dayjs from 'dayjs';\r\nimport { box, createFormGroupState, FormGroupState } from 'ngrx-forms';\r\nimport { AcctEdit } from '@models/acct-edit.model';\r\nimport { AcctTransactionsFilter } from '../models/acct-transaction-filter.model';\r\n\r\nexport const ACCT_DETAILS_KEY = 'acct_details';\r\nexport const ACCT_EDIT_FORM = 'ACCT_EDIT_FORM';\r\nexport const ACCT_TRANSACTIONS_FILTER_FORM = 'ACCT_TRANSACTIONS_FILTER_FORM';\r\n\r\nexport interface AcctDetailsState {\r\n    account?: AccountModel;\r\n    turnovers?: Turnovers[];\r\n    openTurnovers: string[];\r\n    loadTurnovers: string[];\r\n    editForm: FormGroupState<AcctEdit>;\r\n    transactionsFilterForm: FormGroupState<AcctTransactionsFilter>;\r\n}\r\n\r\n\r\nexport const initialEditFormState = createFormGroupState<AcctEdit>(ACCT_EDIT_FORM, {\r\n    name: ''\r\n});\r\n\r\nexport const initialTransactions = createFormGroupState<AcctTransactionsFilter>(ACCT_TRANSACTIONS_FILTER_FORM, {\r\n    range: box({\r\n        start: dayjs(dayjs().subtract(3, 'year').format('YYYY-MM-DD'), 'YYYY-MM-DD').toISOString(),\r\n        end: dayjs(dayjs().format('YYYY-MM-DD'), 'YYYY-MM-DD').toISOString()\r\n    })\r\n});\r\n\r\nexport const initialAcctDetailsState: AcctDetailsState = {\r\n    account: undefined,\r\n    turnovers: undefined,\r\n    openTurnovers: [],\r\n    loadTurnovers: [],\r\n    editForm: initialEditFormState,\r\n    transactionsFilterForm: initialTransactions\r\n};\r\n","import { Params } from '@angular/router';\r\nimport { getSelectors, RouterReducerState } from '@ngrx/router-store';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nexport namespace RouteSelectors {\r\n    export const selectRouter = createFeatureSelector<RouterReducerState>('router');\r\n\r\n    export const {\r\n        selectCurrentRoute, // select the current route\r\n        selectFragment, // select the current route fragment\r\n        selectQueryParams, // select the current route query params\r\n        selectQueryParam, // factory function to select a query param\r\n        selectRouteParams, // select the current route params\r\n        selectRouteParam, // factory function to select a route param\r\n        selectRouteData, // select the current route data\r\n        selectUrl, // select the current url\r\n    } = getSelectors(selectRouter);\r\n\r\n    export const selectRouteNestedParams = createSelector(selectRouter, (router) => {\r\n        let currentRoute = router?.state?.root;\r\n        let params: Params = {};\r\n        while (currentRoute?.firstChild) {\r\n            currentRoute = currentRoute.firstChild;\r\n            params = {\r\n                ...params,\r\n                ...currentRoute.params,\r\n            };\r\n        }\r\n        return params;\r\n    });\r\n\r\n    export const selectRouteNestedParam = (param: string) =>\r\n        createSelector(selectRouteNestedParams, (params) => params && params[param]);\r\n}\r\n\r\n","export enum StatusCode {\r\n    new = 'NEW',\r\n    onSign = 'ONSIGN',\r\n    onMySign = 'ONMYSIGN',\r\n    signed = 'SIGNED',\r\n    bankReceived = 'BANKRECEIVED',\r\n    bankPaid = 'BANKPAID',\r\n    bankError = 'BANKERROR'\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AccountComponent } from './account.component';\n\nconst routes: Routes = [{ path: '', component: AccountComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AcctDetailsActions } from '@store/acct/details/actions';\nimport { AcctDetailsEffects } from '@store/acct/details/effects';\nimport { acctDetailsReducer } from '@store/acct/details/reducer';\nimport { ACCT_DETAILS_KEY } from '@store/acct/details/store';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit, OnDestroy {\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n    this.store.addReducer(ACCT_DETAILS_KEY, acctDetailsReducer);\n    this.store.dispatch(AcctDetailsActions.initDetails());\n    this.store.dispatch(AcctDetailsActions.loadCurrentAccount());\n  }\n\n\n  ngOnDestroy(): void {\n    this.store.dispatch(AcctDetailsActions.destroyDetails());\n    this.store.removeReducer(ACCT_DETAILS_KEY as never);\n  }\n\n}\n","<div class=\"b1-wrapper no-wrap-xs b1-full-screen\">\n    <app-account-header></app-account-header>\n    <app-account-card></app-account-card>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveComponentModule } from '@ngrx/component';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AcctDetailsEffects } from '@store/acct/details/effects';\nimport { SharedModule } from 'src/app/@shared/shared.module';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { AccountComponent } from './account.component';\nimport { AccountCardComponent } from './components/account-card/account-card.component';\nimport { AccountDetailsComponent } from './components/account-details/account-details.component';\nimport { AccountEditModalComponent } from './components/account-edit-modal/account-edit-modal.component';\nimport { AccountHeaderComponent } from './components/account-header/account-header.component';\nimport {\n  AccountTurnoversHeaderComponent,\n} from './components/account-turnovers-header/account-turnovers-header.component';\nimport {\n  AccountTurnoversListComponent,\n} from './components/account-turnovers-list/account-turnovers-list.component';\nimport { AccountTurnoversComponent } from './components/account-turnovers/account-turnovers.component';\nimport { AccountTurnoversRowComponent } from './components/account-turnovers-row/account-turnovers-row.component';\nimport { AccountTransactionRowComponent } from './components/account-transaction-row/account-transaction-row.component';\nimport { AccountTransactionSkeletonComponent } from './components/account-transaction-skeleton/account-transaction-skeleton.component';\n\n\n@NgModule({\n  declarations: [\n    AccountComponent,\n    AccountCardComponent,\n    AccountHeaderComponent,\n    AccountDetailsComponent,\n    AccountEditModalComponent,\n    AccountTurnoversComponent,\n    AccountTurnoversHeaderComponent,\n    AccountTurnoversListComponent,\n    AccountTurnoversRowComponent,\n    AccountTransactionRowComponent,\n    AccountTransactionSkeletonComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AccountRoutingModule,\n    ReactiveComponentModule,\n    EffectsModule.forFeature([AcctDetailsEffects])\n  ]\n})\nexport class AccountModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account-card',\n  templateUrl: './account-card.component.html',\n  styleUrls: ['./account-card.component.scss']\n})\nexport class AccountCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"b1-full-data\">\n    <div class=\"b1-page-card b1-bg-light\">\n        <app-account-details></app-account-details>\n        <account-turnovers></account-turnovers>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PaymentAction } from '@models/enums/payment-action.enum';\nimport { PaymentModal } from '@models/payment-modal.model';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Store } from '@ngrx/store';\nimport { AcctDetailsSelectors } from '@store/acct/details/selectors';\nimport { AccountModel } from 'src/app/@shared/models/account.model';\nimport { AccountEditModalComponent } from '../account-edit-modal/account-edit-modal.component';\n\n@Component({\n  selector: 'app-account-details',\n  templateUrl: './account-details.component.html',\n  styleUrls: ['./account-details.component.scss']\n})\nexport class AccountDetailsComponent implements OnInit {\n\n  constructor(private store: Store, private modalService: NgbModal) { }\n\n  account$ = this.store.select(AcctDetailsSelectors.currentAccount);\n  isLoading$ = this.store.select(AcctDetailsSelectors.isLoadingCurrentAccount);\n\n  ngOnInit(): void {\n  }\n\n  editAccount(account: AccountModel): void {\n    const modalRef = this.modalService.open(AccountEditModalComponent);\n    modalRef.componentInstance.name = account.Name;\n  }\n\n}\n","<ng-container *ngrxLet=\"account$ as account\">\n    <ng-container *ngrxLet=\"isLoading$ as isLoading\">\n        <div class=\"b1-account\" *ngIf=\"account\">\n            <div class=\"b1-account-header\">\n                <div class=\"b1-account-header_card\">\n                    <div class=\"b1-flex b1-align-center b1-justify-between\">\n                        <div class=\"b1-medium b1-ellipsis\">\n                            {{account.Name}}\n                        </div>\n                        <div class=\"b1-large b1-ml-2 b1-hover-info pointer\" (click)=\"editAccount(account)\">\n                            <i b1-icon icon=\"edit\"></i>\n                        </div>\n                    </div>\n                    <div class=\"b1-large b1-mt-6\">\n                        {{account.Balance / 100 | money : ''}}\n                        {{account.CurrencyCode}}\n                    </div>\n                    <div class=\"b1-base b1-bold\">\n                        <div class=\"b1-flex b1-align-center\">\n                            <div class=\"b1-color-error b1-mr-5 b1-light\">\n                                <i b1-icon icon=\"chevron-down\" class=\"b1-mr-2\"></i>\n                                <span>{{account.DebitTurns / 100 | money:''}}</span>\n                            </div>\n                            <div class=\"b1-color-success b1-light\">\n                                <i b1-icon icon=\"chevron-up\" class=\"b1-mr-2\"></i>\n                                <span>{{account.CreditTurns / 100 | money:''}}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"b1-account-header_info\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"b1-base b1-color-dark-300\">\n                                {{'components.pay.account' | translate}}\n                            </div>\n                            <div class=\"b1-base b1-bold b1-ellipsis\">\n                                <span [iban]=\"account.Number\"></span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\" webClass=\"b1-mt-5\" mobileClass=\"b1-mt-3\">\n                        <div class=\"col-8\">\n                            <div class=\"b1-base b1-color-dark-300\">\n                                {{'components.acct.acctDetail.futureBalance' | translate}}\n                            </div>\n                            <div class=\"b1-base b1-bold b1-ellipsis\">\n                                {{account.PlannedBalance / 100 | money : ''}}\n                                {{account.CurrencyCode}}\n                            </div>\n                        </div>\n                        <div class=\"col-4\">\n                            <div class=\"b1-base b1-color-dark-300\">\n                                {{'components.acct.acctDetail.turnoverDate' | translate}}\n                            </div>\n                            <div class=\"b1-base b1-bold b1-ellipsis\">\n                                {{account.LastActive | date : 'dd.MM.yyyy'}}\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n            <div class=\"b1-card__col b1-card__col_dots b1-account-more\">\n                <div class=\"dropdown\">\n                    <a class=\"b1-card__v-dots without-after b1-rotate-90\"\n                        (click)=\"$event.stopPropagation(); dropdown.open();\">\n                    </a>\n                    <ul class=\"b1-dropdown b1-bg-light test\" webClass=\"b1-animate fade-in-up\" role=\"menu\"\n                        style=\"width: 360px;\" ngbDropdown #dropdown=\"ngbDropdown\" mobile-more>\n                        <!-- TODO ADD  IsPayingAccount on backend-->\n                        <li class=\"b1-dropdown__item\" ng-if=\"account.IsPayingAccount\">\n                            <a class=\"b1-dropdown__link\" webClass=\"b1-base\" mobileClass=\"b1-medium\"\n                                ng-click=\"accountsCtrl.accActions.createPayment($event, account.Id,'INNER')\">\n                                <i b1-icon icon=\"cards\" class=\"b1-medium b1-mr-3\"></i>\n\n                                <span>{{'components.acct.newPayment' | translate}}</span>\n                                <span>&nbsp;</span>\n                                <span>{{'components.pay.actions.innerPay' | translate}}</span>\n                            </a>\n                        </li>\n                        <!-- TODO ADD  IsPayingAccount on backend-->\n                        <li class=\"b1-dropdown__item\" ng-if=\"account.IsPayingAccount\">\n                            <a class=\"b1-dropdown__link\" webClass=\"b1-base\" mobileClass=\"b1-medium\"\n                                ng-click=\"accountsCtrl.accActions.createPayment($event, account.Id, 'OUTER')\">\n\n                                <i b1-icon icon=\"country\" class=\"b1-medium b1-mr-3\"></i>\n                                <span>{{'components.acct.newPayment' | translate}}</span>\n                                <span>&nbsp;</span>\n                                <span>{{'components.pay.actions.inUrainePay' | translate}}</span>\n                            </a>\n                        </li>\n                        <!-- TODO ADD  IsPayingAccount on backend-->\n                        <!-- TODO ADD Directive role in -->\n                        <li class=\"b1-dropdown__item\" ng-if=\"account.IsPayingAccount\">\n                            <a data-role-in=\"Director,Accountant,ForeignCurrencyPaymentsManager\"\n                                class=\"b1-dropdown__link\" webClass=\"b1-base\" mobileClass=\"b1-medium\"\n                                ng-show=\"accountsCtrl.isForeignCurrency(account.CurrencyCode)\" ng-click=\"accountsCtrl.accActions.createPayment($event, account.Id,\n                                   'SWIFT')\">\n\n                                <i b1-icon icon=\"swift\" class=\" b1-mr-3\"></i>\n                                <span>{{'components.acct.newPayment' | translate}}</span>\n                                <span>&nbsp;</span>\n                                <span>{{'components.pay.actions.swift' | translate}}</span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <!-- SKELETON -->\n        <div class=\"b1-account\" *ngIf=\"!account && isLoading\">\n            <div class=\"b1-account-header\">\n                <div class=\"b1-account-header_card\">\n                    <div class=\"b1-flex b1-align-center b1-justify-between\">\n                        <div class=\"b1-medium b1-ellipsis width-100\">\n                            <ngx-skeleton-loader animation=\"pulse\">\n\n                            </ngx-skeleton-loader>\n                        </div>\n                    </div>\n                    <div class=\"b1-large b1-mt-6\">\n                        <ngx-skeleton-loader animation=\"pulse\">\n\n                        </ngx-skeleton-loader>\n                        <ngx-skeleton-loader animation=\"pulse\">\n\n                        </ngx-skeleton-loader>\n                    </div>\n                    <div class=\"b1-base b1-bold\">\n                        <div class=\"b1-flex b1-align-center\">\n                            <div class=\"b1-color-error b1-mr-5 b1-flex b1-align-center\">\n                                <ngx-skeleton-loader animation=\"pulse\">\n\n                                </ngx-skeleton-loader>\n                            </div>\n                            <div class=\"b1-color-success b1-flex b1-align-center\">\n                                <ngx-skeleton-loader animation=\"pulse\">\n\n                                </ngx-skeleton-loader>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"b1-account-header_info\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <div class=\"b1-micro b1-page-data__subtitle b1-mb-2 width-50\">\n                                <ngx-skeleton-loader animation=\"pulse\">\n\n                                </ngx-skeleton-loader>\n                            </div>\n                            <div class=\"b1-base b1-bold b1-ellipsis\">\n                                <ngx-skeleton-loader animation=\"pulse\">\n\n                                </ngx-skeleton-loader>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <div class=\"b1-micro b1-page-data__subtitle b1-mb-2 width-50\">\n                                <ngx-skeleton-loader animation=\"pulse\">\n\n                                </ngx-skeleton-loader>\n                            </div>\n                            <div class=\"b1-base b1-bold b1-ellipsis\">\n                                <ngx-skeleton-loader animation=\"pulse\">\n\n                                </ngx-skeleton-loader>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"b1-micro b1-page-data__subtitle b1-mb-2 width-50\">\n                                <ngx-skeleton-loader animation=\"pulse\">\n\n                                </ngx-skeleton-loader>\n                            </div>\n                            <div class=\"b1-base b1-bold b1-ellipsis\">\n                                <ngx-skeleton-loader animation=\"pulse\">\n\n                                </ngx-skeleton-loader>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n\n\n</ng-container>","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Store } from '@ngrx/store';\nimport { AcctDetailsActions } from '@store/acct/details/actions';\nimport { AcctDetailsSelectors } from '@store/acct/details/selectors';\nimport { notNullAndUndefined } from '@store/shared';\n\n\n@Component({\n  selector: 'app-account-edit-modal',\n  templateUrl: './account-edit-modal.component.html',\n  styleUrls: ['./account-edit-modal.component.scss']\n})\nexport class AccountEditModalComponent implements OnInit {\n\n  @Input() name?: string;\n\n  constructor(public activeModal: NgbActiveModal, private store: Store) { }\n\n  editForm$ = this.store.select(AcctDetailsSelectors.editForm);\n\n  ngOnInit(): void {\n    this.store.dispatch(AcctDetailsActions.setEditFormInitState());\n    if (this.name) {\n      this.store.dispatch(AcctDetailsActions.setAccountName({ name: this.name }));\n    }\n  }\n\n  save(): void {\n    this.store.dispatch(AcctDetailsActions.sumbitEditForm());\n    this.activeModal.close();\n  }\n\n}\n","<div class=\"b1-modal-data\" *ngrxLet=\"editForm$ as editForm\">\n    <div class=\"b1-modal-close\">\n\n        <i b1-icon icon=\"cancel\" (click)=\"activeModal.close()\"></i>\n    </div>\n    <div class=\"b1-modal-header\">\n        <div class=\"b1-title2\">\n            {{'components.acct.editAccount' | translate}}\n        </div>\n    </div>\n    <form class=\"b1-modal-body b1-modal-wrapper\" name=\"form\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"b1-input\">\n                    <label class=\"b1-input__label b1-input__label_top\">{{'componenets.acct.accName' |\n                        translate}}</label>\n                    <textarea class=\"w-full b1-base b1-input__control b1-input__control_textarea\"\n                        [ngrxFormControlState]=\"editForm.controls.name\"\n                        style=\"max-width: 360px; max-height: 360px;\"></textarea>\n                </div>\n            </div>\n        </div>\n    </form>\n    <div class=\"b1-modal-footer\" ngbAutofocus>\n        <button class=\"b1-button-primary \" type=\"button\" (click)=\"save()\" [disabled]=\"editForm.isInvalid\">\n            <i b1-icon icon=\"save\"></i>\n            {{'actions.save' | translate}}\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-account-header',\n  templateUrl: './account-header.component.html',\n  styleUrls: ['./account-header.component.scss']\n})\nexport class AccountHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"b1-page-title\">\n    <div class=\"b1-title2\">\n        {{'components.acct.detailAccount' | translate}}\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { TurnoverTransaction } from '@models/turnover-transaction.model';\nimport { Store } from '@ngrx/store';\nimport { AcctDetailsActions } from '@store/acct/details/actions';\nimport { AcctDetailsSelectors } from '@store/acct/details/selectors';\n\n@Component({\n  selector: 'account-transaction-row',\n  templateUrl: './account-transaction-row.component.html',\n  styleUrls: ['./account-transaction-row.component.scss']\n})\nexport class AccountTransactionRowComponent implements OnInit {\n\n  @Input() payment!: TurnoverTransaction;\n\n  constructor(private store: Store) { }\n\n  currencyCode$ = this.store.select(AcctDetailsSelectors.currencyCode);\n\n  ngOnInit(): void {\n  }\n\n  showTransaction(): void {\n    this.store.dispatch(AcctDetailsActions.showTransactionPartial({ transaction: this.payment }));;\n    this.store.dispatch(AcctDetailsActions.loadTransactionDetailRequest({ id: this.payment.DocumentId, bankId: this.payment.BankId }));\n  }\n\n}\n","<ng-container *ngrxLet=\"currencyCode$ as currencyCode\">\n    <div class=\"b1-page-data__row transaction\" (click)=\"showTransaction()\">\n        <div class=\"b1-page-content_type transaction-type\">\n            <div class=\"b1-transaction-type-credit\" *ngIf=\"payment.Credit > payment.Debit\">\n                <i b1-icon icon=\"arrow-up\"></i>\n            </div>\n            <div class=\"b1-transaction-type-debit\" *ngIf=\"payment.Credit < payment.Debit\">\n                <i b1-icon icon=\"arrow-down\"></i>\n            </div>\n        </div>\n        <div class=\"transaction-body b1-ellipsis\">\n            <div class=\"transaction-number\">\n                <div class=\"b1-medium b1-ellipsis\" webClass=\"b1-medium\" mobileClass=\"b1-base bold\">\n                    <span data-translate=\"components.pay.number\">№</span>\n                    <span> {{payment.DocumentNumber || payment.DocumentId}}</span>\n                </div>\n                <div class=\"b1-medium b1-page-data__subtitle b1-light\" webClass=\"b1-medium\" mobileClass=\"b1-base\">\n                    <span data-translate=\"components.pay.from\">від</span>:\n                    <span>{{payment.PayedDate || payment.CreateDate | date : 'dd.MM.yyyy'}} </span>\n                </div>\n            </div>\n            <div class=\"transaction-correspondent\">\n                <div class=\"b1-medium\" style=\"display: flex; align-items: center;\">\n                    <span class=\"b1-ellipsis\">\n                        {{payment.CorrespondentName}}\n                    </span>\n                </div>\n                <div id=\"purpose\" class=\"b1-medium b1-page-data__subtitle b1-word-wrap b1-IE-word b1-light\">\n                    {{payment.Purpose}}\n                </div>\n            </div>\n            <div class=\"transaction-amount\">\n                <div class=\"b1-title3 text-right\">\n                    <span class=\"b1-large b1-bold\" *ngIf=\"payment.Credit > payment.Debit\">\n                        {{payment.Credit / 100 | money : currencyCode}}\n                    </span>\n                    <span class=\"b1-large b1-bold\" *ngIf=\"payment.Credit < payment.Debit\">\n                        {{payment.Debit / 100 | money : currencyCode}}\n                    </span>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"transaction-more b1-card__col b1-card__col_dots\" id=\"dropdown{{payment.Id}}\">\n            <div class=\"dropdown\">\n                <a class=\"b1-card__v-dots\" data-toggle=\"dropdown\" uib-dropdown-toggle=\"\" aria-haspopup=\"true\"\n                    onclick=\"$(this).offset().top - $('.b1-page-data').offset().top - $(this).next().height() < 0 ? $(this).next().addClass('b1-dropdown_down').removeClass('b1-dropdown_up') : $(this).next().addClass('b1-dropdown_up').removeClass('b1-dropdown_down')\"\n                    aria-expanded=\"false\">\n                </a>\n                <ul class=\"b1-dropdown b1-bg-light b1-animate fade-in-up\" style=\"min-width: 180px;\" role=\"menu\">\n                    <li class=\"b1-dropdown__item\">\n                        <a class=\"b1-dropdown__link b1-base\" href=\"\"\n                            ng-click=\"printTransaction(payment.DocumentId, payment.BankId)\">\n                            <i class=\"ub-icons ub-icons-icon-print b1-mr-3\"></i>\n                            {{'components.pay.print' | translate}}\n                        </a>\n                    </li>\n                    <li class=\"b1-dropdown__item\" ng-show=\"currency === 'UAH'\">\n                        <a class=\"b1-dropdown__link b1-base\" href=\"\"\n                            ng-click=\"CreatePayment(payment.DocumentId, payment.BankId, payment.Credit < payment.Debit)\">\n                            <i class=\"ub-icons ub-icons-icon-country b1-mr-3\"></i>\n                            {{'components.pay.correspondents.createPayment'|translate}}\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</ng-container>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'account-transaction-skeleton',\n  templateUrl: './account-transaction-skeleton.component.html',\n  styleUrls: ['./account-transaction-skeleton.component.scss', './../account-transaction-row/account-transaction-row.component.scss']\n})\nexport class AccountTransactionSkeletonComponent implements OnInit {\n\n  @Input() count!: number;\n  array!: number[];\n  constructor() {\n  }\n\n  ngOnInit(): void {\n    this.array = Array.from(Array(this.count).keys());\n  }\n\n}\n","<div class=\"b1-page-data__row transaction\" *ngFor=\"let item of array\">\n    <div class=\"b1-page-content_type transaction-type\">\n        <div class=\"b1-transaction-type-loader\">\n            <ngx-skeleton-loader appearance=\"circle\">\n            </ngx-skeleton-loader>\n        </div>\n    </div>\n    <div class=\"transaction-body b1-ellipsis\">\n        <div class=\"transaction-number\">\n            <div webClass=\"w-50\" mobileClass=\"w-100\">\n                <ngx-skeleton-loader>\n                </ngx-skeleton-loader>\n            </div>\n            <div webClass=\"w-50\" mobileClass=\"hidden\">\n                <ngx-skeleton-loader>\n                </ngx-skeleton-loader>\n            </div>\n        </div>\n        <div class=\"transaction-correspondent b1-flex w-100\">\n            <div webClass=\"w-50\" mobileClass=\"w-100\">\n                <ngx-skeleton-loader>\n                </ngx-skeleton-loader>\n            </div>\n            <div webClass=\"w-50\" mobileClass=\"hidden\">\n                <ngx-skeleton-loader>\n                </ngx-skeleton-loader>\n            </div>\n        </div>\n        <div class=\"transaction-amount\">\n            <div webClass=\"w-50\" mobileClass=\"w-100\">\n                <ngx-skeleton-loader>\n                </ngx-skeleton-loader>\n            </div>\n\n        </div>\n    </div>\n\n    <div class=\"transaction-more b1-card__col b1-card__col_dots\">\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AcctDetailsSelectors } from '@store/acct/details/selectors';\nimport { rangeValueConverter } from '@store/shared';\nimport dayjs from 'dayjs';\n\n@Component({\n  selector: 'account-turnovers-header',\n  templateUrl: './account-turnovers-header.component.html',\n  styleUrls: ['./account-turnovers-header.component.scss']\n})\nexport class AccountTurnoversHeaderComponent implements OnInit {\n\n  constructor(private store: Store) { }\n  form$ = this.store.select(AcctDetailsSelectors.filterTransactions);\n  isLoading$ = this.store.select(AcctDetailsSelectors.isLoadingDetailsPage);\n  public selected: any;\n  public rangeValueConverter = rangeValueConverter;\n  ranges: any = {\n    'shared.picker.today': [dayjs(), dayjs()],\n    'shared.picker.currentMonth': [dayjs().startOf('month'), dayjs()],\n    'shared.picker.month1': [dayjs().subtract(1, 'month'), dayjs()],\n    'shared.picker.month2': [dayjs().subtract(2, 'month'), dayjs()],\n    'shared.picker.month3': [dayjs().subtract(3, 'month'), dayjs()],\n  };\n\n  ngOnInit(): void {\n  }\n}\n","<!-- <div class=\"b1-page-actions\" style=\"display: none;\">\n    <div class=\"b1-page-actions__left\">\n        <div class=\"b1-title3\">\n            {{'components.acct.accountTurnovers' | translate}}\n        </div>\n        <div class=\"b1-page-icons\" style=\"margin-left:0\">\n\n\n            <div ng-if=\"IsEnableFunction('Accounts','Requisites') && accDetailCtrl.acc.CurrencyCode=='UAH'\">\n                <button ng-click=\"histCtrl.showShareWindow()\" class=\"b1-page-icon ub-icons ub-icons-icon-file\"\n                    ng-disabled=\"importCtrl.state.isLoading\">\n                </button>\n            </div>\n  \n            <div>\n                <button ng-click=\"histCtrl.showExportStatementWindow()\"\n                    class=\"b1-page-icon ub-icons ub-icons-icon-export\" ng-disabled=\"importCtrl.state.isLoading\">\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class=\"b1-page-actions__right b1-flex b1-align-center\" style=\"width: auto;\">\n        <div class=\"b1-base b1-page-data__subtitle b1-light\">\n            {{'components.acct.period' | translate}}\n        </div>\n        <div class=\"b1-page-inputWithIcon m-l-20\">\n            <input date-range-picker class=\"b1-datepicker__input b1-rangepicker\" type=\"text\"\n                ng-model=\"histCtrl.datePicker.date\" picker=\"histCtrl.datePicker.picker\"\n                picker-classes=\"extra-class-names\" min=\"histCtrl.datePicker.minDate\" max=\"histCtrl.datePicker.maxDate\"\n                id=\"calendar\" name=\"calendar\" readonly options=\"histCtrl.datePicker.options\" />\n            <label for=\"calendar\" class=\"ub-icons ub-icons-icon-calendar\"></label>\n        </div>\n    </div>\n</div> -->\n\n<ng-container *ngrxLet=\"form$ as form\">\n    <div class=\"account-actions\" *ngIf=\"form\">\n        <div class=\"account-actions_title\">\n            <div class=\"b1-title3\">\n                {{'components.acct.accountTurnovers' | translate}}\n            </div>\n        </div>\n        <div class=\"account-actions_buttons\">\n            <div class=\"b1-page-icons\" style=\"margin-left:0\">\n\n                <!-- <button ng-click=\"histCtrl.showStatementWindow()\"\n                class=\"b1-button-primary b1-button-primary_filled b1-mr-4 b1-ml-4\"\n                ng-disabled=\"importCtrl.state.isLoading\">\n                <i class=\"ub-icons ub-icons-icon-statement\"></i>\n                {{'components.acct.getStatement' | translate}}\n            </button> -->\n                <!-- tooltips tooltip-template=\"{{'components.acct.share' | translate}}\" -->\n                <div ng-if=\"IsEnableFunction('Accounts','Requisites') && accDetailCtrl.acc.CurrencyCode=='UAH'\">\n                    <button ng-click=\"histCtrl.showShareWindow()\" class=\"b1-page-icon\" b1-icon icon=\"file-details\"\n                        ng-disabled=\"importCtrl.state.isLoading\">\n                    </button>\n                </div>\n                <!-- tooltips tooltip-template=\"{{'components.acct.geExportStatement' | translate}}\" -->\n                <div>\n                    <button ng-click=\"histCtrl.showExportStatementWindow()\" class=\"b1-page-icon\" b1-icon icon=\"export\"\n                        ng-disabled=\"importCtrl.state.isLoading\">\n                    </button>\n                </div>\n            </div>\n\n        </div>\n        <form class=\"account-actions_calendar\" [ngrxFormState]=\"form\">\n            <div class=\"b1-page-inputWithIcon\">\n                <input class=\"b1-datepicker__input b1-rangepicker\" b1-daterangepicker startKey=\"start\" endKey=\"end\"\n                    [ngrxFormControlState]=\"form.controls.range\" [ngrxValueConverter]=\"rangeValueConverter\"\n                    name=\"daterange\" [ranges]=\"ranges\" readonly />\n                <label for=\"calendar\" b1-icon icon=\"calendar\"></label>\n            </div>\n        </form>\n    </div>\n    <b1-card-loader [isLoading]=\"isLoading$\"></b1-card-loader>\n\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { Turnovers, UiTurnovers } from '@models/turnovers.model';\nimport { Store } from '@ngrx/store';\nimport { AcctDetailsSelectors } from '@store/acct/details/selectors';\n\n@Component({\n  selector: 'account-turnovers-list',\n  templateUrl: './account-turnovers-list.component.html',\n  styleUrls: ['./account-turnovers-list.component.scss']\n})\nexport class AccountTurnoversListComponent implements OnInit {\n\n  constructor(private store: Store) { }\n\n  turnovers$ = this.store.select(AcctDetailsSelectors.turnovers);\n\n  ngOnInit(): void {\n  }\n\n  trackId(index: number, turnover: UiTurnovers): string | undefined {\n    return turnover ? turnover.Id : undefined;\n  }\n\n}\n","<ng-container *ngrxLet=\"turnovers$ as turnovers\">\n    <div class=\"b1-page-data b1-page-data_auto\">\n        <account-turnovers-row *ngFor=\"let turnover of turnovers;trackBy:trackId\" [turnover]=\"turnover\">\n        </account-turnovers-row>\n    </div>\n</ng-container>","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Turnovers, UiTurnovers } from '@models/turnovers.model';\nimport { Store } from '@ngrx/store';\nimport { AcctDetailsActions } from '@store/acct/details/actions';\nimport { AcctDetailsSelectors } from '@store/acct/details/selectors';\n\n@Component({\n  selector: 'account-turnovers-row',\n  templateUrl: './account-turnovers-row.component.html',\n  styleUrls: ['./account-turnovers-row.component.scss']\n})\nexport class AccountTurnoversRowComponent implements OnInit {\n\n  @Input() turnover!: UiTurnovers;\n\n  constructor(private store: Store) {\n    console.log('AccountTurnoversRowComponent');\n  }\n\n  currencyCode$ = this.store.select(AcctDetailsSelectors.currencyCode);\n\n  ngOnInit(): void {\n  }\n\n  toggleTurnover(): void {\n    if (this.turnover.isOpen) {\n      this.store.dispatch(AcctDetailsActions.closeTurnovers({ id: this.turnover.Id }));\n    }\n    else {\n      this.store.dispatch(AcctDetailsActions.openTurnovers({ id: this.turnover.Id }));\n    }\n  }\n\n}\n","<ng-container *ngrxLet=\"currencyCode$ as currencyCode\">\n    <div class=\"b1-page-data__row turnover\" [class.selected]=\"turnover.isOpen\" (click)=\"toggleTurnover()\">\n        <div class=\"b1-card__col b1-card__col_expand turnover-expand\">\n            <span class=\"b1-card__expand\" [class.rotate]=\"turnover.isOpen\" [class.rotate-wise]=\"!turnover.isOpen\">\n                <i b1-icon [icon]=\"'chevron-right'\"></i>\n            </span>\n        </div>\n        <div class=\"turnover-body\">\n            <div class=\"turnover-date\">\n                <div class=\"b1-base b1-color-dark-300\">\n                    {{'components.acct.acctDetail.turnoverDate' | translate}}\n                </div>\n                <div class=\"b1-base b1-bold\">\n                    {{turnover.TurnoverDate | date:'dd.MM.yyyy'}}\n                </div>\n            </div>\n            <div class=\"turnover-money\">\n                <div class=\"turnover-money_item\">\n                    <div class=\"b1-base b1-color-dark-300\">\n                        {{'components.acct.headers.inputRemains' | translate}}\n                    </div>\n                    <div class=\"b1-base b1-bold\">\n                        {{turnover.BalanceIn / 100 | money : currencyCode}}\n                    </div>\n                </div>\n                <div class=\"turnover-money_item\">\n                    <div class=\"b1-base b1-color-dark-300\">\n                        {{'components.acct.headers.debit' | translate}}\n                    </div>\n                    <div class=\"b1-base b1-bold\">\n                        {{turnover.Debit / 100 | money : currencyCode}}\n                    </div>\n                </div>\n                <div class=\"turnover-money_item\">\n                    <div class=\"b1-base b1-color-dark-300\">\n                        {{'components.acct.headers.credit' | translate}}\n                    </div>\n                    <div class=\"b1-base b1-bold\">\n                        {{turnover.Credit / 100 | money :currencyCode}}\n                    </div>\n                </div>\n                <div class=\"turnover-money_item\">\n                    <div class=\"b1-base b1-color-dark-300\">\n                        {{'components.acct.headers.outputRemains' | translate}}\n                    </div>\n                    <div class=\"b1-base b1-bold\">\n                        {{turnover.BalanceOut / 100 | money : currencyCode}}\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n    <div class=\"b1-page-data b1-page-data_auto turnover-transactions\" *ngIf=\"turnover.isOpen && turnover.Transactions\">\n        <account-transaction-row *ngFor=\"let payment of turnover.Transactions;let last = last\" [payment]=\"payment\"\n            [class.last]=\"last\">\n        </account-transaction-row>\n        <!-- <div class=\"b1-page-data__row\" name=\"payment\">\n            <div class=\"b1-page-content row\">\n                <div class=\"col-lg-1 turnover-money_item\">\n                    <div class=\"b1-flex b1-align-center\">\n                        <div class=\"b1-page-content_type\">\n                            <div class=\"b1-transaction-type-loader\">\n                                <ngx-skeleton-loader appearance=\"circle\">\n                                </ngx-skeleton-loader>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"b1-medium b1-ellipsis w-50\">\n                        <ngx-skeleton-loader></ngx-skeleton-loader>\n                    </div>\n                    <div class=\"b1-medium b1-page-data__subtitle b1-light w-50\">\n                        <ngx-skeleton-loader></ngx-skeleton-loader>\n                    </div>\n                </div>\n                <div class=\"col-md-4\">\n                    <div class=\"b1-medium\">\n                        <ngx-skeleton-loader></ngx-skeleton-loader>\n                    </div>\n                    <div class=\"b1-medium\">\n                        <ngx-skeleton-loader></ngx-skeleton-loader>\n                    </div>\n                </div>\n                <div class=\"col-md-3\">\n                    <div class=\"b1-title3 text-right\">\n                        <ngx-skeleton-loader></ngx-skeleton-loader>\n                    </div>\n                </div>\n            </div>\n        </div> -->\n    </div>\n    <div class=\"b1-page-data b1-page-data_auto\" *ngIf=\"turnover.isOpen && !turnover.Transactions\">\n        <account-transaction-skeleton [count]=\"turnover.TransactionsCount\">\n\n        </account-transaction-skeleton>\n    </div>\n</ng-container>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AcctDetailsActions } from '@store/acct/details/actions';\n\n@Component({\n  selector: 'account-turnovers',\n  templateUrl: './account-turnovers.component.html',\n  styleUrls: ['./account-turnovers.component.scss']\n})\nexport class AccountTurnoversComponent implements OnInit {\n\n  constructor(private store: Store) { }\n\n\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<account-turnovers-header></account-turnovers-header>\n<account-turnovers-list></account-turnovers-list>"],"names":[],"sourceRoot":"webpack:///"}