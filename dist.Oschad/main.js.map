{"version":3,"sources":["./src/app/@core/services/notifications.service.ts","./src/app/@core/store/effects/route.effects.ts","./src/app/layout/header/header.component.ts","./src/app/layout/header/header.component.html","crypto (ignored)","./src/app/@core/store/effects/settings.effects.ts","./src/app/@core/services/settings.service.ts","./src/app/@shared/components/b1-global-loader/b1-global-loader.component.ts","./src/app/@shared/components/b1-global-loader/b1-global-loader.component.html","./src/app/@shared/pipes/accounts-filter.pipe.ts","./src/app/@core/store/reducers/user.reducers.ts","./src/app/@core/store/reducers/auth.reducers.ts","./src/app/@core/store/actions/public.actions.ts","./src/app/@core/store/actions/notify.actions.ts","./src/environments/environment.ts","./src/app/@core/store/shared.ts","./src/app/@core/services/iban.service.ts","./src/app/@core/store/selectors/user.selectors.ts","./src/app/modules/auth/models/login.model.ts","./src/app/@core/store/effects/user.effects.ts","./src/app/@core/store/actions/acct.actions.ts","./src/app/@shared/directives/mobile-class.directive.ts","./src/app/layout/authorized-layout/authorized-layout.component.ts","./src/app/layout/authorized-layout/authorized-layout.component.html","./src/app/@core/store/effects/auth.effects.ts","./src/app/@core/store/selectors/router.selectors.ts","./src/app/@core/store/effects/acct.effects.ts","./src/app/@core/services/filter.service.ts","./src/app/@core/store/effects/public.effects.ts","./src/app/@core/interceptors/auth.interceptor.ts","./src/app/@shared/directives/more-auto-direction.directive.ts","./src/app/@shared/components/b1-card-loader/b1-card-loader.component.ts","./src/app/@shared/components/b1-card-loader/b1-card-loader.component.html","./src/app/layout/sidebar/sidebar.component.ts","./src/app/layout/sidebar/sidebar.component.html","./src/app/@core/store/actions/settings.actions.ts","./src/app/@core/store/effects/notify.effects.ts","./src/app/@core/store/reducers/public.reducers.ts","./src/app/@core/store/reducers/acct.reducers.ts","./src/app/@shared/pipes/money.pipe.ts","./src/app/@shared/directives/b1-icon.directive.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/@core/store/selectors/app.selectors.ts","./src/app/@core/services/base.service.ts","./src/app/@core/store/actions/auth.actions.ts","./src/app/@core/core.module.ts","./src/app/modules/accounts/models/acct-tab.enum.ts","./src/app/@core/store/actions/user.actions.ts","./src/app/@shared/directives/web-class.directive.ts","./src/app/app.module.ts","./src/app/@core/services/acct.service.ts","./src/app/@shared/directives/mobile-more.directive.ts","./src/app/@core/store/reducers/app.reducers.ts","./src/app/@core/services/public.service.ts","./src/app/@core/store/selectors/auth.selectors.ts","./src/app/modules/auth/models/login-otp.model.ts","./src/app/@shared/directives/iban.directive.ts","./src/app/@shared/directives/connect-form.directive.ts","./src/app/@core/store/selectors/acct.selectors.ts","./src/app/@core/store/index.ts","./src/app/@shared/directives/virtual-patch.directive.ts","./src/app/@shared/shared.module.ts","./src/app/@core/store/actions/app.actions.ts","./src/app/@core/store/selectors/settings.selectors.ts","./src/app/@core/store/actions/route.actions.ts","./src/app/@core/store/reducers/settings.reducers.ts","./src/app/@core/facades/user.facade.ts","./src/app/@shared/models/filter.model.ts","./src/app/@core/services/auth.service.ts","./src/app/@core/services/menu.service.ts","./src/app/@core/services/user.service.ts","./src/app/app-routing.module.ts","./src/app/@shared/directives/check-state.directive.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BaseService } from './base.service';\r\nimport { Notification } from 'src/app/@shared/models/notification.model';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NotificationsService extends BaseService {\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getNotifications(userId: string): Observable<Array<Notification>> {\r\n        return this.http.get<Array<Notification>>(`api/v1/notify/${userId}`);\r\n    }\r\n}\r\n","import * as authActions from '@actions/auth.actions';\r\nimport * as acctActions from '@actions/acct.actions';\r\nimport * as routeActions from '@actions/route.actions';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class RouteEffects {\r\n    constructor(private actions$: Actions, private router: Router) { }\r\n\r\n    routToEffect$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(routeActions.routeTo),\r\n            tap((action) => this.router.navigateByUrl(action.route))\r\n        ),\r\n        { dispatch: false }\r\n    );\r\n\r\n    dashboardEffect$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(authActions.authLoadProfileSuccess),\r\n            map(() => routeActions.routeTo({ route: 'accounts' }))\r\n        )\r\n    );\r\n\r\n    logoutEffect$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(authActions.logout),\r\n            map(() => routeActions.routeTo({ route: 'auth' }))\r\n        )\r\n    );\r\n\r\n    detailAccount$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(acctActions.goToDetail),\r\n            map((payload) => routeActions.routeTo({ route: `accounts/${payload.account.BankId}/${payload.account.Id}` }))\r\n        ));\r\n}\r\n","import { setGlobalLoader } from '@actions/app.actions';\r\nimport { closeMenu, openMenu, setDarkMode, setLanguage } from '@actions/settings.actions';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UserFacade } from '@core/facades/user.facade';\r\nimport { Store } from '@ngrx/store';\r\nimport { allowedLanguagesSelector, currentLanguageSelector, darkModeSelector, isCollapsedSelector, isOpenMenu, logoSelector } from '@selectors/settings.selectors';\r\nimport { countNotificationsSelector, userNameSelector, userPictureSelector } from '@selectors/user.selectors';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n\r\n  constructor(private userFacade: UserFacade, private store: Store) { }\r\n\r\n  public countCustomers$ = this.userFacade.countCustomers$;\r\n  public language$ = this.store.select(currentLanguageSelector);\r\n  public languages$ = this.store.select(allowedLanguagesSelector);\r\n  public darkMode$ = this.store.select(darkModeSelector);\r\n  public countNotifications$ = this.store.select(countNotificationsSelector);\r\n  public userName$ = this.store.select(userNameSelector);\r\n  public userPictureUrl$ = this.store.select(userPictureSelector);\r\n  public logo$ = this.store.select(logoSelector);\r\n  public isCollapsed$ = this.store.select(isCollapsedSelector);\r\n  public isOpen$ = this.store.select(isOpenMenu);\r\n  ngOnInit(): void {\r\n    //this.disableDarkMode();\r\n  }\r\n\r\n  setLanguage(language: string): void {\r\n    this.store.dispatch(setLanguage({ language }));\r\n  }\r\n\r\n  setDarkMode(): void {\r\n    this.setDarkModeState(true);\r\n  }\r\n\r\n  disableDarkMode(): void {\r\n    this.setDarkModeState(false);\r\n  }\r\n\r\n  openMenu(): void {\r\n    this.store.dispatch(openMenu());\r\n  }\r\n\r\n  closeMenu(): void {\r\n    this.store.dispatch(closeMenu());\r\n  }\r\n\r\n  private setDarkModeState(isActive: boolean): void {\r\n    this.store.dispatch(setGlobalLoader({ isLoading: true }));\r\n    this.store.dispatch(setDarkMode({ isActive }));\r\n    setTimeout(() => {\r\n      this.store.dispatch(setGlobalLoader({ isLoading: false }));\r\n    }, 200);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"main-navbar main-navbar_brand\" [class.b1-collapsed]=\"isCollapsed$ | ngrxPush\"\r\n    [class.open]=\"isOpen$ | ngrxPush\">\r\n    <i b1-icon icon=\"menu\" class=\"b1-title2 visible-xs header-icon-left\" (click)=\"openMenu()\"></i>\r\n    <a *ngrxLet=\"logo$ as logo\">\r\n        <img [src]=\"logo\" alt=\"\" class=\"main-navbar__app-logo\">\r\n    </a>\r\n    <i b1-icon icon=\"settings\" class=\"b1-title2 visible-xs header-icon-right\"></i>\r\n    <i b1-icon icon=\"cancel\" class=\"b1-title2 visible-xs header-icon-close\" (click)=\"closeMenu()\"></i>\r\n</div>\r\n<div class=\"main-navbar b1-bg-light\" [class.b1-collapsed]=\"isCollapsed$ | ngrxPush\">\r\n    <ul class=\"main-navbar__list\">\r\n\r\n    </ul>\r\n    <ul class=\"main-navbar__list\">\r\n        <li class=\"main-navbar__list__item\">\r\n            <a href=\"#\" class=\"main-navbar__list__item__link b1-base\">\r\n                Customers\r\n                <span class=\"b1-badge b1-bg-info\">{{countCustomers$ | ngrxPush}}</span>\r\n            </a>\r\n        </li>\r\n        <!-- LANGUAGES -->\r\n        <li ngbDropdown class=\"main-navbar__list__item\" #dropdown=\"ngbDropdown\" display=\"static\"\r\n            *ngrxLet=\"language$ as currentLanguage\">\r\n            <a class=\"main-navbar__list__item__link b1-base\" id=\"languages\"\r\n                (click)=\"$event.stopPropagation(); dropdown.open();\">\r\n                <span>{{ 'shared.languages.' + currentLanguage | translate }}</span>\r\n                <b class=\"caret\"></b></a>\r\n            <ul class=\"b1-dropdown b1-animate fade-in-up\" ngbDropdownMenu aria-labelledby=\"languages\"\r\n                style=\"min-width: 160px;\" *ngrxLet=\"languages$ as languages\">\r\n                <li class=\"b1-dropdown__item\" *ngFor=\"let language of languages\">\r\n                    <a class=\"b1-dropdown__link b1-base\"\r\n                        (click)=\"$event.stopPropagation(); setLanguage(language); dropdown.close();\">\r\n                        {{ 'shared.languages.' + language | translate }}</a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n        <!-- DARK MODE -->\r\n        <li class=\"main-navbar__list__item\">\r\n            <ng-container *ngrxLet=\"darkMode$ as darkMode\">\r\n                <a class=\"main-navbar__list__item__link b1-base\" *ngIf=\"darkMode\" (click)=\"disableDarkMode()\">\r\n                    <i b1-icon icon=\"adjust\"></i>\r\n                </a>\r\n                <a class=\"main-navbar__list__item__link b1-base\" *ngIf=\"!darkMode\" (click)=\"setDarkMode()\">\r\n                    <i b1-icon icon=\"moon\"></i>\r\n                </a>\r\n            </ng-container>\r\n\r\n\r\n        </li>\r\n        <!-- NOTIFICATIONS -->\r\n        <li class=\"main-navbar__list__item\" ngbDropdown #dropdown=\"ngbDropdown\">\r\n            <a class=\"main-navbar__list__item__link b1-base\" style=\"position: relative;\">\r\n                <i b1-icon icon=\"bell\" class=\"d-none d-sm-block\"></i>\r\n                <span class=\"d-block d-sm-none d-print-inline\">{{'header.navbar.NOTIFICATIONS' | translate}}</span>\r\n                <b class=\"caret d-block d-sm-none\"></b>\r\n                <ng-container *ngrxLet=\"countNotifications$ as countNotifications\">\r\n                    <span style=\"position: absolute; right: -4px; top: 2px;\" *ngIf=\"countNotifications !=0\"\r\n                        class=\"b1-badge b1-bg-error\">{{countNotifications}}</span>\r\n                </ng-container>\r\n            </a>\r\n        </li>\r\n        <li class=\"main-navbar__list__item b1-mr-4\" ngbDropdown #profileDropdown=\"ngbDropdown\">\r\n            <a class=\"main-navbar__list__item__link b1-base\" id=\"profile\"\r\n                (click)=\"$event.stopPropagation(); profileDropdown.open();\">\r\n                <ng-container *ngrxLet=\"userName$ as userName\">\r\n                    <span>{{userName || ('components.main.owner' | translate)}}</span>\r\n                </ng-container>\r\n                <b class=\"caret\"></b>\r\n                <span class=\"avatar\" *ngrxLet=\"userPictureUrl$ as userPictureUrl\">\r\n                    <img [src]=\"userPictureUrl\">\r\n                </span>\r\n            </a>\r\n            <ul class=\"b1-dropdown b1-animate fade-in-up\" ngbDropdownMenu aria-labelledby=\"languages\"\r\n                style=\"width: 100%; max-width: 400px;\">\r\n                <li class=\"b1-dropdown__item\">\r\n                    <!-- TODO change ui-sref to angular route -->\r\n                    <a class=\"b1-dropdown__link b1-base\" ui-sref=\"app.profile.settings\">\r\n                        <i b1-icon icon=\"settings\" class=\"b1-mr-4\"></i>\r\n                        <span>{{'header.navbar.Settings' | translate}}</span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"b1-dropdown__item\">\r\n                    <!-- TODO change ui-sref to angular route -->\r\n                    <a class=\"b1-dropdown__link b1-base\" ui-sref=\"app.profile.index\">\r\n                        <i b1-icon icon=\"user\" class=\"b1-mr-4\"></i>\r\n                        <span>{{'header.navbar.Profile' | translate}}</span>\r\n                    </a>\r\n                </li>\r\n                <hr class=\"b1-separator\" />\r\n                <li class=\"b1-dropdown__item\">\r\n                    <a ng-click=\"logOut()\" class=\"b1-dropdown__link b1-dropdown__link_error b1-base\">\r\n                        <i b1-icon icon=\"exit\" class=\"b1-mr-4\"></i>\r\n                        <span>{{'header.navbar.Logout' | translate}}</span>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n</div>","/* (ignored) */","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { SettingsService } from '@services/settings.service';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\nimport * as settingsActions from './../actions/settings.actions';\r\n@Injectable()\r\nexport class SettingsEffects {\r\n\r\n    constructor(private actions$: Actions, private settingsService: SettingsService) { }\r\n\r\n    loadResources$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(settingsActions.loadResources),\r\n            switchMap((action) =>\r\n                this.settingsService.getResources().pipe(\r\n                    map((resources) => settingsActions.setResources({ resources }))\r\n                )\r\n            )\r\n        )\r\n    );\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Resources } from 'src/app/@shared/models/resources.model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SettingsService extends BaseService {\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getResources(): Observable<Resources> {\r\n        return this.http.get<any>('api/v1/public/resources').pipe(map((response) => response.Result ? response.Result : response));\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { RouteConfigLoadEnd, RouteConfigLoadStart, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { globalLoaderSelector } from '@selectors/app.selectors';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'b1-global-loader',\r\n  templateUrl: './b1-global-loader.component.html',\r\n  styleUrls: ['./b1-global-loader.component.scss']\r\n})\r\nexport class B1GlobalLoaderComponent implements OnInit {\r\n\r\n  public loading$ = this.store.select(globalLoaderSelector);\r\n\r\n  constructor(private store: Store) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","<div class=\"screen-loader-wrapper\" [class.loaded]=\"!(loading$ | async)\">\r\n  <div class=\"screen-loader\"></div>\r\n  <div class=\"screen-loader-section\"></div>\r\n</div>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { FilterService } from '@services/filter.service';\r\nimport { AccountModel } from '../models/account.model';\r\nimport { FilterCurrency, FilterCurrencyType } from '../models/filter.model';\r\n\r\n@Pipe({ name: 'accountsFilter' })\r\nexport class AccountFilterPipe implements PipeTransform {\r\n\r\n    constructor(private filterService: FilterService) {\r\n    }\r\n\r\n    transform(accounts?: AccountModel[], filter?: string, filterCurrency?: FilterCurrency): AccountModel[] {\r\n        if (!accounts) {\r\n            return new Array<AccountModel>();\r\n        }\r\n\r\n        if (!filter && (!filterCurrency || !filterCurrency.currencies || filterCurrency.currencies.length === 0)) {\r\n            return accounts;\r\n        }\r\n\r\n        if (!!filterCurrency && !!filterCurrency.currencies && filterCurrency.currencies.length !== 0) {\r\n            accounts = filterCurrency.type === FilterCurrencyType.Include ?\r\n                accounts.filter(p => filterCurrency.currencies.indexOf(p.CurrencyCode) >= 0) :\r\n                accounts.filter(p => filterCurrency.currencies.indexOf(p.CurrencyCode) === -1);\r\n        }\r\n\r\n        if (!!filter) {\r\n            return accounts.filter(account => {\r\n                const filterArray = this.getFilterArray(account);\r\n                if (filterArray.some(p => p.indexOf(filter.toUpperCase()) >= 0)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        return accounts;\r\n    }\r\n\r\n    private getFilterArray(account: AccountModel): string[] {\r\n        const filterArray = new Array<string>();\r\n\r\n        this.filterService.pushValue(filterArray, account.CurrencyCode);\r\n        this.filterService.pushValue(filterArray, account.Name);\r\n        this.filterService.pushValue(filterArray, account.Number);\r\n        this.filterService.pushValue(filterArray, account.BankId);\r\n\r\n        this.filterService.pushDateValue(filterArray, account.LastActive);\r\n        this.filterService.pushDateValue(filterArray, account.OpeningDate);\r\n        this.filterService.pushDateValue(filterArray, account.ClosingDate);\r\n\r\n        this.filterService.pushMoneyValue(filterArray, account.Balance);\r\n        this.filterService.pushMoneyValue(filterArray, account.PlannedBalance);\r\n        this.filterService.pushMoneyValue(filterArray, account.CreditTurns);\r\n        this.filterService.pushMoneyValue(filterArray, account.DebitTurns);\r\n\r\n        return filterArray;\r\n    }\r\n\r\n\r\n}\r\n","import * as authActions from '@actions/auth.actions';\r\nimport * as userActions from '@actions/user.actions';\r\nimport { createReducer, on } from '@ngrx/store';\r\nimport { MenuItem } from 'src/app/@shared/models/menu-item.model';\r\nimport { Notification } from 'src/app/@shared/models/notification.model';\r\nimport { Profile } from 'src/app/@shared/models/profile.model';\r\n\r\nexport const USER_KEY = 'user';\r\n\r\nexport interface UserState {\r\n    profile: Profile | undefined;\r\n    notifications: Notification[];\r\n    currentClientId: string | undefined;\r\n    menu: MenuItem[] | undefined;\r\n    subMenu: MenuItem[] | undefined;\r\n}\r\n\r\nexport const initialState: UserState = {\r\n    profile: undefined,\r\n    notifications: new Array<Notification>(),\r\n    currentClientId: undefined,\r\n    menu: undefined,\r\n    subMenu: undefined\r\n};\r\n\r\n\r\nexport const userReducer = createReducer(\r\n    initialState,\r\n    on(\r\n        authActions.authLoadProfileSuccess,\r\n        userActions.loadProfileSuccess,\r\n        (state, action) => ({ ...state, profile: action.profile })\r\n    ),\r\n    on(\r\n        userActions.setNotifications,\r\n        (state, action) => ({ ...state, notifications: action.notifications })\r\n    ),\r\n    on(\r\n        userActions.setCurrentClientId,\r\n        (state, action) => ({ ...state, currentClientId: action.clientId })\r\n    ),\r\n    on(\r\n        userActions.setMenu,\r\n        (state, action) => ({ ...state, menu: action.menu })\r\n    ),\r\n    on(\r\n        userActions.setSubMenu,\r\n        (state, action) => ({ ...state, subMenu: action.menu })\r\n    )\r\n);\r\n","import * as authActions from '@actions/auth.actions';\r\nimport { LogInModel } from '@modules/auth/models/login.model';\r\nimport { Token } from '@modules/auth/models/token.model';\r\nimport { createReducer, on } from '@ngrx/store';\r\n\r\nexport const AUTH_KEY = 'auth';\r\n\r\nexport interface AuthState {\r\n    isLoading: boolean;\r\n    loginData: LogInModel | undefined;\r\n    phone: string | undefined;\r\n    error: string | undefined;\r\n    isNeedOtp: boolean;\r\n    token: Token | undefined;\r\n}\r\n\r\nexport const initialState: AuthState = {\r\n    isLoading: false,\r\n    loginData: undefined,\r\n    phone: undefined,\r\n    error: undefined,\r\n    isNeedOtp: false,\r\n    token: undefined\r\n};\r\n\r\nexport const authReducer = createReducer(\r\n    initialState,\r\n    on(\r\n        authActions.loginFailure,\r\n        authActions.loginSuccess,\r\n        authActions.tokenFailure,\r\n        authActions.tokenSuccess,\r\n        authActions.authLoadProfileSuccess,\r\n        authActions.authLoadProfileFailure,\r\n        state => ({ ...state, isLoading: false }),\r\n    ),\r\n    on(\r\n        authActions.loginRequest,\r\n        authActions.tokenLoginRequest,\r\n        authActions.tokenOtpRequest,\r\n        authActions.authLoadProfileRequest,\r\n        state => ({ ...state, isLoading: true, error: '' })\r\n    ),\r\n    on(\r\n        authActions.loginFailure,\r\n        authActions.tokenFailure,\r\n        (state, action) => ({ ...state, error: action.message })\r\n    ),\r\n    on(\r\n        authActions.setToken,\r\n        (state, action) => ({ ...state, token: action.token })\r\n    ),\r\n    on(\r\n        authActions.setNeedOtp,\r\n        (state, action) => ({ ...state, isNeedOtp: true, phone: action.phone })\r\n    ),\r\n    on(\r\n        authActions.loginRequest,\r\n        (state, actions) => ({ ...state, loginData: actions.data })\r\n    ),\r\n    on(\r\n        authActions.resetLogin,\r\n        (state) => ({ ...initialState })\r\n    )\r\n);\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { BankModel } from 'src/app/@shared/models/bank.model';\r\n\r\nexport const loadBanks = createAction(\r\n    '[PUBLIC] loadBanks',\r\n);\r\n\r\nexport const loadBanksSuccess = createAction(\r\n    '[PUBLIC] load banks Success',\r\n    props<{ banks: BankModel[] }>()\r\n);\r\n\r\nexport const loadBanksFailure = createAction(\r\n    '[PUBLIC] load banks Failure',\r\n    props<{ error: string }>()\r\n);\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\n// successNotification action\r\nexport const successNotification = createAction(\r\n    '[NOTIFY] success notification',\r\n    props<{ message: string, title?: string }>()\r\n);\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  languages: ['uk', 'ru', 'en'],\n  defaultUserPictureUrl: 'assets/img/a0.jpg',\n  mobileWidth: 812\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ActionCreator, createAction } from '@ngrx/store';\r\nimport { TypedAction } from '@ngrx/store/src/models';\r\n\r\nexport function createHTTPActions<RequestPayload = void, ResponsePayload = void, ErrorPayload = void>(\r\n    actionType: string,\r\n): [\r\n        ActionCreator<string, (props: RequestPayload) => {\r\n            payload: RequestPayload;\r\n        } & TypedAction<string>>,\r\n        ActionCreator<string, (props: ResponsePayload) => {\r\n            payload: ResponsePayload;\r\n        } & TypedAction<string>>,\r\n        ActionCreator<string, (props: ErrorPayload) => {\r\n            payload: ErrorPayload;\r\n        } & TypedAction<string>>,\r\n    ] {\r\n    return [\r\n        createAction(actionType, (payload: RequestPayload) => ({ payload })),\r\n        createAction(\r\n            `${actionType} Success`,\r\n            (payload: ResponsePayload) => ({ payload })),\r\n        createAction(`${actionType} Error`, (payload: ErrorPayload) => ({ payload })),\r\n    ];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as bigInt from 'big-integer';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class IbanService {\r\n\r\n    // Довжина IBAN\r\n    IbanLength = 29;\r\n    // Перевірка контрольного розряду IBAN\r\n    validateChecksum(iban: string): boolean {\r\n        if (!iban) { return false; }\r\n        const asciiShift = 55;\r\n        iban = iban.toUpperCase();\r\n\r\n        if (!iban.match(/^[A-Z0-9]/i)) { return false; }\r\n\r\n        iban = iban.replace(/ /g, '');\r\n        const rearrangedIban = iban.substr(4, iban.length - 4) + iban.substr(0, 4);\r\n\r\n        let checkSumString = '';\r\n        for (let i = 0; i < rearrangedIban.length; i++) {\r\n            const char = rearrangedIban[i];\r\n            if (this.isLetter(char)) {\r\n                checkSumString += rearrangedIban.charCodeAt(i) - asciiShift;\r\n            } else {\r\n                checkSumString += +char;\r\n            }\r\n        }\r\n\r\n        let checksum = +checkSumString.substr(0, 1);\r\n        for (let i = 1; i < checkSumString.length; i++) {\r\n            checksum *= 10;\r\n            checksum += +checkSumString.substr(i, 1);\r\n            checksum %= 97;\r\n        }\r\n        return checksum === 1;\r\n    }\r\n    // Отримати МФО з IBAN\r\n    getMfo(iban: string): string {\r\n        return iban.substr(4, 6);\r\n    }\r\n    // Отримати номер рахунку з IBAN\r\n    getNls(iban: string): string {\r\n        if (iban.length > 14) {\r\n            return this.ltrim(iban.substr(10), '0');\r\n        }\r\n        else {\r\n            return iban;\r\n        }\r\n    }\r\n    // Отримати IBAN по МФО та номеру рахунку\r\n    // якщо padLeft істина то рахунок доповниться нулями з ліва, інакше з права (дефолтне значення істина)\r\n    getIban(mfo: string, nls: string, padLeft = true, countryCode = 'UA'): string {\r\n        if (padLeft) {\r\n            nls = this.padStart(nls, 19, '0');\r\n        }\r\n        else {\r\n            nls = this.padEnd(nls, 19, '0');\r\n        }\r\n\r\n        const ibanWithoutCheckDigit = countryCode + '00' + mfo + nls;\r\n        const asciiShift = 55;\r\n\r\n        let checkSumString = '';\r\n        const rearrangedIban = ibanWithoutCheckDigit.substr(4, ibanWithoutCheckDigit.length - 4) + ibanWithoutCheckDigit.substr(0, 4);\r\n        for (let i = 0; i < rearrangedIban.length; i++) {\r\n            const char = rearrangedIban[i];\r\n            if (this.isLetter(char)) {\r\n                checkSumString += rearrangedIban.charCodeAt(i) - asciiShift;\r\n            } else {\r\n                checkSumString += +char;\r\n            }\r\n        }\r\n        // var mod = bigInt(97);\r\n        // var checkSum = bigInt(checkSumString);\r\n        const checkDigit = (198 - parseInt(bigInt(checkSumString).mod(97).valueOf().toString(), 10)).toString().slice(-2);\r\n        return countryCode + checkDigit + mfo + nls;\r\n    }\r\n    // Перевірка чи являється вказаний рахунок IBAN-ном\r\n    isIban(nls: string): boolean {\r\n        if (!nls) { return false; }\r\n        if (nls.length !== this.IbanLength) { return false; }\r\n        if (!this.isLetter(nls[0]) || !this.isLetter(nls[1])) { return false; }\r\n\r\n        return true;\r\n    }\r\n    // Перевірка всього айбану\r\n    validate(iban: string): boolean {\r\n        if (!this.validateChecksum(iban)) {\r\n            return false;\r\n        }\r\n        if (iban.substr(0, 2).toUpperCase() !== 'UA') {// если айбан проверяем что первые 2 символа UA\r\n            return false;\r\n        }\r\n        for (let i = 2; i < iban.length; i++) {// если айбан проверяем что все последующии символы это цифры\r\n            if (!('0123456789'.indexOf(iban[i]) < 0)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // доповнити строку target з лівої сторони символами padString до довжини targetLength\r\n    private padStart(target: string, targetLength: number, padString: string): string {\r\n        if (!String.prototype.repeat) {\r\n            String.prototype.repeat = function (count: number): string {\r\n                'use strict';\r\n                if (this == null) {\r\n                    throw new TypeError('can\\'t convert ' + this + ' to object');\r\n                }\r\n                const str = '' + this;\r\n                count = +count;\r\n                if (count !== count) {\r\n                    count = 0;\r\n                }\r\n                if (count < 0) {\r\n                    throw new RangeError('repeat count must be non-negative');\r\n                }\r\n                if (count === Infinity) {\r\n                    throw new RangeError('repeat count must be less than infinity');\r\n                }\r\n                count = Math.floor(count);\r\n                if (str.length === 0 || count === 0) {\r\n                    return '';\r\n                }\r\n                // Обеспечение того, что count является 31-битным целым числом, позволяет нам значительно\r\n                // соптимизировать главную часть функции. Впрочем, большинство современных (на август\r\n                // 2014 года) браузеров не обрабатывают строки, длиннее 1 << 28 символов, так что:\r\n                // tslint:disable-next-line: no-bitwise\r\n                if (str.length * count >= 1 << 28) {\r\n                    throw new RangeError('repeat count must not overflow maximum string size');\r\n                }\r\n                let rpt = '';\r\n                for (let i = 0; i < count; i++) {\r\n                    rpt += str;\r\n                }\r\n                return rpt;\r\n            };\r\n        }\r\n        // tslint:disable-next-line: no-bitwise\r\n        targetLength = targetLength >> 0;\r\n        padString = String(padString || ' ');\r\n        if (target.length > targetLength) {\r\n            return String(target);\r\n        } else {\r\n            targetLength = targetLength - target.length;\r\n            if (targetLength > padString.length) {\r\n                padString += padString.repeat(targetLength / padString.length);\r\n            }\r\n            return padString.slice(0, targetLength) + String(target);\r\n        }\r\n    }\r\n\r\n    // доповнити строку target з правої сторони символами padString до довжини targetLength\r\n    private padEnd(target: string, targetLength: number, padString: string): string {\r\n        if (!String.prototype.repeat) {\r\n            String.prototype.repeat = function (count: number): string {\r\n                'use strict';\r\n                if (this == null) {\r\n                    throw new TypeError('can\\'t convert ' + this + ' to object');\r\n                }\r\n                const str = '' + this;\r\n                count = +count;\r\n                if (count !== count) {\r\n                    count = 0;\r\n                }\r\n                if (count < 0) {\r\n                    throw new RangeError('repeat count must be non-negative');\r\n                }\r\n                if (count === Infinity) {\r\n                    throw new RangeError('repeat count must be less than infinity');\r\n                }\r\n                count = Math.floor(count);\r\n                if (str.length === 0 || count === 0) {\r\n                    return '';\r\n                }\r\n                // Обеспечение того, что count является 31-битным целым числом, позволяет нам значительно\r\n                // соптимизировать главную часть функции. Впрочем, большинство современных (на август\r\n                // 2014 года) браузеров не обрабатывают строки, длиннее 1 << 28 символов, так что:\r\n                // tslint:disable-next-line: no-bitwise\r\n                if (str.length * count >= 1 << 28) {\r\n                    throw new RangeError('repeat count must not overflow maximum string size');\r\n                }\r\n                let rpt = '';\r\n                for (let i = 0; i < count; i++) {\r\n                    rpt += str;\r\n                }\r\n                return rpt;\r\n            };\r\n        }\r\n        // tslint:disable-next-line: no-bitwise\r\n        targetLength = targetLength >> 0;\r\n        padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n        if (target.length > targetLength) {\r\n            return String(target);\r\n        } else {\r\n            targetLength = targetLength - target.length;\r\n            if (targetLength > padString.length) {\r\n                padString += padString.repeat(targetLength / padString.length);\r\n            }\r\n            return String(target) + padString.slice(0, targetLength);\r\n        }\r\n    }\r\n\r\n    // функція перевірки чи є str строкою з 1ного символу\r\n    private isLetter(str: string): boolean {\r\n        return str.length === 1 && (str.match(/[a-z]/i)?.length || -1) >= 0;\r\n    }\r\n\r\n    private ltrim(value: string, char: string): string {\r\n        const re = new RegExp('^' + char + '+');\r\n        return value.replace(re, '');\r\n    }\r\n}\r\n","import { createFeatureSelector, createSelector, Store } from '@ngrx/store';\r\nimport { USER_KEY, UserState } from '@reducers/user.reducers';\r\nimport { pipe } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport const featureSelector = createFeatureSelector<UserState>(USER_KEY);\r\n\r\nexport const profileSelector = createSelector(\r\n    featureSelector,\r\n    state => state.profile\r\n);\r\n\r\nexport const countCustomersSelector = createSelector(\r\n    featureSelector,\r\n    state => state.profile?.Customers.length ?? 0\r\n);\r\n\r\nexport const notificationsSelector = createSelector(\r\n    featureSelector,\r\n    state => state.notifications\r\n);\r\n\r\nexport const countNotificationsSelector = createSelector(\r\n    featureSelector,\r\n    state => state.notifications.length\r\n);\r\n\r\nexport const userNameSelector = createSelector(\r\n    featureSelector,\r\n    state => state.profile?.UserDisplayName || state.profile?.UserInternationalName || state.profile?.Email\r\n);\r\n\r\n// TODO fix this shit\r\nexport const userPictureSelector = createSelector(\r\n    featureSelector,\r\n    state => state.profile?.UserPictureUrl ? `http://10.10.10.130/Bars.API.Web.Client/api/v1${state.profile?.UserPictureUrl}` : environment.defaultUserPictureUrl\r\n);\r\n\r\nexport const currentClientIdSelector = createSelector(\r\n    featureSelector,\r\n    state => state.currentClientId\r\n);\r\n\r\nexport const currentClientIdFilteredSelector = (store: Store) => {\r\n    return store.select(currentClientIdSelector).pipe(filter(value => !!value), map(value => value as string));\r\n};\r\n\r\nexport const currentCustomerSelector = createSelector(\r\n    profileSelector,\r\n    currentClientIdSelector,\r\n    (profile, currentClientId) => profile?.Customers?.find(p => p.ClientId === currentClientId)\r\n);\r\n\r\nexport const currentCustomerNameSelector = createSelector(\r\n    currentCustomerSelector,\r\n    (currentCustomer) => currentCustomer?.Name\r\n);\r\n\r\nexport const menuSelector = createSelector(\r\n    featureSelector,\r\n    state => state.menu\r\n);\r\n\r\nexport const subMenuSelector = createSelector(\r\n    featureSelector,\r\n    state => state.subMenu\r\n);\r\n","export class LogInModel {\r\n  public Username: string | undefined;\r\n  public Password: string | undefined;\r\n  public UserData = `${navigator.appName};${(new Date()).getTimezoneOffset() / 60};${navigator.platform};${screen.width};${screen.height};${screen.colorDepth};${screen.pixelDepth}`;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { currentClientIdSelector, currentCustomerSelector, profileSelector } from '@selectors/user.selectors';\r\nimport { NotificationsService } from '@services/notifications.service';\r\nimport { UserService } from '@services/user.service';\r\nimport { of } from 'rxjs';\r\nimport { catchError, delay, map, switchMap, withLatestFrom } from 'rxjs/operators';\r\n\r\nimport * as userActions from './../actions/user.actions';\r\nimport * as authActions from './../actions/auth.actions';\r\nimport { MenuService } from '@services/menu.service';\r\n\r\n// import { EMPTY } from 'rxjs';\r\n// import { map, mergeMap, catchError } from 'rxjs/operators';\r\n\r\n// import all requried services or any dependencies\r\n\r\n@Injectable()\r\nexport class UserEffects {\r\n    constructor(\r\n        private actions$: Actions,\r\n        private store: Store,\r\n        private userService: UserService,\r\n        private notificationsService: NotificationsService,\r\n        private menuService: MenuService) { }\r\n\r\n    checkProfile$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(userActions.checkProfile),\r\n            withLatestFrom(this.store.select(profileSelector)),\r\n            map(([action, profile]) => {\r\n                if (profile !== undefined) {\r\n                    return userActions.profileExist();\r\n                }\r\n                else {\r\n                    return userActions.loadProfileRequest();\r\n                }\r\n            })\r\n        )\r\n    );\r\n\r\n    loadProfileRequest$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(userActions.loadProfileRequest),\r\n            switchMap((action) =>\r\n                this.userService.getProfile().pipe(\r\n                    map((profile) => userActions.loadProfileSuccess({ profile })),\r\n                    catchError((error) => of(userActions.loadProfileFailure({ error: error.error.Message })))\r\n                )\r\n            )\r\n        ));\r\n\r\n    loadNotifications$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(userActions.loadNotifications),\r\n            withLatestFrom(this.store.select(profileSelector)),\r\n            switchMap(([action, profile]) =>\r\n                this.notificationsService.getNotifications(profile?.UserId || '').pipe(\r\n                    map((notifications) => userActions.setNotifications({ notifications }))\r\n                ))\r\n        ));\r\n\r\n    loadProfileSuccess$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(userActions.loadProfileSuccess, authActions.authLoadProfileSuccess),\r\n            withLatestFrom(this.store.select(currentClientIdSelector)),\r\n            map(([action, currentClientId]) => {\r\n                if (currentClientId === undefined) {\r\n                    return userActions.setCurrentClientId({ clientId: action.profile.Customers[0].ClientId });\r\n                }\r\n                else {\r\n                    return userActions.setCurrentClientId({ clientId: currentClientId });\r\n                }\r\n            })\r\n        )\r\n    );\r\n\r\n    buildMenu$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(userActions.setCurrentClientId),\r\n            withLatestFrom(this.store.select(currentCustomerSelector)),\r\n            map(([action, currentCustomer]) => {\r\n                const menu = this.menuService.getMenuForCustomer(currentCustomer!);\r\n                return userActions.setMenu({ menu });\r\n            })\r\n        ));\r\n\r\n    buildSubMenu$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(userActions.setMenu),\r\n            map(() => {\r\n                const menu = this.menuService.getSubMenu();\r\n                return userActions.setSubMenu({ menu });\r\n            })\r\n        ));\r\n}\r\n","\r\nimport { AccountTab } from '@modules/accounts/models/acct-tab.enum';\r\nimport { createAction, props } from '@ngrx/store';\r\nimport { AcctEdit } from '@reducers/acct.reducers';\r\nimport { AccountModel } from 'src/app/@shared/models/account.model';\r\nimport { createHTTPActions } from '../shared';\r\n// loadAccounts action\r\nexport const loadAccounts = createAction('[ACCT] load accounts', props<{ reload: boolean }>());\r\n\r\n\r\n// setAccounts action\r\nexport const setAccounts = createAction('[ACCT] set accounts', props<{ accounts: AccountModel[] }>());\r\n\r\n// setTab action\r\nexport const setTab = createAction('[ACCT] set tab', props<{ tab: AccountTab }>());\r\n\r\nexport const goToDetail = createAction('[ACCT] go to detail', props<{ account: AccountModel }>());\r\n\r\n\r\n// export const loadCurrentAccount = createAction(\r\n//     '[ACCT] load current account',\r\n// );\r\n\r\n// export const loadCurrentAccountSuccess = createAction(\r\n//     '[ACCT] load current account Success',\r\n//     props<{ account: AccountModel }>()\r\n// );\r\n\r\n// export const loadCurrentAccountFailure = createAction(\r\n//     '[ACCT] load current account Failure',\r\n//     props<{ error: string }>()\r\n// );\r\n\r\nexport const [\r\n    loadCurrentAccount,\r\n    loadCurrentAccountSuccess,\r\n    loadCurrentAccountFailure\r\n] = createHTTPActions<void, AccountModel, string>('[ACCT] load current account');\r\n\r\nexport const setCurrentAccount = createAction(\r\n    '[ACCT] set current account',\r\n    props<{ account: AccountModel }>()\r\n);\r\n\r\n// setAccountName action\r\nexport const setAccountName = createAction(\r\n    '[ACCT] set account name',\r\n    props<{ name: string }>()\r\n);\r\n\r\n// setEditFormInitState action\r\nexport const setEditFormInitState = createAction('[ACCT] set edit form init state');\r\n\r\n// sumbitEditForm action\r\nexport const sumbitEditForm = createAction(\r\n    '[ACCT] submit edit form'\r\n);\r\n\r\n// export const updateAccountRequest = createAction(\r\n//     '[ACCT] update account request',\r\n//     props<{ model: AcctEdit }>()\r\n// );\r\n\r\n// export const updateAccountSuccess = createAction(\r\n//     '[ACCT] update account Success',\r\n//     props<{ account: AccountModel }>()\r\n// );\r\n\r\n// export const updateAccountFailure = createAction(\r\n//     '[ACCT] update account Failure',\r\n//     props<{ error: string }>()\r\n// );\r\n\r\n\r\nexport const [\r\n    updateAccountRequest,\r\n    updateAccountSuccess,\r\n    updateAccountFailure\r\n] = createHTTPActions<AcctEdit, AccountModel, string>('[ACCT] update account');\r\n","import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Directive({\n  selector: '[mobileClass]'\n})\nexport class MobileClassDirective implements AfterViewInit {\n\n  @Input() mobileClass!: string;\n\n  constructor(private el: ElementRef) { }\n\n  ngAfterViewInit(): void {\n    if (window.screen.width <= environment.mobileWidth && this.mobileClass) {\n      this.el.nativeElement.className += ` ${this.mobileClass}`;\n    }\n  }\n\n}\n","import { loadNotifications } from '@actions/user.actions';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { UserFacade } from '@core/facades/user.facade';\nimport { Store } from '@ngrx/store';\nimport { isCollapsedSelector, isOpenMenu } from '@selectors/settings.selectors';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-authorized-layout',\n  templateUrl: './authorized-layout.component.html',\n  styleUrls: ['./authorized-layout.component.scss']\n})\nexport class AuthorizedLayoutComponent implements OnInit, OnDestroy {\n\n  private profile$ = this.userFacade.profile$;\n  private profileSubscription$!: Subscription;\n  public isCollapsed$ = this.store.select(isCollapsedSelector);\n  public isOpen$ = this.store.select(isOpenMenu);\n  constructor(private userFacade: UserFacade, private store: Store) { }\n\n  ngOnInit(): void {\n    this.userFacade.loadProfile();\n    this.profileSubscription$ = this.profile$.subscribe((profile) => {\n      if (profile) {\n        this.userFacade.loadNotifications();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.profileSubscription$.unsubscribe();\n  }\n\n}\n","<div class=\"app container app-aside-fixed\" [class.menu-open]=\"isOpen$ | ngrxPush\">\r\n    <app-header></app-header>\r\n    <app-sidebar></app-sidebar>\r\n    <div class=\"app-content fade-in\" [class.b1-collapsed]=\"isCollapsed$ | ngrxPush\">\r\n        <router-outlet></router-outlet>\r\n\r\n\r\n    </div>\r\n</div>","import * as authActions from '@actions/auth.actions';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginOtpModel } from '@modules/auth/models/login-otp.model';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { loginDataSelector } from '@selectors/auth.selectors';\r\nimport { AuthService } from '@services/auth.service';\r\nimport { UserService } from '@services/user.service';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map, switchMap, withLatestFrom } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthEffects {\r\n  constructor(\r\n    private action$: Actions,\r\n    private authService: AuthService,\r\n    private store: Store,\r\n    private userService: UserService) { }\r\n\r\n  loginRequest$ = createEffect(() => this.action$.pipe(\r\n    ofType(authActions.loginRequest),\r\n    switchMap(action => this.authService.logIn(action.data).pipe(\r\n      map(response => authActions.loginSuccess({ response })),\r\n      catchError(error => of(authActions.loginFailure({ message: error.error.Message })))\r\n    ))\r\n  ));\r\n\r\n  tokenOtp$ = createEffect(() => this.action$.pipe(\r\n    ofType(authActions.tokenOtpRequest),\r\n    withLatestFrom(this.store.select(loginDataSelector)),\r\n\r\n    switchMap(([action, model]) => this.authService.loginOtp(new LoginOtpModel(action.code, model)).pipe(\r\n      switchMap(token => [authActions.setToken({ token }), authActions.tokenSuccess({ token })]),\r\n      catchError(error => of(authActions.tokenFailure({ message: error.error.error_description })))\r\n    ))\r\n  ));\r\n\r\n  needOtp$ = createEffect(() => this.action$.pipe(\r\n    ofType(authActions.loginSuccess),\r\n    withLatestFrom(this.store.select(loginDataSelector)),\r\n    map(([action, model]) => action.response.Type === 'Otp' ?\r\n      authActions.setNeedOtp({ phone: action.response.Phone }) :\r\n      authActions.tokenLoginRequest({ data: model })\r\n    )\r\n  ));\r\n\r\n  tokenLogin$ = createEffect(() => this.action$.pipe(\r\n    ofType(authActions.tokenLoginRequest),\r\n    switchMap(action => this.authService.loginWithData(action.data).pipe(\r\n      switchMap(token => [authActions.setToken({ token }), authActions.tokenSuccess({ token })]),\r\n      catchError(error => of(authActions.loginFailure({ message: error.error.error_description })))\r\n    ))\r\n  ));\r\n\r\n  tokenSuccessEffect$ = createEffect(() =>\r\n    this.action$.pipe(\r\n      ofType(authActions.tokenSuccess),\r\n      map(() => authActions.authLoadProfileRequest())\r\n    )\r\n  );\r\n\r\n  loadProfileRequestEffect$ = createEffect(() =>\r\n    this.action$.pipe(\r\n      ofType(authActions.authLoadProfileRequest),\r\n      switchMap(action => this.userService.getProfile().pipe(\r\n        map(profile => authActions.authLoadProfileSuccess({ profile })),\r\n        catchError(error => of(authActions.authLoadProfileFailure({ error: error.error.Message })))\r\n      ))\r\n    )\r\n  );\r\n}\r\n","import { Params } from '@angular/router';\r\nimport { getSelectors, RouterReducerState } from '@ngrx/router-store';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\nexport const selectRouter = createFeatureSelector<RouterReducerState>('router');\r\n\r\nexport const {\r\n    selectCurrentRoute, // select the current route\r\n    selectFragment, // select the current route fragment\r\n    selectQueryParams, // select the current route query params\r\n    selectQueryParam, // factory function to select a query param\r\n    selectRouteParams, // select the current route params\r\n    selectRouteParam, // factory function to select a route param\r\n    selectRouteData, // select the current route data\r\n    selectUrl, // select the current url\r\n} = getSelectors(selectRouter);\r\n\r\nexport const selectRouteNestedParams = createSelector(selectRouter, (router) => {\r\n    let currentRoute = router?.state?.root;\r\n    let params: Params = {};\r\n    while (currentRoute?.firstChild) {\r\n        currentRoute = currentRoute.firstChild;\r\n        params = {\r\n            ...params,\r\n            ...currentRoute.params,\r\n        };\r\n    }\r\n    return params;\r\n});\r\n\r\nexport const selectRouteNestedParam = (param: string) =>\r\n    createSelector(selectRouteNestedParams, (params) => params && params[param]);\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { AcctFilter, ACCT_FILTER_FORM } from '@reducers/acct.reducers';\r\nimport { currentAccountRouteParamsSelector, currentAccountSelector, editFormSelector, formSelector } from '@selectors/acct.selectors';\r\nimport { currentClientIdFilteredSelector, currentClientIdSelector } from '@selectors/user.selectors';\r\nimport { AcctService } from '@services/acct.service';\r\nimport { SettingsService } from '@services/settings.service';\r\nimport { FormGroupState, setValue, SetValueAction } from 'ngrx-forms';\r\nimport { from, of } from 'rxjs';\r\nimport { catchError, delay, filter, map, switchMap, tap, timeout, withLatestFrom } from 'rxjs/operators';\r\nimport { AccountModel } from 'src/app/@shared/models/account.model';\r\nimport * as acctActions from './../actions/acct.actions';\r\nimport * as notifyActions from '../actions/notify.actions';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable()\r\nexport class AcctEffects {\r\n\r\n    constructor(\r\n        private actions$: Actions,\r\n        private accountsService: AcctService,\r\n        private store: Store,\r\n        private translateService: TranslateService) { }\r\n\r\n    loadAccounts$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(acctActions.loadAccounts),\r\n            switchMap(() => currentClientIdFilteredSelector(this.store)),\r\n            switchMap((clientId) =>\r\n                this.accountsService.getAccounts(clientId).pipe(\r\n                    map((accounts) => acctActions.setAccounts({ accounts }))\r\n                ))\r\n        ));\r\n\r\n    setCurrencyFilterOther$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType<SetValueAction<boolean>>(SetValueAction.TYPE),\r\n            filter((formControl: SetValueAction<boolean>) => formControl.controlId.startsWith(ACCT_FILTER_FORM)),\r\n            withLatestFrom(this.store.select(formSelector)),\r\n            filter(([formControl, form]: [SetValueAction<boolean>, FormGroupState<AcctFilter>]) =>\r\n                formControl.controlId === form.controls.currency.controls.OTHER.id && formControl.value === true),\r\n            switchMap(([, form]) => {\r\n                return [\r\n                    new SetValueAction(form.controls.currency.controls.EUR.id, false),\r\n                    new SetValueAction(form.controls.currency.controls.USD.id, false),\r\n                    new SetValueAction(form.controls.currency.controls.UAH.id, false)\r\n                ];\r\n            })\r\n        ));\r\n\r\n    setCurrencyFilter$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType<SetValueAction<boolean>>(SetValueAction.TYPE),\r\n            filter((formControl: SetValueAction<boolean>) => formControl.controlId.startsWith(ACCT_FILTER_FORM)),\r\n            withLatestFrom(this.store.select(formSelector)),\r\n            filter(([formControl, form]: [SetValueAction<boolean>, FormGroupState<AcctFilter>]) =>\r\n                [\r\n                    form.controls.currency.controls.EUR.id,\r\n                    form.controls.currency.controls.USD.id,\r\n                    form.controls.currency.controls.UAH.id\r\n                ].indexOf(formControl.controlId) >= 0 && formControl.value === true),\r\n            switchMap(([, form]) => {\r\n                return [\r\n                    new SetValueAction(form.controls.currency.controls.OTHER.id, false),\r\n                ];\r\n            })\r\n        ));\r\n\r\n    setAccountName$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(acctActions.setAccountName),\r\n            withLatestFrom(this.store.select(editFormSelector)),\r\n            map(([action, formControl]) => new SetValueAction(formControl.controls.name.id, action.name))\r\n        ));\r\n\r\n    loadCurrentAccount$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(acctActions.loadCurrentAccount),\r\n            // delay(9000),\r\n            switchMap(() => currentClientIdFilteredSelector(this.store)),\r\n            withLatestFrom(\r\n                this.store.select(currentAccountSelector),\r\n                this.store.select(currentAccountRouteParamsSelector)\r\n            ),\r\n            switchMap(([clientId, account, routeParams]) => {\r\n                if (account) {\r\n                    return of(acctActions.loadCurrentAccountSuccess(account));\r\n                }\r\n                else {\r\n                    return this.accountsService.getAccount(routeParams.bankId, routeParams.accountId, clientId).pipe(\r\n                        map(currentAccount => acctActions.loadCurrentAccountSuccess(currentAccount)),\r\n                        catchError(error => of(acctActions.loadCurrentAccountFailure(error.error.Message)))\r\n                    );\r\n                }\r\n            })\r\n        ));\r\n\r\n    loadCurrentAccountSuccess$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(...[\r\n                acctActions.loadCurrentAccountSuccess,\r\n                acctActions.updateAccountSuccess\r\n            ]),\r\n            map((action) => acctActions.setCurrentAccount({ account: action.payload }))\r\n        )\r\n    );\r\n\r\n    submitEditForm$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(acctActions.sumbitEditForm),\r\n            withLatestFrom(this.store.select(editFormSelector)),\r\n            map(([, form]) => acctActions.updateAccountRequest(form.value))\r\n        ));\r\n\r\n    updateAccountRequest$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(acctActions.updateAccountRequest),\r\n            switchMap((action) => currentClientIdFilteredSelector(this.store).pipe(map((clientId) => ({ clientId, action })))),\r\n            withLatestFrom(this.store.select(currentAccountRouteParamsSelector)),\r\n            switchMap(([payload, routeParams]) =>\r\n                this.accountsService.updateAccount(\r\n                    routeParams.bankId,\r\n                    routeParams.accountId,\r\n                    payload.clientId,\r\n                    payload.action.payload).pipe(\r\n                        withLatestFrom(this.store.select(currentAccountSelector)),\r\n                        filter(([, account]) => account !== undefined),\r\n                        map(([, account]) => account as AccountModel),\r\n                        map((account) => acctActions.updateAccountSuccess({ ...account, Name: payload.action.payload.name })),\r\n                        catchError((error) => of(acctActions.updateAccountFailure(error.error.Message)))\r\n                    )\r\n            ))\r\n    );\r\n\r\n    updateAccountSuccess$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(acctActions.updateAccountSuccess),\r\n            map(() => notifyActions.successNotification({ message: this.translateService.instant('componets.acct.updateAccountSuccess') }))\r\n        ));\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as math from 'mathjs';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FilterService {\r\n\r\n    constructor(public datepipe: DatePipe) {\r\n\r\n    }\r\n    getMoneyString(money: number): string {\r\n        return math.divide(money, 100).toString();\r\n    }\r\n\r\n    pushValue(values: string[], value: any): void {\r\n        if (!!value) {\r\n            values.push(value.toString().toUpperCase());\r\n        }\r\n    }\r\n\r\n    pushDateValue(values: string[], value?: Date): void {\r\n        if (!!value) {\r\n            values.push((this.datepipe.transform(value as Date, 'dd.MM.yyyy') as string).toString().toUpperCase());\r\n        }\r\n    }\r\n\r\n    pushMoneyValue(values: string[], value?: number): void {\r\n        if (!!value) {\r\n            values.push(this.getMoneyString(value).toUpperCase());\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { PublicService } from '@services/public.service';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map, switchMap } from 'rxjs/operators';\r\nimport * as publicActions from '../actions/public.actions';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PublicEffects {\r\n    constructor(private actions$: Actions, private publicService: PublicService) { }\r\n\r\n    loadBanks$ = this.actions$.pipe(\r\n        ofType(publicActions.loadBanks),\r\n        switchMap(() =>\r\n            this.publicService.getBanks().pipe(\r\n                map(\r\n                    banks => publicActions.loadBanksSuccess({ banks })\r\n                ),\r\n                catchError(\r\n                    error => of(publicActions.loadBanksFailure({ error: error.error.Message }))\r\n                )\r\n            )\r\n        )\r\n    );\r\n\r\n}\r\n","import { logout, setToken } from '@actions/auth.actions';\r\nimport { HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { tokenSelector } from '@selectors/auth.selectors';\r\nimport { AuthService } from '@services/auth.service';\r\nimport { EMPTY, Observable, Subject, throwError } from 'rxjs';\r\nimport { catchError, map, switchMap, tap } from 'rxjs/operators';\r\n\r\nimport { Token } from './../../modules/auth/models/token.model';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  endpoint = 'https://bobusiness.unity-bars.com/Bars.API.Web.Client/';\r\n  token: Token | undefined = undefined;\r\n\r\n  constructor(private translate: TranslateService, private store: Store, private authService: AuthService) {\r\n    store.select(tokenSelector).subscribe(token => {\r\n      this.token = token;\r\n    });\r\n  }\r\n\r\n  refreshTokenInProgress = false;\r\n\r\n  tokenRefreshedSource = new Subject();\r\n  tokenRefreshed$ = this.tokenRefreshedSource.asObservable();\r\n\r\n  refreshToken(): any {\r\n    if (this.refreshTokenInProgress) {\r\n      return new Observable(observer => {\r\n        this.tokenRefreshed$.subscribe(() => {\r\n          observer.next();\r\n          observer.complete();\r\n        });\r\n      });\r\n    } else {\r\n      this.refreshTokenInProgress = true;\r\n\r\n      return this.authService.refreshToken(this.token?.refresh_token, this.token?.sessionId).pipe(\r\n        tap((token) => {\r\n          this.store.dispatch(setToken({ token }));\r\n          this.refreshTokenInProgress = false;\r\n          this.tokenRefreshedSource.next();\r\n        }),\r\n        catchError(() => {\r\n          this.refreshTokenInProgress = false;\r\n          this.logout();\r\n          return EMPTY;\r\n        }));\r\n    }\r\n  }\r\n\r\n  handleResponseError(error: any, request: HttpRequest<any>, next: HttpHandler): any {\r\n\r\n    // Invalid token error\r\n    if (error.status === 401) {\r\n      return this.refreshToken().pipe(\r\n        switchMap(() => {\r\n          request = this.formatRequest(request);\r\n          return next.handle(request);\r\n        }),\r\n        catchError(e => {\r\n          if (e.status !== 401) {\r\n            return this.handleResponseError(e, request, next);\r\n          } else {\r\n            this.logout();\r\n            return EMPTY;\r\n          }\r\n        }));\r\n    }\r\n\r\n    // Access denied error\r\n    else if (error.status === 403) {\r\n      // Show message\r\n      // Logout\r\n      this.logout();\r\n    }\r\n\r\n    // Server error\r\n    else if (error.status === 500) {\r\n      // Show message\r\n    }\r\n\r\n    // Maintenance error\r\n    else if (error.status === 503) {\r\n      // Show message\r\n      // Redirect to the maintenance page\r\n    }\r\n\r\n    return throwError(error);\r\n  }\r\n\r\n  logout(): any {\r\n    this.store.dispatch(logout());\r\n  }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): any {\r\n    const requestFormated = this.formatRequest(req);\r\n    return next.handle(requestFormated)\r\n      .pipe(\r\n        map((data: any) => {\r\n          return data;\r\n        }),\r\n        catchError(error => this.handleResponseError(error, req, next))\r\n      );\r\n  }\r\n\r\n  formatRequest(request: HttpRequest<any>): HttpRequest<any> {\r\n    const language = this.translate.currentLang === 'uk' ? 'uk-UA' : this.translate.currentLang === 'ru' ? 'ru-RU' : 'en-US';\r\n    const prefix = request.url.indexOf('?') > 0 ? '&_=' : '?_=';\r\n    console.log(this.translate.currentLang);\r\n    if (!request.url.includes('token')) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          'Use-Response-Wrapper': request.url.includes('token') ? 'true' : 'false'\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    if (this.isStaticFileRequest(request.url)) {\r\n      request = request.clone({\r\n        url: request.url + prefix + this.customDate(new Date(), '.')\r\n      });\r\n\r\n      return request;\r\n\r\n    }\r\n    request = request.clone({\r\n      url: this.endpoint + request.url,\r\n      setHeaders: {\r\n        'Accept-Language': language\r\n      },\r\n\r\n    });\r\n\r\n    if (this.token && !request.url.includes('token')) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: 'Bearer ' + this.token.access_token\r\n        }\r\n      });\r\n    }\r\n\r\n    return request;\r\n  }\r\n\r\n  isStaticFileRequest(url: string): boolean {\r\n    return url.indexOf('i18n') >= 0 || url.indexOf('.svg') >= 0;\r\n  }\r\n\r\n  customDate(date: Date, separator: string): string {\r\n    const mm = date.getMonth() + 1; // getMonth() is zero-based\r\n    const dd = date.getDate();\r\n    return [(dd > 9 ? '' : '0') + dd,\r\n    (mm > 9 ? '' : '0') + mm,\r\n    date.getFullYear(),\r\n    ].join(separator);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Inject, Input, Self } from '@angular/core';\nimport { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Directive({\n  selector: '[more-auto-direction]'\n})\nexport class MoreAutoDirectionDirective {\n\n  @Input() parentSelector = '.b1-page-data';\n  openSubscription?: Subscription;\n\n  constructor(@Self() @Inject(NgbDropdown) private readonly dropdown: NgbDropdown, private el: ElementRef) {\n    if (this.el.nativeElement.getAttribute('mobile-more') && window.screen.width <= environment.mobileWidth) {\n      return;\n    }\n    const parentNode = document.querySelector(this.parentSelector);\n    if (!parentNode) { return; }\n\n    this.openSubscription = dropdown.openChange.pipe(filter(p => p === true)).subscribe(() => {\n      setTimeout(() => {\n        const elementTop = this.el.nativeElement.getBoundingClientRect().top;\n        const parentTop = parentNode.getBoundingClientRect().top;\n        const elementHeight = this.el.nativeElement.clientHeight;\n        if (elementTop - parentTop - elementHeight < 0) {\n          this.el.nativeElement.classList.add('b1-dropdown_down');\n          this.el.nativeElement.classList.remove('b1-dropdown_up');\n        }\n        else {\n          this.el.nativeElement.classList.add('b1-dropdown_up');\n          this.el.nativeElement.classList.remove('b1-dropdown_down');\n        }\n      });\n\n    });\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable, of, scheduled } from 'rxjs';\n\n@Component({\n  selector: 'b1-card-loader',\n  templateUrl: './b1-card-loader.component.html',\n  styleUrls: ['./b1-card-loader.component.scss']\n})\nexport class B1CardLoaderComponent implements OnInit {\n\n  @Input() isLoading: Observable<boolean> = of();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"b1-page-hr\" [class.loading]=\"isLoading | ngrxPush\">\n\n</div>","import { toggleCollapsed } from '@actions/settings.actions';\r\nimport { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { bankDateSelector } from '@selectors/app.selectors';\r\nimport { callCenterPhonesLocalSelector, callCenterPhonesSelector, callCenterWorkSelector, ecpSupportPhonesSelector, isCollapsedSelector, isOpenMenu } from '@selectors/settings.selectors';\r\nimport { currentCustomerNameSelector, menuSelector, subMenuSelector } from '@selectors/user.selectors';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  public menu$ = this.store.select(menuSelector);\r\n  public subMenu$ = this.store.select(subMenuSelector);\r\n  public customerName$ = this.store.select(currentCustomerNameSelector);\r\n  public bankDate$ = this.store.select(bankDateSelector);\r\n  public callCenterPhones$ = this.store.select(callCenterPhonesSelector);\r\n  public callCenterPhonesLocal$ = this.store.select(callCenterPhonesLocalSelector);\r\n  public callCenterWork$ = this.store.select(callCenterWorkSelector);\r\n  public ecpSupportPhone$ = this.store.select(ecpSupportPhonesSelector);\r\n  public isCollapsed$ = this.store.select(isCollapsedSelector);\r\n  public isOpen$ = this.store.select(isOpenMenu);\r\n  constructor(private store: Store, private el: ElementRef) {\r\n    setTimeout(() => {\r\n      console.log(el.nativeElement.children[0].children[0].offsetWidth - el.nativeElement.children[0].children[0].clientWidth)\r\n    }, 3000)\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  collapseToggle(): void {\r\n    this.store.dispatch(toggleCollapsed());\r\n  }\r\n\r\n}\r\n","<ng-container *ngrxLet=\"isOpen$ as isOpen\">\r\n    <div class=\"app-aside\" *ngrxLet=\"isCollapsed$ as isCollapsed\">\r\n\r\n        <div class=\"main-sidemenu\" [class.b1-collapsed]=\"isCollapsed\" [class.open]=\"isOpen\">\r\n            <div class=\"main-sidemenu__wrapper\">\r\n                <div id=\"aside-user\">\r\n                    <div class=\"main-sidemenu__head\">\r\n                        <div class=\"client\">\r\n                            <button class=\"client__button\">\r\n                                {{customerName$ | ngrxPush}}\r\n                            </button>\r\n                        </div>\r\n                        <p class=\"bdate b1-small\">\r\n                            <span>{{'aside.nav.bankDate' | translate}}</span>:\r\n                            <ng-container *ngrxLet=\"bankDate$ as bankDate\">\r\n                                <span class=\"b1-bold\" *ngIf=\"bankDate\">\r\n                                    {{bankDate | date:'dd.MM.yyyy'}}\r\n                                </span>\r\n                            </ng-container>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <nav *ngrxLet=\"menu$ as menu\">\r\n                    <div>\r\n                        <ul class=\"main-sidemenu__nav\">\r\n                            <li *ngFor=\"let menuItem of menu\" class=\"main-sidemenu__nav__item\"\r\n                                [ngbTooltip]=\"menuItem.dataTranslate | translate\" placement=\"right\" container=\"body\"\r\n                                tooltipClass=\"{{isCollapsed ?'':'menu-tooltip'}}\" [routerLink]=\"menuItem.route\"\r\n                                routerLinkActive=\"active\">\r\n                                <a class=\"main-sidemenu__nav__item__link\">\r\n                                    <span class=\"main-sidemenu__nav__item__link__icon\">\r\n                                        <i b1-icon [icon]=\"menuItem.icon\"></i>\r\n                                    </span>\r\n                                    <span class=\"main-sidemenu__nav__item__link__text\">\r\n                                        {{menuItem.dataTranslate | translate}}\r\n                                    </span>\r\n                                </a>\r\n                            </li>\r\n                            <hr class=\"b1-separator\" />\r\n                            <ng-container *ngrxLet=\"subMenu$ as subMenu\">\r\n                                <li *ngFor=\"let menuItem of subMenu\" class=\"main-sidemenu__nav__item\">\r\n                                    <a class=\"main-sidemenu__nav__item__link\">\r\n                                        <span class=\"main-sidemenu__nav__item__link__icon\">\r\n                                            <i b1-icon [icon]=\"menuItem.icon\"></i>\r\n                                        </span>\r\n                                        <span class=\"main-sidemenu__nav__item__link__text\">\r\n                                            {{menuItem.dataTranslate| translate}}\r\n                                        </span>\r\n                                    </a>\r\n                                </li>\r\n                            </ng-container>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <div class=\"main-sidemenu__contact\">\r\n                    <ng-container *ngrxLet=\"callCenterPhones$ as callCenterPhones\">\r\n                        <div *ngIf=\"callCenterPhones && callCenterPhones.length\">\r\n                            <p>\r\n                                <i b1-icon icon=\"phone\" class=\"b1-color-primary\"></i>\r\n                                <span style=\"margin-left: 4px;\" class=\"b1-color-primary b1-base b1-bold\"\r\n                                    data-translate=\"aside.nav.CallCenterPhone\">Контакт-центр</span>\r\n                            </p>\r\n                            <p *ngFor=\"let phone of callCenterPhones\">\r\n                                <span class=\"b1-medium\">{{phone}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class=\"b1-micro b1-opacity-60\">\r\n                                    {{'aside.nav.FreeTarif' | translate}}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngrxLet=\"callCenterPhonesLocal$ as callCenterPhonesLocal\">\r\n                        <div *ngIf=\"callCenterPhonesLocal && callCenterPhonesLocal.length\">\r\n                            <p *ngFor=\"let phone of callCenterPhonesLocal\">\r\n                                <span class=\"b1-medium\">{{phone}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class=\"b1-micro b1-opacity-60\">\r\n                                    {{'aside.nav.OperatorTarif' | translate}}\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngrxLet=\"callCenterWork$ as callCenterWork\">\r\n                        <div *ngIf=\"callCenterWork\">\r\n                            <span class=\"b1-micro b1-opacity-60\">\r\n                                {{'shared.workDates' | translate}}\r\n                            </span>\r\n                            <span class=\"b1-micro b1-opacity-60\">\r\n                                {{callCenterWork.from}} - {{callCenterWork.to}}\r\n                            </span>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngrxLet=\"ecpSupportPhone$ as ecpSupportPhone\">\r\n                        <div *ngIf=\"ecpSupportPhone && ecpSupportPhone.length\">\r\n                            <p class=\"b1-flex b1-align-center\">\r\n                                <i b1-icon icon=\"cog\" class=\"b1-color-warning\"></i>\r\n                                <span class=\"b1-color-warning b1-base b1-ml-2\"\r\n                                    data-translate=\"aside.nav.ECPTechSupport\">технічна підтримка ЕЦП</span>\r\n                            </p>\r\n                            <p *ngFor=\"let phone of ecpSupportPhone\">\r\n                                <span class=\"b1-medium\">{{phone}}</span>\r\n                            </p>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"main-sidemenu__collapse\">\r\n                <a class=\"main-sidemenu__collapse-button\" (click)=\"collapseToggle()\"\r\n                    ga-track-event=\"['left-menu','collapse']\">\r\n                    <span class=\"b1-mr-2\" *ngIf=\"!isCollapsed\">{{'aside.nav.collapse' | translate}}</span>\r\n                    <i b1-icon icon=\"arrows\"></i>\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</ng-container>","import { createAction, props } from '@ngrx/store';\r\nimport { Resources } from 'src/app/@shared/models/resources.model';\r\n\r\nexport const setLanguage = createAction(\r\n  '[SETTINGS] set language',\r\n  props<{ language: string }>()\r\n);\r\n\r\n// SETTINGS set resources\r\nexport const setResources = createAction('[SETTINGS] set resources', props<{ resources: Resources }>());\r\n\r\n// SETTINGS load resources\r\nexport const loadResources = createAction('[SETTINGS] load resources');\r\n\r\n// SETTINGS set dark mode\r\nexport const setDarkMode = createAction(\r\n  '[SETTINGS] set dark mode',\r\n  props<{ isActive: boolean }>()\r\n);\r\n\r\nexport const toggleCollapsed = createAction(\r\n  '[SETTINGS] toggle collapsed menu'\r\n);\r\n\r\nexport const openMenu = createAction(\r\n  '[SETTINGS] open menu'\r\n);\r\n\r\nexport const closeMenu = createAction(\r\n  '[SETTINGS] close menu'\r\n);\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { IndividualConfig, ToastrService } from 'ngx-toastr';\r\nimport { tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n// import { EMPTY } from 'rxjs';\r\n// import { map, mergeMap, catchError } from 'rxjs/operators';\r\n\r\nimport * as notifyActions from '../actions/notify.actions';\r\n\r\n\r\n@Injectable()\r\nexport class NotifyEffects {\r\n    constructor(private actions$: Actions, private toastrService: ToastrService) { }\r\n    config: Partial<IndividualConfig> = {\r\n        positionClass: 'toast-top-right'\r\n    };\r\n    mobileConfig: Partial<IndividualConfig> = {\r\n        positionClass: 'toast-bottom-center'\r\n    };\r\n    showSuccess$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(notifyActions.successNotification),\r\n            tap((action) => this.toastrService.success(action.message, action.title, this.getConfig()))\r\n        ),\r\n        { dispatch: false }\r\n    );\r\n\r\n    getConfig(): Partial<IndividualConfig> {\r\n        if (window.screen.width <= environment.mobileWidth) {\r\n            return this.mobileConfig;\r\n        }\r\n        return this.config;\r\n    }\r\n}\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport { BankModel } from 'src/app/@shared/models/bank.model';\r\nimport * as publicActions from '../actions/public.actions';\r\n\r\nexport const PUBLIC_KEY = 'PUBLIC';\r\n\r\nexport interface PublicState {\r\n    banks: BankModel[];\r\n}\r\n\r\nexport const initialState: PublicState = {\r\n    banks: []\r\n};\r\n\r\nexport const publicReducer = createReducer(\r\n    initialState,\r\n    on(\r\n        publicActions.loadBanksSuccess,\r\n        (state, action) => ({ ...state, banks: action.banks })\r\n    )\r\n);\r\n","\r\nimport {\r\n    goToDetail,\r\n    loadAccounts,\r\n    loadCurrentAccount,\r\n    loadCurrentAccountFailure,\r\n    loadCurrentAccountSuccess,\r\n    setAccounts,\r\n    setCurrentAccount,\r\n    setEditFormInitState,\r\n    setTab\r\n} from '@actions/acct.actions';\r\nimport { AccountTab } from '@modules/accounts/models/acct-tab.enum';\r\nimport { combineReducers, createReducer, on } from '@ngrx/store';\r\nimport {\r\n    createFormGroupState,\r\n    createFormStateReducerWithUpdate,\r\n    FormGroupState, onNgrxForms,\r\n    updateGroup,\r\n    validate,\r\n    wrapReducerWithFormStateUpdate\r\n} from 'ngrx-forms';\r\nimport { required, greaterThanOrEqualTo, lessThan, maxLength } from 'ngrx-forms/validation';\r\nimport { AccountModel } from 'src/app/@shared/models/account.model';\r\nimport { Filter } from 'src/app/@shared/models/filter.model';\r\n\r\nexport const ACCT_KEY = 'acct';\r\n\r\nexport interface AcctState {\r\n    accounts: AccountModel[] | undefined;\r\n    currentTab: AccountTab;\r\n    filterForm: FormGroupState<AcctFilter>;\r\n    loadings: Array<string>;\r\n    currentAccount?: AccountModel;\r\n    editForm: FormGroupState<AcctEdit>;\r\n}\r\n\r\nexport interface CurrencyFilter {\r\n    UAH: boolean;\r\n    USD: boolean;\r\n    EUR: boolean;\r\n    OTHER: boolean;\r\n    [key: string]: boolean;\r\n}\r\nexport interface AcctFilter extends Filter {\r\n    currency: CurrencyFilter;\r\n}\r\nexport interface AcctEdit {\r\n    name: string;\r\n}\r\nexport const ACCT_FILTER_FORM = 'ACCT_FILTER_FORM';\r\nexport const ACCT_EDIT_FORM = 'ACCT_EDIT_FORM';\r\n\r\nconst initialFormState = createFormGroupState<AcctFilter>(ACCT_FILTER_FORM, {\r\n    filter: undefined,\r\n    currency: {\r\n        UAH: false,\r\n        USD: false,\r\n        EUR: false,\r\n        OTHER: false\r\n    }\r\n});\r\n\r\nconst initialEditFormState = createFormGroupState<AcctEdit>(ACCT_EDIT_FORM, {\r\n    name: ''\r\n});\r\n\r\nexport const initialState: AcctState = {\r\n    accounts: undefined,\r\n    currentTab: AccountTab.Active,\r\n    filterForm: initialFormState,\r\n    loadings: [],\r\n    currentAccount: undefined,\r\n    editForm: initialEditFormState\r\n};\r\n\r\nexport const validateAndUpdateEditForm = updateGroup<AcctEdit>({\r\n    name: validate(required, maxLength(70))\r\n});\r\n\r\n\r\nexport const acctReducers = wrapReducerWithFormStateUpdate(\r\n    createReducer(\r\n        initialState,\r\n        onNgrxForms(),\r\n\r\n        on(\r\n            setAccounts,\r\n            (state, action) => ({ ...state, accounts: action.accounts })\r\n        ),\r\n        on(\r\n            setTab,\r\n            (state, action) => ({ ...state, currentTab: action.tab })\r\n        ),\r\n        on(\r\n            loadAccounts,\r\n            (state) => ({ ...state, loadings: [...state.loadings, 'list'] })\r\n        ),\r\n        on(\r\n            setAccounts,\r\n            (state) => ({ ...state, loadings: state.loadings.filter(p => p !== 'list') })\r\n        ),\r\n        on(\r\n            goToDetail,\r\n            setCurrentAccount,\r\n            (state, action) => ({ ...state, currentAccount: action.account })\r\n        ),\r\n        on(\r\n            loadCurrentAccount,\r\n            (state) => ({ ...state, loadings: [...state.loadings, 'account'] })\r\n        ),\r\n        on(\r\n            loadCurrentAccountSuccess,\r\n            loadCurrentAccountFailure,\r\n            (state) => ({ ...state, loadings: state.loadings.filter(p => p !== 'account') })\r\n        ),\r\n        on(\r\n            setEditFormInitState,\r\n            (state) => ({ ...state, editForm: initialEditFormState })\r\n        )\r\n\r\n    ),\r\n    s => s.editForm,\r\n    validateAndUpdateEditForm\r\n);\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'money' })\r\nexport class MoneyPipe implements PipeTransform {\r\n    transform(amount?: number, currencyCode?: string): string {\r\n        const money = amount || 0;\r\n        let c = 2; // rounding of the fractional part to 100 (0,00)\r\n        const d = ',';\r\n        const t = ' ';\r\n        let n = money;\r\n        c = isNaN((c = Math.abs(c))) ? 2 : c;\r\n        const s = n < 0 ? '-' : '';\r\n        n = parseFloat(Math.abs(n || 0).toFixed(c));\r\n        const i: any = String(parseInt(n.toString()));\r\n        let j;\r\n        j = (j = i.length) > 3 ? j % 3 : 0;\r\n        return (\r\n            s +\r\n            (j ? i.substr(0, j) + t : '') +\r\n            i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\r\n            (c\r\n                ? d +\r\n                Math.abs(n - i)\r\n                    .toFixed(c)\r\n                    .slice(2)\r\n                : '') +\r\n            this.getCurrencySymbol(currencyCode));\r\n    }\r\n\r\n    getCurrencySymbol(code: string | undefined): string {\r\n        if (!!code) {\r\n            switch (code.toUpperCase()) {\r\n                case 'EUR': // Euro\r\n                    return '€';\r\n\r\n                case 'USD': // Dólar americano\r\n                case 'MXN': // Peso mejicano\r\n                case 'CAD': // Dólar de Canadá\r\n                case 'AUD': // Dólar australiano\r\n                case 'NZD': // Dólar neozelandés\r\n                case 'HKD': // Dólar de Hong Kong\r\n                case 'SGD': // Dólar de Singapur\r\n                case 'ARS': // Peso argentino\r\n                    return '$';\r\n\r\n                case 'CNY': // Yuan chino\r\n                case 'JPY': // Yen japonés\r\n                    return '¥';\r\n\r\n                case 'GBP': // Libra esterlina\r\n                case 'GIP': // Libras de Gibraltar\r\n                    return '£';\r\n\r\n                case 'BRL': // Real brasileño\r\n                    return 'R$';\r\n\r\n                case 'INR': // Rupia india\r\n                    return 'Rp';\r\n\r\n                case 'CHF': // Franco suizo\r\n                    return 'Fr';\r\n\r\n                case 'SEK': // Corona sueca\r\n                case 'NOK': // Corona noruega\r\n                    return 'kr';\r\n\r\n                case 'KPW': // Won de Corea del Norte\r\n                case 'KRW': // Won de Corea del Sur\r\n                    return '₩';\r\n                case 'UAH': // uk\r\n                    return '₴';\r\n                case 'RUB':\r\n                    return '₽';\r\n                default:\r\n                    return code;\r\n            }\r\n        } else { return ''; }\r\n\r\n    }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, Input, OnDestroy } from '@angular/core';\r\n\r\n\r\n@Directive({\r\n    selector: '[b1-icon]'\r\n})\r\nexport class B1IconDirective implements AfterViewInit {\r\n\r\n    @Input()\r\n    icon!: string;\r\n\r\n\r\n    constructor(private elementRef: ElementRef) {\r\n\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        if (!this.elementRef.nativeElement.classList.contains('b1-icons')) {\r\n            this.elementRef.nativeElement.classList.add('b1-icons');\r\n        }\r\n        if (!this.elementRef.nativeElement.classList.contains(`b1-icons-icon-${this.icon}`)) {\r\n            this.elementRef.nativeElement.classList.add(`b1-icons-icon-${this.icon}`);\r\n        }\r\n    }\r\n}\r\n","import { setGlobalLoader } from '@actions/app.actions';\r\nimport { loadResources } from '@actions/settings.actions';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { RouteConfigLoadEnd, RouteConfigLoadStart, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { currentLanguageSelector, darkModeSelector, isOpenMenu } from '@selectors/settings.selectors';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'BOneBussinesAngular';\r\n\r\n  language$ = this.store.select(currentLanguageSelector);\r\n  darkMode$ = this.store.select(darkModeSelector);\r\n  isOpenMenu$ = this.store.select(isOpenMenu);\r\n  private lngSubscription$!: Subscription;\r\n  private darkModeSubscription$!: Subscription;\r\n  private routeEventSubscription$!: Subscription;\r\n  private openMenuSubscription$!: Subscription;\r\n\r\n  constructor(private translate: TranslateService, private store: Store, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.globalLoaderStarter();\r\n    this.lngSubscription$ = this.language$.subscribe(language => {\r\n      this.translate.use(language);\r\n    });\r\n    this.darkModeSubscription$ = this.darkMode$.subscribe(darkMode => {\r\n      console.log('dark mode');\r\n      if (darkMode) {\r\n        document.body.classList.add('dark-mode');\r\n      }\r\n      else {\r\n        document.body.classList.remove('dark-mode');\r\n      }\r\n\r\n    });\r\n    this.openMenuSubscription$ = this.isOpenMenu$.subscribe(isOpen => {\r\n      if (isOpen) {\r\n        document.body.scrollTop = 0;\r\n        document.documentElement.scrollTop = 0;\r\n        document.body.classList.add('menu-open');\r\n      }\r\n      else {\r\n        document.body.classList.remove('menu-open');\r\n      }\r\n    });\r\n    this.store.dispatch(loadResources());\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.lngSubscription$.unsubscribe();\r\n    this.darkModeSubscription$.unsubscribe();\r\n    this.routeEventSubscription$.unsubscribe();\r\n  }\r\n\r\n  globalLoaderStarter(): void {\r\n    this.routeEventSubscription$ = this.router.events.subscribe(event => {\r\n      if (event instanceof RouteConfigLoadStart) {\r\n        this.store.dispatch(setGlobalLoader({ isLoading: true }));\r\n      } else if (event instanceof RouteConfigLoadEnd) {\r\n        this.store.dispatch(setGlobalLoader({ isLoading: false }));\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\n\n<b1-global-loader></b1-global-loader>","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { AppState, APP_KEY } from '@reducers/app.reducers';\r\nimport { currentCustomerSelector } from './user.selectors';\r\n\r\nexport const featureSelector = createFeatureSelector<AppState>(APP_KEY);\r\n\r\nexport const globalLoaderSelector = createSelector(\r\n    featureSelector,\r\n    state => state.globalLoader\r\n);\r\n\r\nexport const bankDateSelector = createSelector(\r\n    currentCustomerSelector,\r\n    (currentCustomer) => currentCustomer?.BankDate\r\n);\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, ReplaySubject, throwError } from 'rxjs';\r\n\r\nexport abstract class BaseService {\r\n\r\n  private loading = false;\r\n  public loadingSource = new ReplaySubject<boolean>();\r\n  public loading$ = this.loadingSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  protected handleError(error: HttpErrorResponse): Observable<never> {\r\n    // this.loading = false;\r\n    console.log(error);\r\n    if (error.url) {\r\n      if (error.url.indexOf('demo') > 0 && error.url.indexOf('.json') > 0) {\r\n        if (error.url.indexOf('en-US') > 0) {\r\n          return throwError('Function not available in demo mode!');\r\n        }\r\n        if (error.url.indexOf('ru-RU') > 0) {\r\n          return throwError('Функция не доступна в демо режиме!');\r\n        }\r\n        if (error.url.indexOf('uk-UA') > 0) {\r\n          return throwError('Функція не доступна в демо режимі!');\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      console.log(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${JSON.stringify(error.error)}`);\r\n    }\r\n\r\n    if (error.status === 401) {\r\n      return throwError('');\r\n    }\r\n\r\n    // return an observable with a user-facing error message\r\n    if (typeof (error.error) === 'string') {\r\n      return throwError(error.error);\r\n    }\r\n    if ('DOMException' === error.constructor.name) {\r\n      return throwError(error.message);\r\n    }\r\n    if (error.error instanceof ProgressEvent) {\r\n      return throwError(error.message);\r\n    } else {\r\n      return throwError(error);\r\n    }\r\n    // error\r\n  }\r\n\r\n  triggerLoading(loading: boolean): void {\r\n    this.loadingSource.next(loading);\r\n  }\r\n}\r\n","import { LogInModel } from '@modules/auth/models/login.model';\r\nimport { LoginResponse } from '@modules/auth/models/login.response';\r\nimport { Token } from '@modules/auth/models/token.model';\r\nimport { createAction, props } from '@ngrx/store';\r\nimport { Profile } from 'src/app/@shared/models/profile.model';\r\n\r\n\r\nexport const loginRequest = createAction(\r\n  '[AUTH] login request',\r\n  props<{ data: LogInModel }>()\r\n);\r\n\r\nexport const tokenLoginRequest = createAction(\r\n  '[AUTH] token with login request',\r\n  props<{ data: LogInModel | undefined }>()\r\n);\r\n\r\nexport const tokenOtpRequest = createAction(\r\n  '[AUTH] token with otp request',\r\n  props<{ code: string }>()\r\n);\r\n\r\nexport const resetLogin = createAction(\r\n  '[AUTH] reset login data'\r\n);\r\n\r\nexport const loginSuccess = createAction(\r\n  '[AUTH] login success',\r\n  props<{ response: LoginResponse }>()\r\n);\r\n\r\nexport const loginFailure = createAction(\r\n  '[AUTH] login error',\r\n  props<{ message: string }>()\r\n);\r\n\r\n// tokenSuccess action\r\nexport const tokenSuccess = createAction(\r\n  '[AUTH] token success',\r\n  props<{ token: Token }>()\r\n);\r\n\r\n// tokenFailure action\r\nexport const tokenFailure = createAction(\r\n  '[AUTH] token error',\r\n  props<{ message: string }>()\r\n);\r\n\r\nexport const setIsLoading = createAction(\r\n  '[AUTH] set is loading',\r\n  props<{ isLoading: boolean }>()\r\n);\r\n\r\n// setNeedOtp action\r\nexport const setNeedOtp = createAction(\r\n  '[AUTH] sett need otp',\r\n  props<{ phone: string | undefined }>()\r\n);\r\n\r\n\r\n// authLoadProfile action\r\nexport const authLoadProfileRequest = createAction(\r\n  '[AUTH] load profile request'\r\n);\r\n\r\n// authLoadProfileSuccess action\r\nexport const authLoadProfileSuccess = createAction(\r\n  '[AUTH] load profile success',\r\n  props<{ profile: Profile }>()\r\n);\r\n\r\n// authLoadProfileFailure action\r\nexport const authLoadProfileFailure = createAction(\r\n  '[AUTH] load profile failure',\r\n  props<{ error: string }>()\r\n);\r\n\r\n// setToken action\r\nexport const setToken = createAction(\r\n  '[AUTH] set token',\r\n  props<{ token: Token }>()\r\n);\r\n\r\n// logout action\r\nexport const logout = createAction(\r\n  '[AUTH] logout'\r\n);\r\n\r\n\r\n\r\n\r\n\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { AcctEffects } from '@effects/acct.effects';\r\nimport { AuthEffects } from '@effects/auth.effects';\r\nimport { NotifyEffects } from '@effects/notify.effects';\r\nimport { PublicEffects } from '@effects/public.effects';\r\nimport { RouteEffects } from '@effects/route.effects';\r\nimport { SettingsEffects } from '@effects/settings.effects';\r\nimport { UserEffects } from '@effects/user.effects';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { routerReducer, StoreRouterConnectingModule } from '@ngrx/router-store';\r\nimport { ActionReducer, MetaReducer, StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\nimport { localStorageSync } from 'ngrx-store-localstorage';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nimport { reducers } from './store';\r\n\r\nexport function localStorageSyncReducer(reducer: ActionReducer<any>): ActionReducer<any> {\r\n  return localStorageSync(\r\n    {\r\n      keys: [\r\n        { settings: ['currentLanguage', 'darkModeActive'] },\r\n        { auth: ['token'] },\r\n        { user: ['currentClientId'] }\r\n      ],\r\n      rehydrate: true\r\n    })(reducer);\r\n}\r\nconst metaReducers: Array<MetaReducer<any, any>> = [localStorageSyncReducer];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    StoreModule.forRoot(reducers, {\r\n      metaReducers\r\n    }),\r\n    StoreDevtoolsModule.instrument({ maxAge: 100, logOnly: environment.production }),\r\n    EffectsModule.forRoot([\r\n      AuthEffects,\r\n      RouteEffects,\r\n      UserEffects,\r\n      SettingsEffects,\r\n      AcctEffects,\r\n      PublicEffects,\r\n      NotifyEffects\r\n    ]),\r\n    StoreRouterConnectingModule.forRoot(),\r\n  ],\r\n  declarations: [],\r\n  exports: [StoreModule, StoreDevtoolsModule, EffectsModule]\r\n})\r\nexport class CoreModule { }\r\n","export enum AccountTab {\r\n    Active = 'Active',\r\n    Closed = 'Closed'\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Profile } from 'src/app/@shared/models/profile.model';\r\nimport { Notification } from 'src/app/@shared/models/notification.model';\r\nimport { MenuItem } from 'src/app/@shared/models/menu-item.model';\r\n\r\n// loadProfileRequest action\r\nexport const loadProfileRequest = createAction('[USER] load profile');\r\n\r\n// loadProfileSuccess action\r\nexport const loadProfileSuccess = createAction(\r\n    '[USER] load profile success',\r\n    props<{ profile: Profile }>()\r\n);\r\n\r\n// loadProfileFailure action\r\nexport const loadProfileFailure = createAction(\r\n    '[USER] load profile failure',\r\n    props<{ error: string }>()\r\n);\r\n\r\nexport const checkProfile = createAction(\r\n    '[USER] check profile'\r\n);\r\n\r\nexport const profileExist = createAction(\r\n    '[USER] profile exist'\r\n);\r\n\r\nexport const loadNotifications = createAction(\r\n    '[USER] load notifications'\r\n);\r\n\r\nexport const setNotifications = createAction(\r\n    '[USER] set notifications',\r\n    props<{ notifications: Notification[] }>()\r\n);\r\n\r\nexport const setCurrentClientId = createAction(\r\n    '[USER] set current client id',\r\n    props<{ clientId: string }>()\r\n);\r\n\r\nexport const setMenu = createAction(\r\n    '[USER] set menu',\r\n    props<{ menu: MenuItem[] }>()\r\n);\r\n\r\nexport const setSubMenu = createAction(\r\n    '[USER] set sub menu',\r\n    props<{ menu: MenuItem[] }>()\r\n);\r\n","import { AfterViewInit, Directive, ElementRef, Input } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Directive({\n  selector: '[webClass]'\n})\nexport class WebClassDirective implements AfterViewInit {\n\n  @Input() webClass!: string;\n  constructor(private el: ElementRef) {\n\n  }\n\n  ngAfterViewInit(): void {\n    if (window.screen.width > environment.mobileWidth && this.webClass) {\n      this.el.nativeElement.className += ' ' + this.webClass;\n    }\n  }\n\n}\n","import { CommonModule, DatePipe } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nimport { CoreModule } from './@core/core.module';\r\nimport { AuthInterceptor } from './@core/interceptors/auth.interceptor';\r\nimport { B1GlobalLoaderComponent } from './@shared/components/b1-global-loader/b1-global-loader.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthorizedLayoutComponent } from './layout/authorized-layout/authorized-layout.component';\r\nimport { HeaderComponent } from './layout/header/header.component';\r\nimport { SharedModule } from './@shared/shared.module';\r\nimport { ReactiveComponentModule } from '@ngrx/component';\r\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { NgrxFormsModule } from 'ngrx-forms';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    B1GlobalLoaderComponent,\r\n    AuthorizedLayoutComponent,\r\n    HeaderComponent,\r\n    SidebarComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ReactiveComponentModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    BrowserAnimationsModule, // required animations module\r\n    ToastrModule.forRoot(), // ToastrModule added\r\n    AppRoutingModule,\r\n    CoreModule,\r\n    SharedModule\r\n  ],\r\n  exports: [\r\n    ReactiveComponentModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true,\r\n    },\r\n    DatePipe\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\nexport function HttpLoaderFactory(http: HttpClient): TranslateHttpLoader {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AccountTab } from '@modules/accounts/models/acct-tab.enum';\r\nimport { AcctEdit } from '@reducers/acct.reducers';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountModel } from 'src/app/@shared/models/account.model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AcctService extends BaseService {\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getAccounts(clientId: string): Observable<AccountModel[]> {\r\n        return this.http.get<AccountModel[]>(`api/v1/acct/accounts/${clientId}`).pipe(map(accounts => {\r\n            accounts.forEach(account => this.mapAccount(account));\r\n            return accounts;\r\n        }));\r\n    }\r\n\r\n    getAccount(bankId: string, accountId: number, clientId: string): Observable<AccountModel> {\r\n        return this.http.get<AccountModel>(`api/v1/acct/accounts/${bankId}/${accountId}/${clientId}`).pipe(\r\n            map(account => this.mapAccount(account))\r\n        );\r\n    }\r\n\r\n    updateAccount(bankId: string, accountId: number, clientId: string, updateAccount: AcctEdit): Observable<never> {\r\n        return this.http.put<never>(`api/v1/acct/accounts/${bankId}/${accountId}/${clientId}`, { AccName: updateAccount.name });\r\n    }\r\n\r\n    private mapAccount(account: AccountModel): AccountModel {\r\n        account.Status = !account.ClosingDate ? AccountTab.Active : AccountTab.Closed;\r\n        return account;\r\n    }\r\n}\r\n","import { Directive, ElementRef, Inject, Input, OnChanges, OnDestroy, Self, SimpleChanges } from '@angular/core';\nimport { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Directive({\n  selector: '[mobile-more]'\n})\nexport class MobileMoreDirective implements OnDestroy {\n\n  parentNode: any;\n  openSubscription: Subscription;\n\n  constructor(@Self() @Inject(NgbDropdown) private readonly dropdown: NgbDropdown, private el: ElementRef) {\n    this.parentNode = el.nativeElement.parentNode;\n    const div = document.createElement('ngb-modal-backdrop');\n    div.className = 'modal-backdrop fade show';\n    const body = document.getElementsByTagName('body')[0];\n    this.openSubscription = dropdown.openChange.pipe(filter(() => window.screen.width <= environment.mobileWidth)).subscribe((isOpen) => {\n      if (isOpen) {\n        // el.nativeElement.style.position = 'fixed';\n        // el.nativeElement.style.top = 'auto';\n        // el.nativeElement.style.bottom = '0';\n        // el.nativeElement.style['z-index'] = 1050;\n\n        body.appendChild(el.nativeElement);\n        body.appendChild(div);\n        setTimeout(() => {\n          el.nativeElement.classList.add('mobile-more-show');\n        });\n\n      }\n      else {\n        this.parentNode.appendChild(el.nativeElement);\n        body.removeChild(div);\n        el.nativeElement.classList.remove('mobile-more-show');\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.openSubscription.unsubscribe();\n  }\n}\n","import { setGlobalLoader } from '@actions/app.actions';\r\nimport { createReducer, on } from '@ngrx/store';\r\n\r\nexport const APP_KEY = 'app';\r\n\r\nexport interface AppState {\r\n    globalLoader: boolean;\r\n}\r\n\r\nexport const initialState: AppState = {\r\n    globalLoader: false\r\n};\r\n\r\nexport const appReducers = createReducer(\r\n    initialState,\r\n    on(\r\n        setGlobalLoader,\r\n        (state, action) => ({ ...state, globalLoader: action.isLoading })\r\n    )\r\n);\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BankModel } from 'src/app/@shared/models/bank.model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PublicService extends BaseService {\r\n\r\n    /**\r\n     *\r\n     */\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getBanks(): Observable<BankModel[]> {\r\n        return this.http.get<BankModel[]>(`api/v1/public/banks/`);\r\n    }\r\n}\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { AUTH_KEY, AuthState } from '@reducers/auth.reducers';\r\n\r\nexport const featureSelector = createFeatureSelector<AuthState>(AUTH_KEY);\r\n\r\nexport const phoneSelector = createSelector(\r\n  featureSelector,\r\n  state => state.phone\r\n);\r\n\r\nexport const loginDataSelector = createSelector(\r\n  featureSelector,\r\n  state => state.loginData\r\n);\r\n\r\nexport const errorSelector = createSelector(\r\n  featureSelector,\r\n  state => state.error\r\n);\r\n\r\nexport const isLoadingSelector = createSelector(\r\n  featureSelector,\r\n  state => state.isLoading\r\n);\r\n\r\nexport const tokenSelector = createSelector(\r\n  featureSelector,\r\n  state => state.token\r\n);\r\n\r\nexport const isNeedOtpSelector = createSelector(\r\n  featureSelector,\r\n  state => state.isNeedOtp\r\n);\r\n","import { LogInModel } from './login.model';\r\n\r\nexport class LoginOtpModel extends LogInModel {\r\n\r\n  public ConfirmCode: string | undefined;\r\n\r\n  constructor(code: string | undefined, loginData: LogInModel | undefined) {\r\n    super();\r\n    this.ConfirmCode = code;\r\n    this.Password = loginData?.Password;\r\n    this.Username = loginData?.Username;\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { bankSelector } from '@selectors/public.selectors';\r\nimport { IbanService } from '@services/iban.service';\r\nimport { Observable } from 'rxjs';\r\nimport { BankModel } from '../models/bank.model';\r\n\r\n\r\n@Directive({\r\n    selector: '[iban]'\r\n})\r\nexport class IbanDirective implements OnChanges {\r\n\r\n    @Input() iban!: string;\r\n\r\n    constructor(private elementRef: ElementRef, private ibanService: IbanService) {\r\n\r\n    }\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.iban.currentValue !== changes.iban.previousValue && this.ibanService.isIban(this.iban)) {\r\n            const countryCode = this.iban.substring(0, 2);\r\n            const mfo = this.ibanService.getMfo(this.iban);\r\n            const checkNumbers = this.iban.substring(2, 4);\r\n            const accountNumber = this.ibanService.getNls(this.iban);\r\n\r\n            let zeros = '';\r\n            while (\r\n                (\r\n                    countryCode.length +\r\n                    mfo.length +\r\n                    checkNumbers.length +\r\n                    zeros.length +\r\n                    accountNumber.length\r\n                ) !== this.ibanService.IbanLength) {\r\n                zeros += '0';\r\n            }\r\n            let html = `<span style='opacity:0.6'>${countryCode}</span>`;\r\n            html += `<span style='opacity:0.6'>${checkNumbers}</span>`;\r\n            html += `<span style=''>${mfo}</span>`;\r\n            html += `<span style='opacity:0.6'>${zeros}</span>`;\r\n            html += `<span style=''>${accountNumber}</span>`;\r\n            this.elementRef.nativeElement.innerHTML = html;\r\n        }\r\n    }\r\n}\r\n","import { AfterViewInit, Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { FormGroupDirective } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { currentTabSelector } from '@selectors/acct.selectors';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { debounceTime, map, take } from 'rxjs/operators';\r\n\r\n@Directive({\r\n    selector: '[connectForm]'\r\n})\r\nexport class ConnectFormDirective implements AfterViewInit, OnDestroy {\r\n    @Output() formChange: EventEmitter<any> = new EventEmitter<any>();\r\n    @Input() debounce = 300;\r\n    @Input() value: Observable<any> | undefined;\r\n    formChangeSubscription: Subscription | undefined;\r\n\r\n    constructor(private formGroupDirective: FormGroupDirective, private store: Store) {\r\n\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        if (!!this.formChange) {\r\n            this.formChangeSubscription = this.formGroupDirective.form.valueChanges.pipe(\r\n                debounceTime(this.debounce)).subscribe((value: any) => {\r\n                    this.formChange?.emit(value);\r\n                });\r\n        }\r\n        if (!!this.value) {\r\n            this.value.pipe(take(1)).subscribe(value => this.formGroupDirective.form.patchValue(value));\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.formChangeSubscription!.unsubscribe();\r\n    }\r\n\r\n}\r\n","import { AccountTab } from '@modules/accounts/models/acct-tab.enum';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { AcctState, ACCT_KEY } from '@reducers/acct.reducers';\r\nimport { AccountModel } from 'src/app/@shared/models/account.model';\r\nimport { FilterCurrency, FilterCurrencyType } from 'src/app/@shared/models/filter.model';\r\nimport { selectRouteNestedParams, selectRouteParams } from './router.selectors';\r\n\r\nexport const featureSelector = createFeatureSelector<AcctState>(ACCT_KEY);\r\n\r\nexport const countActiveAccountsSelector = createSelector(\r\n    featureSelector,\r\n    state => !state.accounts ? 0 : (state.accounts as AccountModel[]).filter(p => p.Status === AccountTab.Active).length\r\n);\r\n\r\nexport const countClosedAccountsSelector = createSelector(\r\n    featureSelector,\r\n    state => !state.accounts ? 0 : (state.accounts as AccountModel[]).filter(p => p.Status === AccountTab.Closed).length\r\n);\r\n\r\nexport const accountsSelector = createSelector(\r\n    featureSelector,\r\n    state => state.accounts\r\n);\r\n\r\nexport const accountsOnTabSelector = createSelector(\r\n    featureSelector,\r\n    state => state.accounts?.filter(p => p.Status === state.currentTab) || []\r\n);\r\n\r\nexport const currentTabSelector = createSelector(\r\n    featureSelector,\r\n    state => state.currentTab\r\n);\r\n\r\nexport const formSelector = createSelector(\r\n    featureSelector,\r\n    state => state.filterForm\r\n);\r\n\r\nexport const editFormSelector = createSelector(\r\n    featureSelector,\r\n    state => state.editForm\r\n);\r\n\r\nexport const filterAccountsSelector = createSelector(\r\n    featureSelector,\r\n    state => state.filterForm.controls.filter.value\r\n);\r\n\r\nexport const FilterCurrencySelector = createSelector(\r\n    featureSelector,\r\n    state => {\r\n        if (state.filterForm.value.currency.OTHER === true) {\r\n            const result: FilterCurrency = {\r\n                currencies: Object.keys(\r\n                    state.filterForm.value.currency\r\n                ).filter(p => p !== 'OTHER'),\r\n                type: FilterCurrencyType.Exclude\r\n            };\r\n            return result;\r\n        }\r\n        else {\r\n            const result: FilterCurrency = {\r\n                currencies: Object.keys(\r\n                    state.filterForm.value.currency\r\n                ).filter(p => p !== 'OTHER' && state.filterForm.value.currency[p] === true),\r\n                type: FilterCurrencyType.Include\r\n            };\r\n            return result;\r\n        }\r\n    }\r\n);\r\n\r\nexport const isLoadingAccountsSelector = createSelector(\r\n    featureSelector,\r\n    state => state.loadings.indexOf('list') >= 0\r\n);\r\n\r\nexport const isLoadingCurrentAccountSelector = createSelector(\r\n    featureSelector,\r\n    state => state.loadings.indexOf('account') >= 0\r\n);\r\n\r\n\r\nexport const currentAccountSelector = createSelector(\r\n    featureSelector,\r\n    state => state.currentAccount\r\n);\r\n\r\nexport const currentAccountRouteParamsSelector = createSelector(\r\n    selectRouteNestedParams,\r\n    ({ bankId, accountId }) => ({ bankId: (bankId as string) || '', accountId: parseInt(accountId || '', 10) })\r\n);\r\n\r\n","import { routerReducer, RouterReducerState } from '@ngrx/router-store';\r\nimport { ActionReducerMap } from '@ngrx/store';\r\nimport { acctReducers, AcctState, ACCT_KEY } from '@reducers/acct.reducers';\r\nimport { appReducers, AppState, APP_KEY } from '@reducers/app.reducers';\r\nimport { AUTH_KEY, authReducer, AuthState } from '@reducers/auth.reducers';\r\nimport { publicReducer, PublicState, PUBLIC_KEY } from '@reducers/public.reducers';\r\nimport { SETTINGS_KEY, settingsReducer, SettingsState } from '@reducers/settings.reducers';\r\nimport { USER_KEY, userReducer, UserState } from '@reducers/user.reducers';\r\n\r\nexport interface State {\r\n  [SETTINGS_KEY]: SettingsState;\r\n  [AUTH_KEY]: AuthState;\r\n  [USER_KEY]: UserState;\r\n  [APP_KEY]: AppState;\r\n  [ACCT_KEY]: AcctState;\r\n  [PUBLIC_KEY]: PublicState;\r\n  router: RouterReducerState;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n  [SETTINGS_KEY]: settingsReducer,\r\n  [AUTH_KEY]: authReducer,\r\n  [USER_KEY]: userReducer,\r\n  [APP_KEY]: appReducers,\r\n  [ACCT_KEY]: acctReducers,\r\n  [PUBLIC_KEY]: publicReducer,\r\n  router: routerReducer\r\n};\r\n","import { CdkFixedSizeVirtualScroll, CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\r\nimport { Directive, Inject, OnDestroy, OnInit, Self } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: 'cdk-virtual-scroll-viewport[autosize]',\r\n})\r\nexport class CdkVirtualScrollViewportPatchDirective implements OnInit, OnDestroy {\r\n  protected readonly destroy$ = new Subject();\r\n  private renderedRangeStreamSub!: Subscription;\r\n  constructor(\r\n    @Self() @Inject(CdkVirtualScrollViewport) private readonly viewport: CdkVirtualScrollViewport,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('CdkVirtualScrollViewportPatchDirective started');\r\n    const viewportObject = (this.viewport as CdkVirtualScrollViewport);\r\n    const renderedRangeStream = ((this.viewport as any).renderedRangeStream as Subject<any>);\r\n    this.renderedRangeStreamSub = renderedRangeStream.pipe(first()).subscribe(() => {\r\n      setTimeout(() => {\r\n        const strategy = ((viewportObject as any)._scrollStrategy as any);\r\n\r\n        const item = viewportObject.elementRef.nativeElement.children[0].children[0];\r\n        const style = getComputedStyle(item);\r\n        const itemSize = item.clientHeight +\r\n          parseInt(style.marginTop, 10) +\r\n          parseInt(style.marginBottom, 10) +\r\n          parseInt(style.paddingBottom, 10) +\r\n          parseInt(style.paddingTop, 10);\r\n        viewportObject.setRenderedRange({ start: 0, end: (viewportObject.getViewportSize() + strategy._minBufferPx) / itemSize });\r\n        strategy.updateItemAndBufferSize(itemSize, strategy._minBufferPx, strategy._maxBufferPx);\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.renderedRangeStreamSub.unsubscribe();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgOtpInputModule } from 'ng-otp-input';\r\nimport { B1IconDirective } from './directives/b1-icon.directive';\r\n\r\nimport { CheckStateDirective } from './directives/check-state.directive';\r\nimport { B1CardLoaderComponent } from './components/b1-card-loader/b1-card-loader.component';\r\nimport { ReactiveComponentModule } from '@ngrx/component';\r\nimport { FixedSizeVirtualScrollStrategy, ScrollingModule, VIRTUAL_SCROLL_STRATEGY } from '@angular/cdk/scrolling';\r\nimport { NgScrollbarModule } from 'ngx-scrollbar';\r\nimport { ConnectFormDirective } from './directives/connect-form.directive';\r\nimport { NgrxFormsModule } from 'ngrx-forms';\r\nimport { AccountFilterPipe } from './pipes/accounts-filter.pipe';\r\nimport { MoneyPipe } from './pipes/money.pipe';\r\nimport { CdkVirtualScrollViewportPatchDirective } from './directives/virtual-patch.directive';\r\nimport { IbanDirective } from './directives/iban.directive';\r\nimport { MobileMoreDirective } from './directives/mobile-more.directive';\r\n\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\nimport { WebClassDirective } from './directives/web-class.directive';\r\nimport { MobileClassDirective } from './directives/mobile-class.directive';\r\nimport { MoreAutoDirectionDirective } from './directives/more-auto-direction.directive';\r\n\r\nexport class CustomVirtualScrollStrategy extends FixedSizeVirtualScrollStrategy {\r\n  constructor() {\r\n    super(50, 98, 98);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CheckStateDirective,\r\n    B1IconDirective,\r\n    B1CardLoaderComponent,\r\n    ConnectFormDirective,\r\n    AccountFilterPipe,\r\n    MoneyPipe,\r\n    CdkVirtualScrollViewportPatchDirective,\r\n    IbanDirective,\r\n    MobileMoreDirective,\r\n    WebClassDirective,\r\n    MobileClassDirective,\r\n    MoreAutoDirectionDirective],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    NgOtpInputModule,\r\n    ReactiveComponentModule,\r\n    ScrollingModule,\r\n    NgScrollbarModule,\r\n    NgrxFormsModule,\r\n    NgxSkeletonLoaderModule\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    CheckStateDirective,\r\n    NgOtpInputModule,\r\n    B1IconDirective,\r\n    B1CardLoaderComponent,\r\n    ScrollingModule,\r\n    NgScrollbarModule,\r\n    ConnectFormDirective,\r\n    NgrxFormsModule,\r\n    AccountFilterPipe,\r\n    MoneyPipe,\r\n    CdkVirtualScrollViewportPatchDirective,\r\n    IbanDirective,\r\n    MobileMoreDirective,\r\n    NgxSkeletonLoaderModule,\r\n    WebClassDirective,\r\n    MobileClassDirective,\r\n    MoreAutoDirectionDirective\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: VIRTUAL_SCROLL_STRATEGY,\r\n      useClass: CustomVirtualScrollStrategy,\r\n    },\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\n// APP set global loader action\r\nexport const setGlobalLoader = createAction('[APP] set global loader', props<{ isLoading: boolean }>());\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { SETTINGS_KEY, SettingsState } from '@reducers/settings.reducers';\r\n\r\nexport const featureSelector = createFeatureSelector<SettingsState>(SETTINGS_KEY);\r\n\r\nexport const currentLanguageSelector = createSelector(\r\n  featureSelector,\r\n  state => state.currentLanguage\r\n);\r\n\r\nexport const allowedLanguagesSelector = createSelector(\r\n  featureSelector,\r\n  state => state.allowedLanguages\r\n);\r\n\r\nexport const darkModeSelector = createSelector(\r\n  featureSelector,\r\n  state => state.darkModeActive\r\n);\r\n\r\nexport const logoSelector = createSelector(\r\n  featureSelector,\r\n  state => state.resources?.Owner.LogoImage || ''\r\n);\r\n\r\nexport const callCenterPhonesSelector = createSelector(\r\n  featureSelector,\r\n  state => state.resources?.Owner.CallCenterPhone\r\n);\r\n\r\nexport const callCenterPhonesLocalSelector = createSelector(\r\n  featureSelector,\r\n  state => state.resources?.Owner.CallCenterPhoneLocal\r\n);\r\n\r\nexport const callCenterWorkSelector = createSelector(\r\n  featureSelector,\r\n  state => {\r\n    return {\r\n      from: state.resources?.Owner.CallCenterWorkFrom,\r\n      to: state.resources?.Owner.CallCenterWorkTo\r\n    };\r\n  }\r\n);\r\n\r\nexport const ecpSupportPhonesSelector = createSelector(\r\n  featureSelector,\r\n  state => state.resources?.Owner.ECPTechSupportPhone\r\n);\r\n\r\nexport const isCollapsedSelector = createSelector(\r\n  featureSelector,\r\n  state => state.isCollapsed\r\n);\r\n\r\nexport const isOpenMenu = createSelector(\r\n  featureSelector,\r\n  state => state.menuOpen\r\n)\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\n// routeTo action\r\nexport const routeTo = createAction(\r\n    '[ROUTE] route to',\r\n    props<{ route: string }>()\r\n);\r\n\r\n","import { closeMenu, openMenu, setDarkMode, setLanguage, setResources, toggleCollapsed } from '@actions/settings.actions';\r\nimport { createReducer, on } from '@ngrx/store';\r\nimport { Resources } from 'src/app/@shared/models/resources.model';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport const SETTINGS_KEY = 'settings';\r\n\r\nexport interface SettingsState {\r\n    currentLanguage: string;\r\n    allowedLanguages: string[];\r\n    resources: Resources | undefined;\r\n    darkModeActive: boolean;\r\n    isCollapsed: boolean;\r\n    menuOpen: boolean;\r\n}\r\n\r\nexport const initialState: SettingsState = {\r\n    currentLanguage: 'uk',\r\n    allowedLanguages: environment.languages,\r\n    resources: undefined,\r\n    darkModeActive: false,\r\n    isCollapsed: false,\r\n    menuOpen: false\r\n};\r\n\r\nexport const settingsReducer = createReducer(\r\n    initialState,\r\n    on(setLanguage, (state, action) => ({\r\n        ...state,\r\n        currentLanguage: action.language\r\n    })),\r\n    on(setResources, (state, action) => ({\r\n        ...state,\r\n        resources: action.resources\r\n    })),\r\n    on(setDarkMode, (state, action) => ({\r\n        ...state,\r\n        darkModeActive: action.isActive\r\n    })),\r\n    on(\r\n        openMenu,\r\n        (state) => ({ ...state, menuOpen: true })\r\n    ),\r\n    on(\r\n        closeMenu,\r\n        (state) => ({ ...state, menuOpen: false })\r\n    ),\r\n    on(\r\n        toggleCollapsed,\r\n        (state, action) => ({ ...state, isCollapsed: !state.isCollapsed })\r\n    )\r\n);\r\n\r\n\r\n","import { checkProfile, loadNotifications } from '@actions/user.actions';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { countCustomersSelector, profileSelector } from '@selectors/user.selectors';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserFacade {\r\n\r\n    public profile$ = this.store.select(profileSelector);\r\n    public countCustomers$ = this.store.select(countCustomersSelector);\r\n    constructor(private store: Store) {\r\n\r\n    }\r\n\r\n    public loadProfile(): void {\r\n        console.log('load profile');\r\n        this.store.dispatch(checkProfile());\r\n    }\r\n\r\n    public loadNotifications(): void {\r\n        this.store.dispatch(loadNotifications());\r\n    }\r\n}\r\n","export interface Filter {\r\n    filter: string | undefined;\r\n}\r\n\r\nexport enum FilterCurrencyType {\r\n    Include = 'INCLUDE',\r\n    Exclude = 'EXCLUDE'\r\n}\r\nexport interface FilterCurrency {\r\n    type: FilterCurrencyType;\r\n    currencies: string[];\r\n}\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LoginOtpModel } from './../../modules/auth/models/login-otp.model';\r\nimport { LogInModel } from './../../modules/auth/models/login.model';\r\nimport { LoginResponse } from './../../modules/auth/models/login.response';\r\nimport { Token } from './../../modules/auth/models/token.model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService extends BaseService {\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor(private http: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  logIn(loginData: LogInModel): Observable<LoginResponse> {\r\n    return this.http.post<LoginResponse>('api/v1/auth/login', loginData);\r\n  }\r\n\r\n  loginWithData(loginData: LogInModel | undefined): Observable<Token> {\r\n    console.log(loginData);\r\n    const params = new HttpParams()\r\n      .set('grant_type', 'password')\r\n      .set('username', loginData?.Username || '')\r\n      .set('userdata', loginData?.UserData || '')\r\n      .set('client_id', 'CORP-LIGHT-WEB') // TODO add to environment\r\n      .set('passphrase', loginData?.Password || '');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    };\r\n    return this.http.post<Token>('api/v1/auth/token', params, httpOptions);\r\n  }\r\n\r\n  loginOtp(loginData: LoginOtpModel): Observable<Token> {\r\n    const params = new HttpParams()\r\n      .set('grant_type', 'password')\r\n      .set('username', loginData.Username || '')\r\n      .set('userdata', loginData.UserData)\r\n      .set('client_id', 'CORP-LIGHT-WEB') // TODO add to environment\r\n      .set('passphrase', loginData.Password || '')\r\n      .set('confirmCode', loginData.ConfirmCode || '');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    };\r\n    return this.http.post<Token>('api/v1/auth/token', params, httpOptions);\r\n  }\r\n\r\n  refreshToken(refreshToken: string | undefined, sessionId: string | undefined): Observable<Token> {\r\n    const params = new HttpParams()\r\n      .set('grant_type', 'refresh_token')\r\n      .set('refresh_token', refreshToken || '')\r\n      .set('sessionId', sessionId || '')\r\n      .set('client_id', 'CORP-LIGHT-WEB'); // TODO add to environment\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      })\r\n    };\r\n    return this.http.post<Token>('api/v1/auth/token', params, httpOptions);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { MenuItem } from 'src/app/@shared/models/menu-item.model';\r\nimport { Customer } from 'src/app/@shared/models/profile.model';\r\n\r\nexport interface Menu {\r\n    accounts: MenuItem;\r\n    loans: MenuItem;\r\n    deposits: MenuItem;\r\n    payments: MenuItem;\r\n    applications: MenuItem;\r\n    supdocuments: MenuItem;\r\n    salary: MenuItem;\r\n    corpcards: MenuItem;\r\n    [key: string]: MenuItem;\r\n}\r\n\r\nexport interface SubMenu {\r\n    branches: MenuItem;\r\n    promotion: MenuItem;\r\n    calculator: MenuItem;\r\n    users: MenuItem;\r\n    agents: MenuItem;\r\n    instruction: MenuItem;\r\n    mobiles: MenuItem;\r\n    [key: string]: MenuItem;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class MenuService extends BaseService {\r\n\r\n    private menu: Menu = {\r\n        accounts: {\r\n            ngClass: '{active:$state.includes(\\'app.acct\\')}',\r\n            ngValue: 'accounts',\r\n            icon: 'university',\r\n            dataRole:\r\n                'Director,Accountant,AccountsViewer,StatsViewer,PaymentsManager,ForeignCurrencyPaymentsManager,ForeignCurrencyApplicationsManager',\r\n            route: 'accounts',\r\n            // //gaTrackEvent: \"['left-menu', 'view-accts']\",\r\n            dataTranslate: 'aside.nav.ACCOUNTS',\r\n            moduleName: 'Accounts',\r\n            position: 0\r\n        },\r\n        loans: {\r\n            ngClass: '{active:$state.includes(\\'app.loan\\')}',\r\n            ngValue: 'loans',\r\n            icon: 'pie-chart',\r\n            dataRole: 'Director,Accountant,LoansViewer',\r\n            route: 'app.loan.loans',\r\n            // gaTrackEvent: '[\\'left-menu\\', \\'view-loans\\']',\r\n            dataTranslate: 'aside.nav.LOANS',\r\n            moduleName: 'Loans',\r\n            position: 1\r\n        },\r\n\r\n        deposits: {\r\n            ngClass: '{active:$state.includes(\\'app.dpt.index\\')}',\r\n            ngValue: 'deposits',\r\n            icon: 'piggy-bank',\r\n            dataRole: 'Director,Accountant,DepositsViewer',\r\n            route: 'app.dpt.index',\r\n            // gaTrackEvent: '[\\'left-menu\\', \\'view-dpt\\']',\r\n            dataTranslate: 'aside.nav.DEPOSITS',\r\n            moduleName: 'Deposits',\r\n            position: 2\r\n        },\r\n        payments: {\r\n            ngClass:\r\n                '{active: ($state.includes(\\'app.payments\\') || $state.includes(\\'app.paymentsAuto\\')) && !$state.includes(\\'app.payments.recipients\\')}',\r\n            ngValue: 'payments',\r\n            icon: 'money-bill-wave',\r\n            dataRole:\r\n                'Director,Accountant,PaymentsManager,ForeignCurrencyPaymentsManager',\r\n            route: 'app.payments.incomings',\r\n            // gaTrackEvent: '[\\'left-menu\\', \\'view-payments\\']',\r\n            dataTranslate: 'aside.nav.DOCUMENTS',\r\n            moduleName: 'Payments',\r\n            position: 3\r\n        },\r\n        applications: {\r\n            ngClass: '{active: $state.includes(\\'app.fcapplications\\')}',\r\n            ngValue: 'applications',\r\n            icon: 'coins',\r\n            dataRole: 'Director,Accountant,ForeignCurrencyApplicationsManager',\r\n            route: 'app.fcapplications.list.made',\r\n            // gaTrackEvent: '[\\'left-menu\\', \\'view-fcapplications\\']',\r\n            dataTranslate: 'aside.nav.APPLICATION',\r\n            moduleName: 'Applications',\r\n            position: 4\r\n        },\r\n        supdocuments: {\r\n            ngClass: '{active: $state.includes(\\'app.supdocuments\\')}',\r\n            ngValue: 'supdocuments',\r\n            icon: 'file',\r\n            dataRole: 'Director,Accountant,ForeignCurrencyApplicationsManager',\r\n            route: 'app.supdocuments.list.documents',\r\n            // gaTrackEvent: '[\\'left-menu\\', \\'view-sup-docs\\']',\r\n            dataTranslate: 'aside.nav.SUPDOCUMENTS',\r\n            moduleName: 'SupportDocuments',\r\n            position: 5\r\n        },\r\n        salary: {\r\n            ngClass: '{active: $state.includes(\\'app.salary\\')}',\r\n            ngValue: 'salary',\r\n            icon: 'wallet',\r\n            dataRole: 'Director,Accountant,SalaryAccountant',\r\n            route: 'app.salary.projects',\r\n            // gaTrackEvent: '[\\'left-menu\\', \\'view-salary\\']',\r\n            dataTranslate: 'aside.nav.SALARY',\r\n            moduleName: 'Salary',\r\n            position: 6\r\n        },\r\n        corpcards: {\r\n            ngClass: '{active: $state.includes(\\'app.corpcards.index\\')}',\r\n            ngValue: 'corpcards',\r\n            icon: 'credit-card',\r\n            dataRole: 'Director,Accountant',\r\n            route: 'app.corpcards.index',\r\n            // gaTrackEvent: '[\\'left-menu\\', \\'view-salary\\']',\r\n            dataTranslate: 'aside.nav.CORPCARDS',\r\n            moduleName: 'CorpCards',\r\n            position: 7\r\n        }\r\n    };\r\n\r\n    private subMenu: SubMenu = {\r\n        branches: {\r\n            ngClass: '{active:$state.includes(\\'app.map.index\\')}',\r\n            ngValue: 'branches',\r\n            icon: 'map-marker',\r\n            dataRole: '',\r\n            route: 'app.map.index',\r\n            dataTranslate: 'aside.nav.BranchesAndAtms',\r\n            moduleName: 'Branches',\r\n            position: 0\r\n        },\r\n        promotion: {\r\n            ngClass: '{active:$state.includes(\\'app.prm.products\\')}',\r\n            ngValue: 'promotion',\r\n            icon: 'basket',\r\n            dataRole: '',\r\n            route: 'app.prm.products',\r\n            dataTranslate: 'aside.nav.orderProduct',\r\n            moduleName: 'Promotion',\r\n            position: 0\r\n        },\r\n        calculator: {\r\n            ngClass: '{active:$state.includes(\\'app.payments.calculator\\')}',\r\n            ngValue: 'calculator',\r\n            icon: 'calculator',\r\n            dataRole: '',\r\n            route: 'app.payments.calculator',\r\n            dataTranslate: 'aside.nav.CALCULATOR',\r\n            moduleName: 'Calculator',\r\n            position: 0\r\n        },\r\n        users: {\r\n            ngClass: '{active:$state.includes(\\'app.admin.index\\')}',\r\n            ngValue: 'users',\r\n            icon: 'users',\r\n            dataRole: 'Director,Accountant,UsersManager',\r\n            route: 'app.admin.index',\r\n            dataTranslate: 'aside.nav.EMPLOYEES',\r\n            moduleName: 'Users',\r\n            position: 0\r\n        },\r\n        agents: {\r\n            ngClass: '{active:$state.includes(\\'app.payments.recipients\\')}',\r\n            ngValue: 'agents',\r\n            icon: 'agents',\r\n            dataRole: 'Director,Accountant,PaymentsManager',\r\n            route: 'app.payments.recipients',\r\n            dataTranslate: 'aside.nav.CORRESPONDENTS',\r\n            moduleName: 'ClientAgents',\r\n            position: 0\r\n        },\r\n        instruction: {\r\n            ngClass: '{active:$state.includes(\\'app.docs\\')}',\r\n            ngValue: 'instruction',\r\n            icon: 'book-reader',\r\n            dataRole: '',\r\n            route: 'app.docs.index',\r\n            dataTranslate: 'aside.nav.UserManual',\r\n            moduleName: 'Instruction',\r\n            position: 0\r\n        },\r\n        mobiles: {\r\n            ngClass: '{active:$state.includes(\\'app.mobile.index\\')}',\r\n            ngValue: 'mobiles',\r\n            icon: 'mobile',\r\n            dataRole: '',\r\n            route: 'app.mobile.index',\r\n            dataTranslate: 'aside.nav.MOBILEAPP',\r\n            moduleName: 'Mobiles',\r\n            position: 0\r\n        }\r\n    };\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getMenuForCustomer(customer: Customer): Array<MenuItem> {\r\n        const result = new Array<MenuItem>();\r\n        customer.MenuSettings.forEach((item) => {\r\n            const menuItem = { ...this.menu[item.Name] };\r\n            if (menuItem) {\r\n                menuItem.position = item.Number;\r\n                result.push(menuItem);\r\n            }\r\n        });\r\n\r\n        return result.sort(p => p.position);\r\n    }\r\n\r\n    getSubMenu(): Array<MenuItem> {\r\n        return Object.keys(this.subMenu).map(p => this.subMenu[p]);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { Profile } from './../../@shared/models/profile.model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService extends BaseService {\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor(private http: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  getProfile(): Observable<Profile> {\r\n    return this.http.get<Profile>('api/v1/user/profile').pipe(tap((response: Profile) => console.log(response)));\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthorizedLayoutComponent } from './layout/authorized-layout/authorized-layout.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/auth/logon', pathMatch: 'full' },\r\n  { path: 'auth', redirectTo: '/auth/logon', pathMatch: 'full' },\r\n  { path: 'auth', loadChildren: () => import('./modules/auth/auth.module').then(p => p.AuthModule) },\r\n  {\r\n    path: '',\r\n    component: AuthorizedLayoutComponent,\r\n    children: [\r\n      { path: 'dashboard', loadChildren: () => import('./modules/dashboard/dashboard.module').then(p => p.DashboardModule) },\r\n      { path: 'accounts', loadChildren: () => import('./modules/accounts/accounts.module').then(p => p.AccountsModule) }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { AfterViewInit, Directive, ElementRef, Input, OnDestroy } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[checkState]'\r\n})\r\nexport class CheckStateDirective implements AfterViewInit, OnDestroy {\r\n\r\n  @Input()\r\n  checkState!: string;\r\n\r\n  private originalDisplay: string;\r\n  private eventsSubscription$!: Subscription;\r\n\r\n  constructor(private elementRef: ElementRef, private router: Router) {\r\n    this.originalDisplay = elementRef.nativeElement.style.display;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n    this.elementRef.nativeElement.style.display =\r\n      this.router.url.includes(this.checkState) ? this.originalDisplay : 'none';\r\n\r\n    this.eventsSubscription$ = this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        console.log(this.router.url);\r\n        if (!this.router.url.includes(this.checkState)) {\r\n\r\n          this.elementRef.nativeElement.style.display = 'none';\r\n        }\r\n        else {\r\n          this.elementRef.nativeElement.style.display = this.originalDisplay;\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.eventsSubscription$?.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}