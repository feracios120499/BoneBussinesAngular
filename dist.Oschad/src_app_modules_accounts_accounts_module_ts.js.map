{"version":3,"file":"src_app_modules_accounts_accounts_module_ts.js","mappings":"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","sources":["./src/app/modules/accounts/accounts-routing.module.ts","./src/app/modules/accounts/accounts.module.ts","./src/app/modules/accounts/components/account-row/account-row.component.ts","./src/app/modules/accounts/components/account-row/account-row.component.html","./src/app/modules/accounts/components/accounts-actions/accounts-actions.component.ts","./src/app/modules/accounts/components/accounts-actions/accounts-actions.component.html","./src/app/modules/accounts/components/accounts-header/accounts-header.component.ts","./src/app/modules/accounts/components/accounts-header/accounts-header.component.html","./src/app/modules/accounts/components/accounts-list/accounts-list.component.ts","./src/app/modules/accounts/components/accounts-list/accounts-list.component.html","./src/app/modules/accounts/components/accounts-tabs/accounts-tabs.component.ts","./src/app/modules/accounts/components/accounts-tabs/accounts-tabs.component.html","./src/app/modules/accounts/views/accounts/accounts.component.ts","./src/app/modules/accounts/views/accounts/accounts.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AccountsComponent } from './views/accounts/accounts.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: AccountsComponent },\r\n    { path: ':bankId/:accountId', loadChildren: () => import('./modules/account/account.module').then(p => p.AccountModule) }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AccountsRoutingModule { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CoreModule } from '@core/core.module';\r\nimport { ReactiveComponentModule } from '@ngrx/component';\r\nimport { SharedModule } from 'src/app/@shared/shared.module';\r\nimport { AccountsRoutingModule } from './accounts-routing.module';\r\nimport { AccountsComponent } from './views/accounts/accounts.component';\r\nimport { AccountsHeaderComponent } from './components/accounts-header/accounts-header.component';\r\nimport { AccountsTabsComponent } from './components/accounts-tabs/accounts-tabs.component';\r\nimport { AccountsActionsComponent } from './components/accounts-actions/accounts-actions.component';\r\nimport { AccountsListComponent } from './components/accounts-list/accounts-list.component';\r\nimport { AccountRowComponent } from './components/account-row/account-row.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AccountsComponent,\r\n        AccountsHeaderComponent,\r\n        AccountsTabsComponent,\r\n        AccountsActionsComponent,\r\n        AccountsListComponent,\r\n        AccountRowComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule,\r\n        AccountsRoutingModule,\r\n        ReactiveComponentModule\r\n    ]\r\n})\r\nexport class AccountsModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AccountModel } from 'src/app/@shared/models/account.model';\n\n@Component({\n  selector: 'app-account-row',\n  templateUrl: './account-row.component.html',\n  styleUrls: ['./account-row.component.scss']\n})\nexport class AccountRowComponent implements OnInit {\n\n  @Input() account!: AccountModel;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"account\" mobileClass=\"b1-ellipsis\">\n    <div class=\"account-icon\">\n        <i b1-icon icon=\"university\" class=\"b1-large\" *ngIf=\"!account.IsCardAccount\"\n            [ngbTooltip]=\"'components.acct.currentAccount' | translate\" placement=\"right\"></i>\n        <i b1-icon icon=\"account-card\" class=\"b1-large\" *ngIf=\"account.IsCardAccount\"\n            [ngbTooltip]=\"'components.acct.cardAccount' | translate\" placement=\"right\"></i>\n    </div>\n    <div class=\"account-body  b1-ellipsis\">\n        <div class=\"account-name b1-ellipsis\">\n            {{account.Name}}\n            <div class=\"account-number\" [iban]=\"account.Number\">\n            </div>\n        </div>\n        <div class=\"account-date\">\n            <span>{{'components.acct.acctDetail.turnoverDate' | translate}}</span>\n            <span class=\"b1-ml-2 b1-mr-2\">-</span>\n            <span>{{account.LastActive | date:'dd.MM.yyyy'}}</span>\n        </div>\n        <div class=\"account-amount\">\n            <div class=\"account-balance\">\n                <span>{{account.Balance / 100 | money}}</span>\n                <span class=\"b1-ml-2\">{{account.CurrencyCode}}</span>\n            </div>\n            <div class=\"account-turns\">\n                <div class=\"account-turns-debit\">\n                    <i b1-icon icon=\"chevron-down\"></i>\n                    {{account.DebitTurns / 100 | money}}\n                </div>\n                <div class=\"account-turns-credit\">\n                    <i b1-icon icon=\"chevron-up\"></i>\n                    {{account.CreditTurns / 100 | money}}\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"account-more b1-card__col b1-card__col_dot\" style=\"position: relative;\">\n        <div class=\"dropdown\">\n            <a class=\"b1-card__v-dots\" (click)=\"$event.stopPropagation(); dropdown.open();\">\n            </a>\n\n            <ul class=\"b1-dropdown b1-bg-light\" webClass=\"b1-animate fade-in-up\" role=\"menu\" style=\"width: 360px;\"\n                ngbDropdown #dropdown=\"ngbDropdown\" mobile-more more-auto-direction>\n                <div class=\"b1-modal-close\" webClass=\"hidden\">\n                    <i b1-icon icon=\"cancel\" (click)=\"$event.stopPropagation(); dropdown.close();\"></i>\n                </div>\n                <li class=\"b1-dropdown__item\" *ngIf=\"account.CurrencyCode == 'UAH'\">\n                    <a class=\"b1-dropdown__link\" webClass=\"b1-base\" mobileClass=\"b1-medium\"\n                        ng-click=\"accountsCtrl.accActions.share(account)\">\n                        <i b1-icon icon=\"file-details\" class=\"b1-mr-3 b1-medium\"></i>\n                        {{'components.acct.share' | translate}}\n                    </a>\n                </li>\n                <!-- TODO ADD  IsPayingAccount on backend-->\n                <li class=\"b1-dropdown__item\" ng-if=\"account.IsPayingAccount\">\n                    <a class=\"b1-dropdown__link\" webClass=\"b1-base\" mobileClass=\"b1-medium\"\n                        ng-click=\"accountsCtrl.accActions.createPayment($event, account.Id,'INNER')\">\n                        <i b1-icon icon=\"cards\" class=\"b1-medium b1-mr-3\"></i>\n\n                        <span>{{'components.acct.newPayment' | translate}}</span>\n                        <span>&nbsp;</span>\n                        <span>{{'components.pay.actions.innerPay' | translate}}</span>\n                    </a>\n                </li>\n                <!-- TODO ADD  IsPayingAccount on backend-->\n                <li class=\"b1-dropdown__item\" ng-if=\"account.IsPayingAccount\">\n                    <a class=\"b1-dropdown__link\" webClass=\"b1-base\" mobileClass=\"b1-medium\"\n                        ng-click=\"accountsCtrl.accActions.createPayment($event, account.Id, 'OUTER')\">\n\n                        <i b1-icon icon=\"country\" class=\"b1-medium b1-mr-3\"></i>\n                        <span>{{'components.acct.newPayment' | translate}}</span>\n                        <span>&nbsp;</span>\n                        <span>{{'components.pay.actions.inUrainePay' | translate}}</span>\n                    </a>\n                </li>\n                <!-- TODO ADD  IsPayingAccount on backend-->\n                <!-- TODO ADD Directive role in -->\n                <li class=\"b1-dropdown__item\" ng-if=\"account.IsPayingAccount\">\n                    <a data-role-in=\"Director,Accountant,ForeignCurrencyPaymentsManager\" class=\"b1-dropdown__link\"\n                        webClass=\"b1-base\" mobileClass=\"b1-medium\"\n                        ng-show=\"accountsCtrl.isForeignCurrency(account.CurrencyCode)\" ng-click=\"accountsCtrl.accActions.createPayment($event, account.Id,\n                                   'SWIFT')\">\n\n                        <i b1-icon icon=\"swift\" class=\" b1-mr-3\"></i>\n                        <span>{{'components.acct.newPayment' | translate}}</span>\n                        <span>&nbsp;</span>\n                        <span>{{'components.pay.actions.swift' | translate}}</span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { AcctFilter } from '@store/acct/models/acct-filter.model';\r\nimport { AcctSelectors } from '@store/acct/selectors';\r\nimport { FormGroupState } from 'ngrx-forms';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-accounts-actions',\r\n  templateUrl: './accounts-actions.component.html',\r\n  styleUrls: ['./accounts-actions.component.scss']\r\n})\r\nexport class AccountsActionsComponent implements OnInit {\r\n\r\n  formState$: Observable<FormGroupState<AcctFilter>>;\r\n  constructor(private store: Store) {\r\n    this.formState$ = store.select(AcctSelectors.form).pipe(filter(p => !!p));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","<ng-container *ngrxLet=\"formState$ as formState\">\r\n    <form class=\"b1-page-actions\" novalidate [ngrxFormState]=\"formState\">\r\n        <div class=\"b1-page-actions__left\">\r\n            <div class=\"b1-page-icons\" style=\"margin-left:0\">\r\n                <div class=\"b1-group-checkboxs\">\r\n                    <div class=\"b1-group-checkboxs_item\">\r\n                        <input name=\"currency\" id=\"₴\" type=\"checkbox\" class=\"pointer\"\r\n                            [ngrxFormControlState]=\"formState.controls.currency.controls.UAH\">\r\n                        <label for=\"₴\" class=\"b1-large b1-flex b1-align-center b1-justify-center pointer\">₴</label>\r\n                    </div>\r\n                    <div class=\"b1-group-checkboxs_item\">\r\n                        <input name=\"currency\" id=\"$\" type=\"checkbox\" class=\"pointer\"\r\n                            [ngrxFormControlState]=\"formState.controls.currency.controls.USD\">\r\n                        <label for=\"$\" class=\"b1-large b1-flex b1-align-center b1-justify-center pointer\">$</label>\r\n                    </div>\r\n                    <div class=\"b1-group-checkboxs_item\">\r\n                        <input name=\"currency\" id=\"€\" type=\"checkbox\" class=\"pointer\"\r\n                            [ngrxFormControlState]=\"formState.controls.currency.controls.EUR\">\r\n                        <label for=\"€\" class=\"b1-large b1-flex b1-align-center b1-justify-center pointer\">€</label>\r\n                    </div>\r\n                    <div class=\"b1-group-checkboxs_item\">\r\n                        <input name=\"currency\" id=\"other\" type=\"checkbox\" class=\"pointer\"\r\n                            [ngrxFormControlState]=\"formState.controls.currency.controls.OTHER\">\r\n                        <label for=\"other\"\r\n                            class=\"b1-large b1-flex b1-align-center b1-justify-center pointer\">...</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"b1-page-actions__right\" name=\"search\">\r\n            <div class=\"b1-page-inputWithIcon width-100\">\r\n                <input class=\"b1-input__control without-label b1-base b1-page-input resize\" name=\"search\" id=\"search\"\r\n                    type=\"text\" placeholder=\"пошук\" [ngrxFormControlState]=\"formState.controls.filter\" />\r\n                <label b1-icon icon=\"search\" class=\"resize\" for=\"search\"></label>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</ng-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-accounts-header',\n  templateUrl: './accounts-header.component.html',\n  styleUrls: ['./accounts-header.component.scss']\n})\nexport class AccountsHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"b1-page-title\">\n    <div class=\"b1-title2\">\n        {{'aside.nav.ACCOUNTS' | translate}}\n    </div>\n</div>","import { AfterViewInit, Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AccountModel } from 'src/app/@shared/models/account.model';\nimport { AcctActions } from '@store/acct/actions';\nimport { AcctSelectors } from '@store/acct/selectors';\n\n@Component({\n  selector: 'app-accounts-list',\n  templateUrl: './accounts-list.component.html',\n  styleUrls: ['./accounts-list.component.scss']\n})\nexport class AccountsListComponent implements AfterViewInit {\n\n  constructor(private store: Store) { }\n\n  accounts$ = this.store.select(AcctSelectors.accountsOnTab);\n  filter$ = this.store.select(AcctSelectors.filterAccounts);\n  filterCurrency$ = this.store.select(AcctSelectors.filterCurrency);\n  isLoadingAccounts$ = this.store.select(AcctSelectors.isLoadingAccounts);\n  // isLoadingAccounts$ = of(true);\n  ngAfterViewInit(): void {\n  }\n\n  toDetail(account: AccountModel): void {\n    this.store.dispatch(AcctActions.goToDetail({ account }));\n  }\n}\n","<ng-container *ngrxLet=\"accounts$ as accounts\">\n    <ng-container *ngrxLet=\"isLoadingAccounts$ as isLoading\">\n        <ng-scrollbar class=\"virtual-scroll b1-page-data\" *ngIf=\"!isLoading\">\n            <cdk-virtual-scroll-viewport scrollViewport smoothScroll autosize>\n                <app-account-row (click)=\"toDetail(account)\"\n                    *cdkVirtualFor=\"let account of accounts | accountsFilter :(filter$ | ngrxPush):(filterCurrency$ | ngrxPush)\"\n                    class=\"b1-page-data__row account-row\" [account]=\"account\">\n                </app-account-row>\n            </cdk-virtual-scroll-viewport>\n        </ng-scrollbar>\n        <ng-container *ngIf=\"isLoading\">\n            <div class=\"b1-page-data b1-page-data_skeleton\">\n                <div class=\"b1-page-data__row skeleton account-row\" *ngFor=\"let number of [0,1,2,3,4,5,6,]\">\n                    <div class=\"account-skeleton\">\n                        <div class=\"account-skeleton-icon\">\n                            <ngx-skeleton-loader animation=\"pulse\">\n\n                            </ngx-skeleton-loader>\n                        </div>\n                        <div class=\"account-skeleton-body\">\n                            <div class=\"account-skeleton-name b1-ellipsis\">\n                                <ngx-skeleton-loader animation=\"pulse\">\n\n                                </ngx-skeleton-loader>\n                                <div class=\"account-skeleton-number\">\n                                    <ngx-skeleton-loader animation=\"pulse\">\n\n                                    </ngx-skeleton-loader>\n                                </div>\n\n                            </div>\n                            <div class=\"account-skeleton-date\">\n                                <ngx-skeleton-loader animation=\"pulse\">\n\n                                </ngx-skeleton-loader>\n                            </div>\n                            <div class=\"account-skeleton-amount\">\n                                <div class=\"account-skeleton-balance\">\n                                    <ngx-skeleton-loader animation=\"pulse\">\n\n                                    </ngx-skeleton-loader>\n                                </div>\n                                <div class=\"account-skeleton-turns\">\n                                    <div class=\"account-skeleton-turns-debit\">\n                                        <ngx-skeleton-loader animation=\"pulse\">\n\n                                        </ngx-skeleton-loader>\n                                    </div>\n                                    <div class=\"account-skeleton-turns-credit\">\n                                        <ngx-skeleton-loader animation=\"pulse\">\n\n                                        </ngx-skeleton-loader>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </ng-container>\n    </ng-container>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { AccountTab } from '@modules/accounts/models/acct-tab.enum';\nimport { Store } from '@ngrx/store';\nimport { AcctActions } from '@store/acct/actions';\nimport { AcctSelectors } from '@store/acct/selectors';\n\n\n@Component({\n  selector: 'app-accounts-tabs',\n  templateUrl: './accounts-tabs.component.html',\n  styleUrls: ['./accounts-tabs.component.scss']\n})\nexport class AccountsTabsComponent implements OnInit {\n\n  constructor(private store: Store) { }\n  accountTab = AccountTab;\n\n  countActiveAccounts$ = this.store.select(AcctSelectors.countActiveAccounts);\n  countClosedAccounts$ = this.store.select(AcctSelectors.countClosedAccounts);\n  currentTab$ = this.store.select(AcctSelectors.currentTab);\n\n  ngOnInit(): void {\n    this.setTab(AccountTab.Active);\n  }\n\n  setTab(tab: AccountTab): void {\n    this.store.dispatch(AcctActions.setTab({ tab }));\n  }\n\n  selectTab(tabString: string): void {\n    const tab = tabString as keyof typeof AccountTab;\n    this.setTab(AccountTab[tab]);\n  }\n\n}\n","<ng-container *ngrxLet=\"currentTab$ as currentTab\">\n    <ng-container *ngrxLet=\"countActiveAccounts$ as countActiveAccounts\">\n        <ng-container *ngrxLet=\"countClosedAccounts$ as countClosedAccounts\">\n            <ul class=\"b1-page-tabs b1-base b1-bold accounts-tabs\">\n                <li class=\"b1-page-tabs__item\" [class.active]=\"currentTab == accountTab.Active\">\n                    <a (click)=\"setTab(accountTab.Active)\" class=\"b1-filter-block__link\">\n                        <span class=\"b1-mr-2\">{{'components.acct.active' | translate}}</span>\n                        <span class=\"b1-page-badge b1-page-badge__success\"\n                            [class.bounce-in]=\"countActiveAccounts != 0\">{{countActiveAccounts}}</span>\n                    </a>\n                </li>\n                <li class=\"b1-page-tabs__item\" [class.active]=\"currentTab == accountTab.Closed\">\n                    <a (click)=\"setTab(accountTab.Closed)\" class=\"b1-filter-block__link\">\n                        <span class=\"b1-mr-2\">{{'components.acct.closed' | translate}}</span>\n                        <span class=\"b1-page-badge b1-page-badge__error\"\n                            [class.bounce-in]=\"countClosedAccounts != 0\">{{countClosedAccounts}}</span>\n                    </a>\n                </li>\n            </ul>\n            <div class=\"accounts-tabs-mobile\">\n                <div *ngIf=\"currentTab == accountTab.Active\">\n                    <span class=\"b1-mr-2\">{{'components.acct.active' | translate}}</span>\n                    <span class=\"b1-page-badge\"\n                        [class.bounce-in]=\"countActiveAccounts != 0\">{{countActiveAccounts}}</span>\n                </div>\n                <div *ngIf=\"currentTab == accountTab.Closed\">\n                    <span class=\"b1-mr-2\">{{'components.acct.closed' | translate}}</span>\n                    <span class=\"b1-page-badge\"\n                        [class.bounce-in]=\"countClosedAccounts != 0\">{{countClosedAccounts}}</span>\n                </div>\n                <i b1-icon icon=\"chevron-down\" class=\"accounts-tabs-list_chevron\"></i>\n                <select name=\"tabs\" id=\"tabs\" class=\"accounts-tabs-list\" #selectList\n                    (change)=\"selectTab(selectList.value)\">\n                    <option [value]=\"accountTab.Active\">\n                        {{'components.acct.active' | translate}}\n                        ({{countActiveAccounts}})\n                    </option>\n                    <option [value]=\"accountTab.Closed\">\n                        {{'components.acct.closed' | translate}}\n                        ({{countClosedAccounts}})\n                    </option>\n                </select>\n            </div>\n        </ng-container>\n\n    </ng-container>\n\n\n</ng-container>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AcctActions } from '@store/acct/actions';\nimport { AcctDetailsActions } from '@store/acct/details/actions';\nimport { AcctSelectors } from '@store/acct/selectors';\n\n\n@Component({\n  selector: 'app-accounts',\n  templateUrl: './accounts.component.html',\n  styleUrls: ['./accounts.component.scss']\n})\nexport class AccountsComponent implements OnInit, OnDestroy {\n\n  navigationSubscription;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n  ) {\n    // subscribe to the router events. Store the subscription so we can\n    // unsubscribe later.\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.init();\n      }\n    });\n  }\n  accounts$ = this.store.select(AcctSelectors.accountsSelector);\n  isLoadingAccounts$ = this.store.select(AcctSelectors.isLoadingAccounts);\n  ngOnInit(): void {\n  }\n\n  init(): void {\n    //this.store.dispatch(AcctDetailsActions.initDetails());\n    this.store.dispatch(AcctActions.loadAccounts({ reload: true }));\n  }\n\n  ngOnDestroy(): void {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n\n\n\n\n}\n","<div class=\"b1-wrapper no-wrap-xs b1-full-screen\">\n    <app-accounts-header></app-accounts-header>\n\n    <div style=\"position: relative;\" class=\"full-screen\">\n        <app-accounts-tabs></app-accounts-tabs>\n        <div class=\"b1-page-card b1-bg-light\">\n            <app-accounts-actions></app-accounts-actions>\n\n            <b1-card-loader [isLoading]=\"isLoadingAccounts$\"></b1-card-loader>\n            <app-accounts-list></app-accounts-list>\n        </div>\n    </div>\n\n</div>"],"names":[],"sourceRoot":"webpack:///"}